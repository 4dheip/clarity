package com.dota2.proto;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_usermessages.proto

public final class DotaUsermessages {
  private DotaUsermessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum EDotaUserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    DOTA_UM_AddUnitToSelection(0, 64),
    DOTA_UM_AIDebugLine(1, 65),
    DOTA_UM_ChatEvent(2, 66),
    DOTA_UM_CombatHeroPositions(3, 67),
    DOTA_UM_CombatLogData(4, 68),
    DOTA_UM_CombatLogShowDeath(5, 70),
    DOTA_UM_CreateLinearProjectile(6, 71),
    DOTA_UM_DestroyLinearProjectile(7, 72),
    DOTA_UM_DodgeTrackingProjectiles(8, 73),
    DOTA_UM_GlobalLightColor(9, 74),
    DOTA_UM_GlobalLightDirection(10, 75),
    DOTA_UM_InvalidCommand(11, 76),
    DOTA_UM_LocationPing(12, 77),
    DOTA_UM_MapLine(13, 78),
    DOTA_UM_MiniKillCamInfo(14, 79),
    DOTA_UM_MinimapDebugPoint(15, 80),
    DOTA_UM_MinimapEvent(16, 81),
    DOTA_UM_NevermoreRequiem(17, 82),
    DOTA_UM_OverheadEvent(18, 83),
    DOTA_UM_SetNextAutobuyItem(19, 84),
    DOTA_UM_SharedCooldown(20, 85),
    DOTA_UM_SpectatorPlayerClick(21, 86),
    DOTA_UM_TutorialTipInfo(22, 87),
    DOTA_UM_UnitEvent(23, 88),
    DOTA_UM_ParticleManager(24, 89),
    DOTA_UM_BotChat(25, 90),
    DOTA_UM_HudError(26, 91),
    DOTA_UM_ItemPurchased(27, 92),
    DOTA_UM_Ping(28, 93),
    DOTA_UM_ItemFound(29, 94),
    DOTA_UM_CharacterSpeakConcept(30, 95),
    DOTA_UM_SwapVerify(31, 96),
    DOTA_UM_WorldLine(32, 97),
    DOTA_UM_TournamentDrop(33, 98),
    DOTA_UM_ItemAlert(34, 99),
    DOTA_UM_HalloweenDrops(35, 100),
    DOTA_UM_ChatWheel(36, 101),
    DOTA_UM_ReceivedXmasGift(37, 102),
    DOTA_UM_UpdateSharedContent(38, 103),
    DOTA_UM_TutorialRequestExp(39, 104),
    DOTA_UM_TutorialPingMinimap(40, 105),
    DOTA_UM_GamerulesStateChanged(41, 106),
    DOTA_UM_ShowSurvey(42, 107),
    DOTA_UM_TutorialFade(43, 108),
    DOTA_UM_AddQuestLogEntry(44, 109),
    DOTA_UM_SendStatPopup(45, 110),
    DOTA_UM_TutorialFinish(46, 111),
    DOTA_UM_SendRoshanPopup(47, 112),
    DOTA_UM_SendGenericToolTip(48, 113),
    DOTA_UM_SendFinalGold(49, 114),
    DOTA_UM_CustomMsg(50, 115),
    DOTA_UM_CoachHUDPing(51, 116),
    DOTA_UM_ClientLoadGridNav(52, 117),
    ;
    
    public static final int DOTA_UM_AddUnitToSelection_VALUE = 64;
    public static final int DOTA_UM_AIDebugLine_VALUE = 65;
    public static final int DOTA_UM_ChatEvent_VALUE = 66;
    public static final int DOTA_UM_CombatHeroPositions_VALUE = 67;
    public static final int DOTA_UM_CombatLogData_VALUE = 68;
    public static final int DOTA_UM_CombatLogShowDeath_VALUE = 70;
    public static final int DOTA_UM_CreateLinearProjectile_VALUE = 71;
    public static final int DOTA_UM_DestroyLinearProjectile_VALUE = 72;
    public static final int DOTA_UM_DodgeTrackingProjectiles_VALUE = 73;
    public static final int DOTA_UM_GlobalLightColor_VALUE = 74;
    public static final int DOTA_UM_GlobalLightDirection_VALUE = 75;
    public static final int DOTA_UM_InvalidCommand_VALUE = 76;
    public static final int DOTA_UM_LocationPing_VALUE = 77;
    public static final int DOTA_UM_MapLine_VALUE = 78;
    public static final int DOTA_UM_MiniKillCamInfo_VALUE = 79;
    public static final int DOTA_UM_MinimapDebugPoint_VALUE = 80;
    public static final int DOTA_UM_MinimapEvent_VALUE = 81;
    public static final int DOTA_UM_NevermoreRequiem_VALUE = 82;
    public static final int DOTA_UM_OverheadEvent_VALUE = 83;
    public static final int DOTA_UM_SetNextAutobuyItem_VALUE = 84;
    public static final int DOTA_UM_SharedCooldown_VALUE = 85;
    public static final int DOTA_UM_SpectatorPlayerClick_VALUE = 86;
    public static final int DOTA_UM_TutorialTipInfo_VALUE = 87;
    public static final int DOTA_UM_UnitEvent_VALUE = 88;
    public static final int DOTA_UM_ParticleManager_VALUE = 89;
    public static final int DOTA_UM_BotChat_VALUE = 90;
    public static final int DOTA_UM_HudError_VALUE = 91;
    public static final int DOTA_UM_ItemPurchased_VALUE = 92;
    public static final int DOTA_UM_Ping_VALUE = 93;
    public static final int DOTA_UM_ItemFound_VALUE = 94;
    public static final int DOTA_UM_CharacterSpeakConcept_VALUE = 95;
    public static final int DOTA_UM_SwapVerify_VALUE = 96;
    public static final int DOTA_UM_WorldLine_VALUE = 97;
    public static final int DOTA_UM_TournamentDrop_VALUE = 98;
    public static final int DOTA_UM_ItemAlert_VALUE = 99;
    public static final int DOTA_UM_HalloweenDrops_VALUE = 100;
    public static final int DOTA_UM_ChatWheel_VALUE = 101;
    public static final int DOTA_UM_ReceivedXmasGift_VALUE = 102;
    public static final int DOTA_UM_UpdateSharedContent_VALUE = 103;
    public static final int DOTA_UM_TutorialRequestExp_VALUE = 104;
    public static final int DOTA_UM_TutorialPingMinimap_VALUE = 105;
    public static final int DOTA_UM_GamerulesStateChanged_VALUE = 106;
    public static final int DOTA_UM_ShowSurvey_VALUE = 107;
    public static final int DOTA_UM_TutorialFade_VALUE = 108;
    public static final int DOTA_UM_AddQuestLogEntry_VALUE = 109;
    public static final int DOTA_UM_SendStatPopup_VALUE = 110;
    public static final int DOTA_UM_TutorialFinish_VALUE = 111;
    public static final int DOTA_UM_SendRoshanPopup_VALUE = 112;
    public static final int DOTA_UM_SendGenericToolTip_VALUE = 113;
    public static final int DOTA_UM_SendFinalGold_VALUE = 114;
    public static final int DOTA_UM_CustomMsg_VALUE = 115;
    public static final int DOTA_UM_CoachHUDPing_VALUE = 116;
    public static final int DOTA_UM_ClientLoadGridNav_VALUE = 117;
    
    
    public final int getNumber() { return value; }
    
    public static EDotaUserMessages valueOf(int value) {
      switch (value) {
        case 64: return DOTA_UM_AddUnitToSelection;
        case 65: return DOTA_UM_AIDebugLine;
        case 66: return DOTA_UM_ChatEvent;
        case 67: return DOTA_UM_CombatHeroPositions;
        case 68: return DOTA_UM_CombatLogData;
        case 70: return DOTA_UM_CombatLogShowDeath;
        case 71: return DOTA_UM_CreateLinearProjectile;
        case 72: return DOTA_UM_DestroyLinearProjectile;
        case 73: return DOTA_UM_DodgeTrackingProjectiles;
        case 74: return DOTA_UM_GlobalLightColor;
        case 75: return DOTA_UM_GlobalLightDirection;
        case 76: return DOTA_UM_InvalidCommand;
        case 77: return DOTA_UM_LocationPing;
        case 78: return DOTA_UM_MapLine;
        case 79: return DOTA_UM_MiniKillCamInfo;
        case 80: return DOTA_UM_MinimapDebugPoint;
        case 81: return DOTA_UM_MinimapEvent;
        case 82: return DOTA_UM_NevermoreRequiem;
        case 83: return DOTA_UM_OverheadEvent;
        case 84: return DOTA_UM_SetNextAutobuyItem;
        case 85: return DOTA_UM_SharedCooldown;
        case 86: return DOTA_UM_SpectatorPlayerClick;
        case 87: return DOTA_UM_TutorialTipInfo;
        case 88: return DOTA_UM_UnitEvent;
        case 89: return DOTA_UM_ParticleManager;
        case 90: return DOTA_UM_BotChat;
        case 91: return DOTA_UM_HudError;
        case 92: return DOTA_UM_ItemPurchased;
        case 93: return DOTA_UM_Ping;
        case 94: return DOTA_UM_ItemFound;
        case 95: return DOTA_UM_CharacterSpeakConcept;
        case 96: return DOTA_UM_SwapVerify;
        case 97: return DOTA_UM_WorldLine;
        case 98: return DOTA_UM_TournamentDrop;
        case 99: return DOTA_UM_ItemAlert;
        case 100: return DOTA_UM_HalloweenDrops;
        case 101: return DOTA_UM_ChatWheel;
        case 102: return DOTA_UM_ReceivedXmasGift;
        case 103: return DOTA_UM_UpdateSharedContent;
        case 104: return DOTA_UM_TutorialRequestExp;
        case 105: return DOTA_UM_TutorialPingMinimap;
        case 106: return DOTA_UM_GamerulesStateChanged;
        case 107: return DOTA_UM_ShowSurvey;
        case 108: return DOTA_UM_TutorialFade;
        case 109: return DOTA_UM_AddQuestLogEntry;
        case 110: return DOTA_UM_SendStatPopup;
        case 111: return DOTA_UM_TutorialFinish;
        case 112: return DOTA_UM_SendRoshanPopup;
        case 113: return DOTA_UM_SendGenericToolTip;
        case 114: return DOTA_UM_SendFinalGold;
        case 115: return DOTA_UM_CustomMsg;
        case 116: return DOTA_UM_CoachHUDPing;
        case 117: return DOTA_UM_ClientLoadGridNav;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>() {
            public EDotaUserMessages findValueByNumber(int number) {
              return EDotaUserMessages.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final EDotaUserMessages[] VALUES = {
      DOTA_UM_AddUnitToSelection, DOTA_UM_AIDebugLine, DOTA_UM_ChatEvent, DOTA_UM_CombatHeroPositions, DOTA_UM_CombatLogData, DOTA_UM_CombatLogShowDeath, DOTA_UM_CreateLinearProjectile, DOTA_UM_DestroyLinearProjectile, DOTA_UM_DodgeTrackingProjectiles, DOTA_UM_GlobalLightColor, DOTA_UM_GlobalLightDirection, DOTA_UM_InvalidCommand, DOTA_UM_LocationPing, DOTA_UM_MapLine, DOTA_UM_MiniKillCamInfo, DOTA_UM_MinimapDebugPoint, DOTA_UM_MinimapEvent, DOTA_UM_NevermoreRequiem, DOTA_UM_OverheadEvent, DOTA_UM_SetNextAutobuyItem, DOTA_UM_SharedCooldown, DOTA_UM_SpectatorPlayerClick, DOTA_UM_TutorialTipInfo, DOTA_UM_UnitEvent, DOTA_UM_ParticleManager, DOTA_UM_BotChat, DOTA_UM_HudError, DOTA_UM_ItemPurchased, DOTA_UM_Ping, DOTA_UM_ItemFound, DOTA_UM_CharacterSpeakConcept, DOTA_UM_SwapVerify, DOTA_UM_WorldLine, DOTA_UM_TournamentDrop, DOTA_UM_ItemAlert, DOTA_UM_HalloweenDrops, DOTA_UM_ChatWheel, DOTA_UM_ReceivedXmasGift, DOTA_UM_UpdateSharedContent, DOTA_UM_TutorialRequestExp, DOTA_UM_TutorialPingMinimap, DOTA_UM_GamerulesStateChanged, DOTA_UM_ShowSurvey, DOTA_UM_TutorialFade, DOTA_UM_AddQuestLogEntry, DOTA_UM_SendStatPopup, DOTA_UM_TutorialFinish, DOTA_UM_SendRoshanPopup, DOTA_UM_SendGenericToolTip, DOTA_UM_SendFinalGold, DOTA_UM_CustomMsg, DOTA_UM_CoachHUDPing, DOTA_UM_ClientLoadGridNav, 
    };
    
    public static EDotaUserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private EDotaUserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:EDotaUserMessages)
  }
  
  public enum DOTA_CHAT_MESSAGE
      implements com.google.protobuf.ProtocolMessageEnum {
    CHAT_MESSAGE_INVALID(0, -1),
    CHAT_MESSAGE_HERO_KILL(1, 0),
    CHAT_MESSAGE_HERO_DENY(2, 1),
    CHAT_MESSAGE_BARRACKS_KILL(3, 2),
    CHAT_MESSAGE_TOWER_KILL(4, 3),
    CHAT_MESSAGE_TOWER_DENY(5, 4),
    CHAT_MESSAGE_FIRSTBLOOD(6, 5),
    CHAT_MESSAGE_STREAK_KILL(7, 6),
    CHAT_MESSAGE_BUYBACK(8, 7),
    CHAT_MESSAGE_AEGIS(9, 8),
    CHAT_MESSAGE_ROSHAN_KILL(10, 9),
    CHAT_MESSAGE_COURIER_LOST(11, 10),
    CHAT_MESSAGE_COURIER_RESPAWNED(12, 11),
    CHAT_MESSAGE_GLYPH_USED(13, 12),
    CHAT_MESSAGE_ITEM_PURCHASE(14, 13),
    CHAT_MESSAGE_CONNECT(15, 14),
    CHAT_MESSAGE_DISCONNECT(16, 15),
    CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT(17, 16),
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING(18, 17),
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL(19, 18),
    CHAT_MESSAGE_RECONNECT(20, 19),
    CHAT_MESSAGE_ABANDON(21, 20),
    CHAT_MESSAGE_SAFE_TO_LEAVE(22, 21),
    CHAT_MESSAGE_RUNE_PICKUP(23, 22),
    CHAT_MESSAGE_RUNE_BOTTLE(24, 23),
    CHAT_MESSAGE_INTHEBAG(25, 24),
    CHAT_MESSAGE_SECRETSHOP(26, 25),
    CHAT_MESSAGE_ITEM_AUTOPURCHASED(27, 26),
    CHAT_MESSAGE_ITEMS_COMBINED(28, 27),
    CHAT_MESSAGE_SUPER_CREEPS(29, 28),
    CHAT_MESSAGE_CANT_USE_ACTION_ITEM(30, 29),
    CHAT_MESSAGE_CHARGES_EXHAUSTED(31, 30),
    CHAT_MESSAGE_CANTPAUSE(32, 31),
    CHAT_MESSAGE_NOPAUSESLEFT(33, 32),
    CHAT_MESSAGE_CANTPAUSEYET(34, 33),
    CHAT_MESSAGE_PAUSED(35, 34),
    CHAT_MESSAGE_UNPAUSE_COUNTDOWN(36, 35),
    CHAT_MESSAGE_UNPAUSED(37, 36),
    CHAT_MESSAGE_AUTO_UNPAUSED(38, 37),
    CHAT_MESSAGE_YOUPAUSED(39, 38),
    CHAT_MESSAGE_CANTUNPAUSETEAM(40, 39),
    CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER(41, 40),
    CHAT_MESSAGE_VOICE_TEXT_BANNED(42, 41),
    CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME(43, 42),
    CHAT_MESSAGE_REPORT_REMINDER(44, 43),
    CHAT_MESSAGE_ECON_ITEM(45, 44),
    CHAT_MESSAGE_TAUNT(46, 45),
    CHAT_MESSAGE_RANDOM(47, 46),
    CHAT_MESSAGE_RD_TURN(48, 47),
    CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_EARLY(49, 48),
    CHAT_MESSAGE_DROP_RATE_BONUS(50, 49),
    CHAT_MESSAGE_NO_BATTLE_POINTS(51, 50),
    CHAT_MESSAGE_DENIED_AEGIS(52, 51),
    CHAT_MESSAGE_INFORMATIONAL(53, 52),
    CHAT_MESSAGE_AEGIS_STOLEN(54, 53),
    CHAT_MESSAGE_ROSHAN_CANDY(55, 54),
    CHAT_MESSAGE_ITEM_GIFTED(56, 55),
    CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL(57, 56),
    CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED(58, 57),
    CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED(59, 58),
    CHAT_MESSAGE_HOLDOUT_WALL_FINISHED(60, 59),
    CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK(61, 60),
    CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK_EARLY(62, 61),
    CHAT_MESSAGE_ABANDON_LIMITED_HERO(63, 62),
    CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION(64, 63),
    CHAT_MESSAGE_DISCONNECT_LIMITED_HERO(65, 64),
    ;
    
    public static final int CHAT_MESSAGE_INVALID_VALUE = -1;
    public static final int CHAT_MESSAGE_HERO_KILL_VALUE = 0;
    public static final int CHAT_MESSAGE_HERO_DENY_VALUE = 1;
    public static final int CHAT_MESSAGE_BARRACKS_KILL_VALUE = 2;
    public static final int CHAT_MESSAGE_TOWER_KILL_VALUE = 3;
    public static final int CHAT_MESSAGE_TOWER_DENY_VALUE = 4;
    public static final int CHAT_MESSAGE_FIRSTBLOOD_VALUE = 5;
    public static final int CHAT_MESSAGE_STREAK_KILL_VALUE = 6;
    public static final int CHAT_MESSAGE_BUYBACK_VALUE = 7;
    public static final int CHAT_MESSAGE_AEGIS_VALUE = 8;
    public static final int CHAT_MESSAGE_ROSHAN_KILL_VALUE = 9;
    public static final int CHAT_MESSAGE_COURIER_LOST_VALUE = 10;
    public static final int CHAT_MESSAGE_COURIER_RESPAWNED_VALUE = 11;
    public static final int CHAT_MESSAGE_GLYPH_USED_VALUE = 12;
    public static final int CHAT_MESSAGE_ITEM_PURCHASE_VALUE = 13;
    public static final int CHAT_MESSAGE_CONNECT_VALUE = 14;
    public static final int CHAT_MESSAGE_DISCONNECT_VALUE = 15;
    public static final int CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT_VALUE = 16;
    public static final int CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_VALUE = 17;
    public static final int CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL_VALUE = 18;
    public static final int CHAT_MESSAGE_RECONNECT_VALUE = 19;
    public static final int CHAT_MESSAGE_ABANDON_VALUE = 20;
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_VALUE = 21;
    public static final int CHAT_MESSAGE_RUNE_PICKUP_VALUE = 22;
    public static final int CHAT_MESSAGE_RUNE_BOTTLE_VALUE = 23;
    public static final int CHAT_MESSAGE_INTHEBAG_VALUE = 24;
    public static final int CHAT_MESSAGE_SECRETSHOP_VALUE = 25;
    public static final int CHAT_MESSAGE_ITEM_AUTOPURCHASED_VALUE = 26;
    public static final int CHAT_MESSAGE_ITEMS_COMBINED_VALUE = 27;
    public static final int CHAT_MESSAGE_SUPER_CREEPS_VALUE = 28;
    public static final int CHAT_MESSAGE_CANT_USE_ACTION_ITEM_VALUE = 29;
    public static final int CHAT_MESSAGE_CHARGES_EXHAUSTED_VALUE = 30;
    public static final int CHAT_MESSAGE_CANTPAUSE_VALUE = 31;
    public static final int CHAT_MESSAGE_NOPAUSESLEFT_VALUE = 32;
    public static final int CHAT_MESSAGE_CANTPAUSEYET_VALUE = 33;
    public static final int CHAT_MESSAGE_PAUSED_VALUE = 34;
    public static final int CHAT_MESSAGE_UNPAUSE_COUNTDOWN_VALUE = 35;
    public static final int CHAT_MESSAGE_UNPAUSED_VALUE = 36;
    public static final int CHAT_MESSAGE_AUTO_UNPAUSED_VALUE = 37;
    public static final int CHAT_MESSAGE_YOUPAUSED_VALUE = 38;
    public static final int CHAT_MESSAGE_CANTUNPAUSETEAM_VALUE = 39;
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_VALUE = 40;
    public static final int CHAT_MESSAGE_VOICE_TEXT_BANNED_VALUE = 41;
    public static final int CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME_VALUE = 42;
    public static final int CHAT_MESSAGE_REPORT_REMINDER_VALUE = 43;
    public static final int CHAT_MESSAGE_ECON_ITEM_VALUE = 44;
    public static final int CHAT_MESSAGE_TAUNT_VALUE = 45;
    public static final int CHAT_MESSAGE_RANDOM_VALUE = 46;
    public static final int CHAT_MESSAGE_RD_TURN_VALUE = 47;
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_EARLY_VALUE = 48;
    public static final int CHAT_MESSAGE_DROP_RATE_BONUS_VALUE = 49;
    public static final int CHAT_MESSAGE_NO_BATTLE_POINTS_VALUE = 50;
    public static final int CHAT_MESSAGE_DENIED_AEGIS_VALUE = 51;
    public static final int CHAT_MESSAGE_INFORMATIONAL_VALUE = 52;
    public static final int CHAT_MESSAGE_AEGIS_STOLEN_VALUE = 53;
    public static final int CHAT_MESSAGE_ROSHAN_CANDY_VALUE = 54;
    public static final int CHAT_MESSAGE_ITEM_GIFTED_VALUE = 55;
    public static final int CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL_VALUE = 56;
    public static final int CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED_VALUE = 57;
    public static final int CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED_VALUE = 58;
    public static final int CHAT_MESSAGE_HOLDOUT_WALL_FINISHED_VALUE = 59;
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK_VALUE = 60;
    public static final int CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK_EARLY_VALUE = 61;
    public static final int CHAT_MESSAGE_ABANDON_LIMITED_HERO_VALUE = 62;
    public static final int CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION_VALUE = 63;
    public static final int CHAT_MESSAGE_DISCONNECT_LIMITED_HERO_VALUE = 64;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_CHAT_MESSAGE valueOf(int value) {
      switch (value) {
        case -1: return CHAT_MESSAGE_INVALID;
        case 0: return CHAT_MESSAGE_HERO_KILL;
        case 1: return CHAT_MESSAGE_HERO_DENY;
        case 2: return CHAT_MESSAGE_BARRACKS_KILL;
        case 3: return CHAT_MESSAGE_TOWER_KILL;
        case 4: return CHAT_MESSAGE_TOWER_DENY;
        case 5: return CHAT_MESSAGE_FIRSTBLOOD;
        case 6: return CHAT_MESSAGE_STREAK_KILL;
        case 7: return CHAT_MESSAGE_BUYBACK;
        case 8: return CHAT_MESSAGE_AEGIS;
        case 9: return CHAT_MESSAGE_ROSHAN_KILL;
        case 10: return CHAT_MESSAGE_COURIER_LOST;
        case 11: return CHAT_MESSAGE_COURIER_RESPAWNED;
        case 12: return CHAT_MESSAGE_GLYPH_USED;
        case 13: return CHAT_MESSAGE_ITEM_PURCHASE;
        case 14: return CHAT_MESSAGE_CONNECT;
        case 15: return CHAT_MESSAGE_DISCONNECT;
        case 16: return CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT;
        case 17: return CHAT_MESSAGE_DISCONNECT_TIME_REMAINING;
        case 18: return CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL;
        case 19: return CHAT_MESSAGE_RECONNECT;
        case 20: return CHAT_MESSAGE_ABANDON;
        case 21: return CHAT_MESSAGE_SAFE_TO_LEAVE;
        case 22: return CHAT_MESSAGE_RUNE_PICKUP;
        case 23: return CHAT_MESSAGE_RUNE_BOTTLE;
        case 24: return CHAT_MESSAGE_INTHEBAG;
        case 25: return CHAT_MESSAGE_SECRETSHOP;
        case 26: return CHAT_MESSAGE_ITEM_AUTOPURCHASED;
        case 27: return CHAT_MESSAGE_ITEMS_COMBINED;
        case 28: return CHAT_MESSAGE_SUPER_CREEPS;
        case 29: return CHAT_MESSAGE_CANT_USE_ACTION_ITEM;
        case 30: return CHAT_MESSAGE_CHARGES_EXHAUSTED;
        case 31: return CHAT_MESSAGE_CANTPAUSE;
        case 32: return CHAT_MESSAGE_NOPAUSESLEFT;
        case 33: return CHAT_MESSAGE_CANTPAUSEYET;
        case 34: return CHAT_MESSAGE_PAUSED;
        case 35: return CHAT_MESSAGE_UNPAUSE_COUNTDOWN;
        case 36: return CHAT_MESSAGE_UNPAUSED;
        case 37: return CHAT_MESSAGE_AUTO_UNPAUSED;
        case 38: return CHAT_MESSAGE_YOUPAUSED;
        case 39: return CHAT_MESSAGE_CANTUNPAUSETEAM;
        case 40: return CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER;
        case 41: return CHAT_MESSAGE_VOICE_TEXT_BANNED;
        case 42: return CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME;
        case 43: return CHAT_MESSAGE_REPORT_REMINDER;
        case 44: return CHAT_MESSAGE_ECON_ITEM;
        case 45: return CHAT_MESSAGE_TAUNT;
        case 46: return CHAT_MESSAGE_RANDOM;
        case 47: return CHAT_MESSAGE_RD_TURN;
        case 48: return CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_EARLY;
        case 49: return CHAT_MESSAGE_DROP_RATE_BONUS;
        case 50: return CHAT_MESSAGE_NO_BATTLE_POINTS;
        case 51: return CHAT_MESSAGE_DENIED_AEGIS;
        case 52: return CHAT_MESSAGE_INFORMATIONAL;
        case 53: return CHAT_MESSAGE_AEGIS_STOLEN;
        case 54: return CHAT_MESSAGE_ROSHAN_CANDY;
        case 55: return CHAT_MESSAGE_ITEM_GIFTED;
        case 56: return CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL;
        case 57: return CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED;
        case 58: return CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED;
        case 59: return CHAT_MESSAGE_HOLDOUT_WALL_FINISHED;
        case 60: return CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK;
        case 61: return CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK_EARLY;
        case 62: return CHAT_MESSAGE_ABANDON_LIMITED_HERO;
        case 63: return CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION;
        case 64: return CHAT_MESSAGE_DISCONNECT_LIMITED_HERO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_MESSAGE>() {
            public DOTA_CHAT_MESSAGE findValueByNumber(int number) {
              return DOTA_CHAT_MESSAGE.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final DOTA_CHAT_MESSAGE[] VALUES = {
      CHAT_MESSAGE_INVALID, CHAT_MESSAGE_HERO_KILL, CHAT_MESSAGE_HERO_DENY, CHAT_MESSAGE_BARRACKS_KILL, CHAT_MESSAGE_TOWER_KILL, CHAT_MESSAGE_TOWER_DENY, CHAT_MESSAGE_FIRSTBLOOD, CHAT_MESSAGE_STREAK_KILL, CHAT_MESSAGE_BUYBACK, CHAT_MESSAGE_AEGIS, CHAT_MESSAGE_ROSHAN_KILL, CHAT_MESSAGE_COURIER_LOST, CHAT_MESSAGE_COURIER_RESPAWNED, CHAT_MESSAGE_GLYPH_USED, CHAT_MESSAGE_ITEM_PURCHASE, CHAT_MESSAGE_CONNECT, CHAT_MESSAGE_DISCONNECT, CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT, CHAT_MESSAGE_DISCONNECT_TIME_REMAINING, CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL, CHAT_MESSAGE_RECONNECT, CHAT_MESSAGE_ABANDON, CHAT_MESSAGE_SAFE_TO_LEAVE, CHAT_MESSAGE_RUNE_PICKUP, CHAT_MESSAGE_RUNE_BOTTLE, CHAT_MESSAGE_INTHEBAG, CHAT_MESSAGE_SECRETSHOP, CHAT_MESSAGE_ITEM_AUTOPURCHASED, CHAT_MESSAGE_ITEMS_COMBINED, CHAT_MESSAGE_SUPER_CREEPS, CHAT_MESSAGE_CANT_USE_ACTION_ITEM, CHAT_MESSAGE_CHARGES_EXHAUSTED, CHAT_MESSAGE_CANTPAUSE, CHAT_MESSAGE_NOPAUSESLEFT, CHAT_MESSAGE_CANTPAUSEYET, CHAT_MESSAGE_PAUSED, CHAT_MESSAGE_UNPAUSE_COUNTDOWN, CHAT_MESSAGE_UNPAUSED, CHAT_MESSAGE_AUTO_UNPAUSED, CHAT_MESSAGE_YOUPAUSED, CHAT_MESSAGE_CANTUNPAUSETEAM, CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER, CHAT_MESSAGE_VOICE_TEXT_BANNED, CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME, CHAT_MESSAGE_REPORT_REMINDER, CHAT_MESSAGE_ECON_ITEM, CHAT_MESSAGE_TAUNT, CHAT_MESSAGE_RANDOM, CHAT_MESSAGE_RD_TURN, CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_EARLY, CHAT_MESSAGE_DROP_RATE_BONUS, CHAT_MESSAGE_NO_BATTLE_POINTS, CHAT_MESSAGE_DENIED_AEGIS, CHAT_MESSAGE_INFORMATIONAL, CHAT_MESSAGE_AEGIS_STOLEN, CHAT_MESSAGE_ROSHAN_CANDY, CHAT_MESSAGE_ITEM_GIFTED, CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL, CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED, CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED, CHAT_MESSAGE_HOLDOUT_WALL_FINISHED, CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK, CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK_EARLY, CHAT_MESSAGE_ABANDON_LIMITED_HERO, CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION, CHAT_MESSAGE_DISCONNECT_LIMITED_HERO, 
    };
    
    public static DOTA_CHAT_MESSAGE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_CHAT_MESSAGE(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_CHAT_MESSAGE)
  }
  
  public enum DOTA_NO_BATTLE_POINTS_REASONS
      implements com.google.protobuf.ProtocolMessageEnum {
    NO_BATTLE_POINTS_WRONG_LOBBY_TYPE(0, 1),
    NO_BATTLE_POINTS_PRACTICE_BOTS(1, 2),
    NO_BATTLE_POINTS_CHEATS_ENABLED(2, 3),
    NO_BATTLE_POINTS_LOW_PRIORITY(3, 4),
    ;
    
    public static final int NO_BATTLE_POINTS_WRONG_LOBBY_TYPE_VALUE = 1;
    public static final int NO_BATTLE_POINTS_PRACTICE_BOTS_VALUE = 2;
    public static final int NO_BATTLE_POINTS_CHEATS_ENABLED_VALUE = 3;
    public static final int NO_BATTLE_POINTS_LOW_PRIORITY_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_NO_BATTLE_POINTS_REASONS valueOf(int value) {
      switch (value) {
        case 1: return NO_BATTLE_POINTS_WRONG_LOBBY_TYPE;
        case 2: return NO_BATTLE_POINTS_PRACTICE_BOTS;
        case 3: return NO_BATTLE_POINTS_CHEATS_ENABLED;
        case 4: return NO_BATTLE_POINTS_LOW_PRIORITY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_NO_BATTLE_POINTS_REASONS>() {
            public DOTA_NO_BATTLE_POINTS_REASONS findValueByNumber(int number) {
              return DOTA_NO_BATTLE_POINTS_REASONS.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final DOTA_NO_BATTLE_POINTS_REASONS[] VALUES = {
      NO_BATTLE_POINTS_WRONG_LOBBY_TYPE, NO_BATTLE_POINTS_PRACTICE_BOTS, NO_BATTLE_POINTS_CHEATS_ENABLED, NO_BATTLE_POINTS_LOW_PRIORITY, 
    };
    
    public static DOTA_NO_BATTLE_POINTS_REASONS valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_NO_BATTLE_POINTS_REASONS(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_NO_BATTLE_POINTS_REASONS)
  }
  
  public enum DOTA_CHAT_INFORMATIONAL
      implements com.google.protobuf.ProtocolMessageEnum {
    COOP_BATTLE_POINTS_RULES(0, 1),
    ;
    
    public static final int COOP_BATTLE_POINTS_RULES_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_CHAT_INFORMATIONAL valueOf(int value) {
      switch (value) {
        case 1: return COOP_BATTLE_POINTS_RULES;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CHAT_INFORMATIONAL>() {
            public DOTA_CHAT_INFORMATIONAL findValueByNumber(int number) {
              return DOTA_CHAT_INFORMATIONAL.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final DOTA_CHAT_INFORMATIONAL[] VALUES = {
      COOP_BATTLE_POINTS_RULES, 
    };
    
    public static DOTA_CHAT_INFORMATIONAL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_CHAT_INFORMATIONAL(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_CHAT_INFORMATIONAL)
  }
  
  public enum DOTA_COMBATLOG_TYPES
      implements com.google.protobuf.ProtocolMessageEnum {
    DOTA_COMBATLOG_DAMAGE(0, 0),
    DOTA_COMBATLOG_HEAL(1, 1),
    DOTA_COMBATLOG_MODIFIER_ADD(2, 2),
    DOTA_COMBATLOG_MODIFIER_REMOVE(3, 3),
    DOTA_COMBATLOG_DEATH(4, 4),
    ;
    
    public static final int DOTA_COMBATLOG_DAMAGE_VALUE = 0;
    public static final int DOTA_COMBATLOG_HEAL_VALUE = 1;
    public static final int DOTA_COMBATLOG_MODIFIER_ADD_VALUE = 2;
    public static final int DOTA_COMBATLOG_MODIFIER_REMOVE_VALUE = 3;
    public static final int DOTA_COMBATLOG_DEATH_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_COMBATLOG_TYPES valueOf(int value) {
      switch (value) {
        case 0: return DOTA_COMBATLOG_DAMAGE;
        case 1: return DOTA_COMBATLOG_HEAL;
        case 2: return DOTA_COMBATLOG_MODIFIER_ADD;
        case 3: return DOTA_COMBATLOG_MODIFIER_REMOVE;
        case 4: return DOTA_COMBATLOG_DEATH;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>() {
            public DOTA_COMBATLOG_TYPES findValueByNumber(int number) {
              return DOTA_COMBATLOG_TYPES.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final DOTA_COMBATLOG_TYPES[] VALUES = {
      DOTA_COMBATLOG_DAMAGE, DOTA_COMBATLOG_HEAL, DOTA_COMBATLOG_MODIFIER_ADD, DOTA_COMBATLOG_MODIFIER_REMOVE, DOTA_COMBATLOG_DEATH, 
    };
    
    public static DOTA_COMBATLOG_TYPES valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_COMBATLOG_TYPES(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_COMBATLOG_TYPES)
  }
  
  public enum EDotaEntityMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    DOTA_UNIT_SPEECH(0, 0),
    DOTA_UNIT_SPEECH_MUTE(1, 1),
    DOTA_UNIT_ADD_GESTURE(2, 2),
    DOTA_UNIT_REMOVE_GESTURE(3, 3),
    DOTA_UNIT_REMOVE_ALL_GESTURES(4, 4),
    DOTA_UNIT_FADE_GESTURE(5, 6),
    DOTA_UNIT_SPEECH_CLIENTSIDE_RULES(6, 7),
    ;
    
    public static final int DOTA_UNIT_SPEECH_VALUE = 0;
    public static final int DOTA_UNIT_SPEECH_MUTE_VALUE = 1;
    public static final int DOTA_UNIT_ADD_GESTURE_VALUE = 2;
    public static final int DOTA_UNIT_REMOVE_GESTURE_VALUE = 3;
    public static final int DOTA_UNIT_REMOVE_ALL_GESTURES_VALUE = 4;
    public static final int DOTA_UNIT_FADE_GESTURE_VALUE = 6;
    public static final int DOTA_UNIT_SPEECH_CLIENTSIDE_RULES_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static EDotaEntityMessages valueOf(int value) {
      switch (value) {
        case 0: return DOTA_UNIT_SPEECH;
        case 1: return DOTA_UNIT_SPEECH_MUTE;
        case 2: return DOTA_UNIT_ADD_GESTURE;
        case 3: return DOTA_UNIT_REMOVE_GESTURE;
        case 4: return DOTA_UNIT_REMOVE_ALL_GESTURES;
        case 6: return DOTA_UNIT_FADE_GESTURE;
        case 7: return DOTA_UNIT_SPEECH_CLIENTSIDE_RULES;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDotaEntityMessages>() {
            public EDotaEntityMessages findValueByNumber(int number) {
              return EDotaEntityMessages.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(5);
    }
    
    private static final EDotaEntityMessages[] VALUES = {
      DOTA_UNIT_SPEECH, DOTA_UNIT_SPEECH_MUTE, DOTA_UNIT_ADD_GESTURE, DOTA_UNIT_REMOVE_GESTURE, DOTA_UNIT_REMOVE_ALL_GESTURES, DOTA_UNIT_FADE_GESTURE, DOTA_UNIT_SPEECH_CLIENTSIDE_RULES, 
    };
    
    public static EDotaEntityMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private EDotaEntityMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:EDotaEntityMessages)
  }
  
  public enum DOTA_PARTICLE_MESSAGE
      implements com.google.protobuf.ProtocolMessageEnum {
    DOTA_PARTICLE_MANAGER_EVENT_CREATE(0, 0),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE(1, 1),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD(2, 2),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION(3, 3),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK(4, 4),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT(5, 5),
    DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET(6, 6),
    DOTA_PARTICLE_MANAGER_EVENT_DESTROY(7, 7),
    DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING(8, 8),
    DOTA_PARTICLE_MANAGER_EVENT_RELEASE(9, 9),
    DOTA_PARTICLE_MANAGER_EVENT_LATENCY(10, 10),
    DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW(11, 11),
    DOTA_PARTICLE_MANAGER_EVENT_FROZEN(12, 12),
    ;
    
    public static final int DOTA_PARTICLE_MANAGER_EVENT_CREATE_VALUE = 0;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_VALUE = 1;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD_VALUE = 2;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION_VALUE = 3;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK_VALUE = 4;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT_VALUE = 5;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET_VALUE = 6;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_DESTROY_VALUE = 7;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING_VALUE = 8;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_RELEASE_VALUE = 9;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_LATENCY_VALUE = 10;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW_VALUE = 11;
    public static final int DOTA_PARTICLE_MANAGER_EVENT_FROZEN_VALUE = 12;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_PARTICLE_MESSAGE valueOf(int value) {
      switch (value) {
        case 0: return DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        case 1: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE;
        case 2: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD;
        case 3: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION;
        case 4: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK;
        case 5: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT;
        case 6: return DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET;
        case 7: return DOTA_PARTICLE_MANAGER_EVENT_DESTROY;
        case 8: return DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING;
        case 9: return DOTA_PARTICLE_MANAGER_EVENT_RELEASE;
        case 10: return DOTA_PARTICLE_MANAGER_EVENT_LATENCY;
        case 11: return DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW;
        case 12: return DOTA_PARTICLE_MANAGER_EVENT_FROZEN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_PARTICLE_MESSAGE>() {
            public DOTA_PARTICLE_MESSAGE findValueByNumber(int number) {
              return DOTA_PARTICLE_MESSAGE.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(6);
    }
    
    private static final DOTA_PARTICLE_MESSAGE[] VALUES = {
      DOTA_PARTICLE_MANAGER_EVENT_CREATE, DOTA_PARTICLE_MANAGER_EVENT_UPDATE, DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD, DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION, DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK, DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT, DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET, DOTA_PARTICLE_MANAGER_EVENT_DESTROY, DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING, DOTA_PARTICLE_MANAGER_EVENT_RELEASE, DOTA_PARTICLE_MANAGER_EVENT_LATENCY, DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW, DOTA_PARTICLE_MANAGER_EVENT_FROZEN, 
    };
    
    public static DOTA_PARTICLE_MESSAGE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_PARTICLE_MESSAGE(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_PARTICLE_MESSAGE)
  }
  
  public enum DOTA_OVERHEAD_ALERT
      implements com.google.protobuf.ProtocolMessageEnum {
    OVERHEAD_ALERT_GOLD(0, 0),
    OVERHEAD_ALERT_DENY(1, 1),
    OVERHEAD_ALERT_CRITICAL(2, 2),
    OVERHEAD_ALERT_XP(3, 3),
    OVERHEAD_ALERT_BONUS_SPELL_DAMAGE(4, 4),
    OVERHEAD_ALERT_MISS(5, 5),
    OVERHEAD_ALERT_DAMAGE(6, 6),
    OVERHEAD_ALERT_EVADE(7, 7),
    OVERHEAD_ALERT_BLOCK(8, 8),
    OVERHEAD_ALERT_BONUS_POISON_DAMAGE(9, 9),
    OVERHEAD_ALERT_HEAL(10, 10),
    OVERHEAD_ALERT_MANA_ADD(11, 11),
    OVERHEAD_ALERT_MANA_LOSS(12, 12),
    OVERHEAD_ALERT_LAST_HIT_EARLY(13, 13),
    OVERHEAD_ALERT_LAST_HIT_CLOSE(14, 14),
    OVERHEAD_ALERT_LAST_HIT_MISS(15, 15),
    ;
    
    public static final int OVERHEAD_ALERT_GOLD_VALUE = 0;
    public static final int OVERHEAD_ALERT_DENY_VALUE = 1;
    public static final int OVERHEAD_ALERT_CRITICAL_VALUE = 2;
    public static final int OVERHEAD_ALERT_XP_VALUE = 3;
    public static final int OVERHEAD_ALERT_BONUS_SPELL_DAMAGE_VALUE = 4;
    public static final int OVERHEAD_ALERT_MISS_VALUE = 5;
    public static final int OVERHEAD_ALERT_DAMAGE_VALUE = 6;
    public static final int OVERHEAD_ALERT_EVADE_VALUE = 7;
    public static final int OVERHEAD_ALERT_BLOCK_VALUE = 8;
    public static final int OVERHEAD_ALERT_BONUS_POISON_DAMAGE_VALUE = 9;
    public static final int OVERHEAD_ALERT_HEAL_VALUE = 10;
    public static final int OVERHEAD_ALERT_MANA_ADD_VALUE = 11;
    public static final int OVERHEAD_ALERT_MANA_LOSS_VALUE = 12;
    public static final int OVERHEAD_ALERT_LAST_HIT_EARLY_VALUE = 13;
    public static final int OVERHEAD_ALERT_LAST_HIT_CLOSE_VALUE = 14;
    public static final int OVERHEAD_ALERT_LAST_HIT_MISS_VALUE = 15;
    
    
    public final int getNumber() { return value; }
    
    public static DOTA_OVERHEAD_ALERT valueOf(int value) {
      switch (value) {
        case 0: return OVERHEAD_ALERT_GOLD;
        case 1: return OVERHEAD_ALERT_DENY;
        case 2: return OVERHEAD_ALERT_CRITICAL;
        case 3: return OVERHEAD_ALERT_XP;
        case 4: return OVERHEAD_ALERT_BONUS_SPELL_DAMAGE;
        case 5: return OVERHEAD_ALERT_MISS;
        case 6: return OVERHEAD_ALERT_DAMAGE;
        case 7: return OVERHEAD_ALERT_EVADE;
        case 8: return OVERHEAD_ALERT_BLOCK;
        case 9: return OVERHEAD_ALERT_BONUS_POISON_DAMAGE;
        case 10: return OVERHEAD_ALERT_HEAL;
        case 11: return OVERHEAD_ALERT_MANA_ADD;
        case 12: return OVERHEAD_ALERT_MANA_LOSS;
        case 13: return OVERHEAD_ALERT_LAST_HIT_EARLY;
        case 14: return OVERHEAD_ALERT_LAST_HIT_CLOSE;
        case 15: return OVERHEAD_ALERT_LAST_HIT_MISS;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_OVERHEAD_ALERT>() {
            public DOTA_OVERHEAD_ALERT findValueByNumber(int number) {
              return DOTA_OVERHEAD_ALERT.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DotaUsermessages.getDescriptor().getEnumTypes().get(7);
    }
    
    private static final DOTA_OVERHEAD_ALERT[] VALUES = {
      OVERHEAD_ALERT_GOLD, OVERHEAD_ALERT_DENY, OVERHEAD_ALERT_CRITICAL, OVERHEAD_ALERT_XP, OVERHEAD_ALERT_BONUS_SPELL_DAMAGE, OVERHEAD_ALERT_MISS, OVERHEAD_ALERT_DAMAGE, OVERHEAD_ALERT_EVADE, OVERHEAD_ALERT_BLOCK, OVERHEAD_ALERT_BONUS_POISON_DAMAGE, OVERHEAD_ALERT_HEAL, OVERHEAD_ALERT_MANA_ADD, OVERHEAD_ALERT_MANA_LOSS, OVERHEAD_ALERT_LAST_HIT_EARLY, OVERHEAD_ALERT_LAST_HIT_CLOSE, OVERHEAD_ALERT_LAST_HIT_MISS, 
    };
    
    public static DOTA_OVERHEAD_ALERT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DOTA_OVERHEAD_ALERT(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DOTA_OVERHEAD_ALERT)
  }
  
  public interface CDOTAUserMsg_AIDebugLineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class CDOTAUserMsg_AIDebugLine extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_AIDebugLineOrBuilder {
    // Use CDOTAUserMsg_AIDebugLine.newBuilder() to construct.
    private CDOTAUserMsg_AIDebugLine(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_AIDebugLine(boolean noInit) {}
    
    private static final CDOTAUserMsg_AIDebugLine defaultInstance;
    public static CDOTAUserMsg_AIDebugLine getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_AIDebugLine getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AIDebugLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_AIDebugLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_AIDebugLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_AIDebugLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_AIDebugLine.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_AIDebugLine getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_AIDebugLine.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_AIDebugLine build() {
        DotaUsermessages.CDOTAUserMsg_AIDebugLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_AIDebugLine buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_AIDebugLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_AIDebugLine buildPartial() {
        DotaUsermessages.CDOTAUserMsg_AIDebugLine result = new DotaUsermessages.CDOTAUserMsg_AIDebugLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_AIDebugLine) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_AIDebugLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_AIDebugLine other) {
        if (other == DotaUsermessages.CDOTAUserMsg_AIDebugLine.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AIDebugLine)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_AIDebugLine(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AIDebugLine)
  }
  
  public interface CDOTAUserMsg_PingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class CDOTAUserMsg_Ping extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_PingOrBuilder {
    // Use CDOTAUserMsg_Ping.newBuilder() to construct.
    private CDOTAUserMsg_Ping(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_Ping(boolean noInit) {}
    
    private static final CDOTAUserMsg_Ping defaultInstance;
    public static CDOTAUserMsg_Ping getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_Ping getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_Ping_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_Ping_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_PingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_Ping_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_Ping_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_Ping.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_Ping getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_Ping.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_Ping build() {
        DotaUsermessages.CDOTAUserMsg_Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_Ping buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_Ping buildPartial() {
        DotaUsermessages.CDOTAUserMsg_Ping result = new DotaUsermessages.CDOTAUserMsg_Ping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_Ping) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_Ping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_Ping other) {
        if (other == DotaUsermessages.CDOTAUserMsg_Ping.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_Ping)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_Ping(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_Ping)
  }
  
  public interface CDOTAUserMsg_SwapVerifyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
  }
  public static final class CDOTAUserMsg_SwapVerify extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SwapVerifyOrBuilder {
    // Use CDOTAUserMsg_SwapVerify.newBuilder() to construct.
    private CDOTAUserMsg_SwapVerify(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SwapVerify(boolean noInit) {}
    
    private static final CDOTAUserMsg_SwapVerify defaultInstance;
    public static CDOTAUserMsg_SwapVerify getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SwapVerify getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SwapVerify_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    private void initFields() {
      playerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SwapVerify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SwapVerify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SwapVerifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SwapVerify_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SwapVerify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SwapVerify.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SwapVerify getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SwapVerify.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SwapVerify build() {
        DotaUsermessages.CDOTAUserMsg_SwapVerify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SwapVerify buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SwapVerify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SwapVerify buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SwapVerify result = new DotaUsermessages.CDOTAUserMsg_SwapVerify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SwapVerify) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SwapVerify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SwapVerify other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SwapVerify.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SwapVerify)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SwapVerify(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SwapVerify)
  }
  
  public interface CDOTAUserMsg_ChatEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
    boolean hasType();
    DotaUsermessages.DOTA_CHAT_MESSAGE getType();
    
    // optional uint32 value = 2;
    boolean hasValue();
    int getValue();
    
    // optional sint32 playerid_1 = 3 [default = -1];
    boolean hasPlayerid1();
    int getPlayerid1();
    
    // optional sint32 playerid_2 = 4 [default = -1];
    boolean hasPlayerid2();
    int getPlayerid2();
    
    // optional sint32 playerid_3 = 5 [default = -1];
    boolean hasPlayerid3();
    int getPlayerid3();
    
    // optional sint32 playerid_4 = 6 [default = -1];
    boolean hasPlayerid4();
    int getPlayerid4();
    
    // optional sint32 playerid_5 = 7 [default = -1];
    boolean hasPlayerid5();
    int getPlayerid5();
    
    // optional sint32 playerid_6 = 8 [default = -1];
    boolean hasPlayerid6();
    int getPlayerid6();
  }
  public static final class CDOTAUserMsg_ChatEvent extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ChatEventOrBuilder {
    // Use CDOTAUserMsg_ChatEvent.newBuilder() to construct.
    private CDOTAUserMsg_ChatEvent(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ChatEvent(boolean noInit) {}
    
    private static final CDOTAUserMsg_ChatEvent defaultInstance;
    public static CDOTAUserMsg_ChatEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ChatEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ChatEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
    public static final int TYPE_FIELD_NUMBER = 1;
    private DotaUsermessages.DOTA_CHAT_MESSAGE type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaUsermessages.DOTA_CHAT_MESSAGE getType() {
      return type_;
    }
    
    // optional uint32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getValue() {
      return value_;
    }
    
    // optional sint32 playerid_1 = 3 [default = -1];
    public static final int PLAYERID_1_FIELD_NUMBER = 3;
    private int playerid1_;
    public boolean hasPlayerid1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPlayerid1() {
      return playerid1_;
    }
    
    // optional sint32 playerid_2 = 4 [default = -1];
    public static final int PLAYERID_2_FIELD_NUMBER = 4;
    private int playerid2_;
    public boolean hasPlayerid2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getPlayerid2() {
      return playerid2_;
    }
    
    // optional sint32 playerid_3 = 5 [default = -1];
    public static final int PLAYERID_3_FIELD_NUMBER = 5;
    private int playerid3_;
    public boolean hasPlayerid3() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getPlayerid3() {
      return playerid3_;
    }
    
    // optional sint32 playerid_4 = 6 [default = -1];
    public static final int PLAYERID_4_FIELD_NUMBER = 6;
    private int playerid4_;
    public boolean hasPlayerid4() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPlayerid4() {
      return playerid4_;
    }
    
    // optional sint32 playerid_5 = 7 [default = -1];
    public static final int PLAYERID_5_FIELD_NUMBER = 7;
    private int playerid5_;
    public boolean hasPlayerid5() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getPlayerid5() {
      return playerid5_;
    }
    
    // optional sint32 playerid_6 = 8 [default = -1];
    public static final int PLAYERID_6_FIELD_NUMBER = 8;
    private int playerid6_;
    public boolean hasPlayerid6() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getPlayerid6() {
      return playerid6_;
    }
    
    private void initFields() {
      type_ = DotaUsermessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
      value_ = 0;
      playerid1_ = -1;
      playerid2_ = -1;
      playerid3_ = -1;
      playerid4_ = -1;
      playerid5_ = -1;
      playerid6_ = -1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, playerid1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, playerid2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, playerid3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, playerid4_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, playerid5_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, playerid6_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, playerid1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, playerid2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, playerid3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, playerid4_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, playerid5_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, playerid6_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ChatEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ChatEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ChatEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ChatEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = DotaUsermessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerid1_ = -1;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerid2_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerid3_ = -1;
        bitField0_ = (bitField0_ & ~0x00000010);
        playerid4_ = -1;
        bitField0_ = (bitField0_ & ~0x00000020);
        playerid5_ = -1;
        bitField0_ = (bitField0_ & ~0x00000040);
        playerid6_ = -1;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ChatEvent.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatEvent getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ChatEvent.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatEvent build() {
        DotaUsermessages.CDOTAUserMsg_ChatEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ChatEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ChatEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatEvent buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ChatEvent result = new DotaUsermessages.CDOTAUserMsg_ChatEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerid1_ = playerid1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerid2_ = playerid2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerid3_ = playerid3_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerid4_ = playerid4_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerid5_ = playerid5_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.playerid6_ = playerid6_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ChatEvent) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ChatEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ChatEvent other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ChatEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasPlayerid1()) {
          setPlayerid1(other.getPlayerid1());
        }
        if (other.hasPlayerid2()) {
          setPlayerid2(other.getPlayerid2());
        }
        if (other.hasPlayerid3()) {
          setPlayerid3(other.getPlayerid3());
        }
        if (other.hasPlayerid4()) {
          setPlayerid4(other.getPlayerid4());
        }
        if (other.hasPlayerid5()) {
          setPlayerid5(other.getPlayerid5());
        }
        if (other.hasPlayerid6()) {
          setPlayerid6(other.getPlayerid6());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaUsermessages.DOTA_CHAT_MESSAGE value = DotaUsermessages.DOTA_CHAT_MESSAGE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerid1_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerid2_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              playerid3_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              playerid4_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              playerid5_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              playerid6_ = input.readSInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
      private DotaUsermessages.DOTA_CHAT_MESSAGE type_ = DotaUsermessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaUsermessages.DOTA_CHAT_MESSAGE getType() {
        return type_;
      }
      public Builder setType(DotaUsermessages.DOTA_CHAT_MESSAGE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = DotaUsermessages.DOTA_CHAT_MESSAGE.CHAT_MESSAGE_INVALID;
        onChanged();
        return this;
      }
      
      // optional uint32 value = 2;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_1 = 3 [default = -1];
      private int playerid1_ = -1;
      public boolean hasPlayerid1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPlayerid1() {
        return playerid1_;
      }
      public Builder setPlayerid1(int value) {
        bitField0_ |= 0x00000004;
        playerid1_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerid1_ = -1;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_2 = 4 [default = -1];
      private int playerid2_ = -1;
      public boolean hasPlayerid2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getPlayerid2() {
        return playerid2_;
      }
      public Builder setPlayerid2(int value) {
        bitField0_ |= 0x00000008;
        playerid2_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerid2_ = -1;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_3 = 5 [default = -1];
      private int playerid3_ = -1;
      public boolean hasPlayerid3() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getPlayerid3() {
        return playerid3_;
      }
      public Builder setPlayerid3(int value) {
        bitField0_ |= 0x00000010;
        playerid3_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid3() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerid3_ = -1;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_4 = 6 [default = -1];
      private int playerid4_ = -1;
      public boolean hasPlayerid4() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getPlayerid4() {
        return playerid4_;
      }
      public Builder setPlayerid4(int value) {
        bitField0_ |= 0x00000020;
        playerid4_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid4() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playerid4_ = -1;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_5 = 7 [default = -1];
      private int playerid5_ = -1;
      public boolean hasPlayerid5() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getPlayerid5() {
        return playerid5_;
      }
      public Builder setPlayerid5(int value) {
        bitField0_ |= 0x00000040;
        playerid5_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid5() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerid5_ = -1;
        onChanged();
        return this;
      }
      
      // optional sint32 playerid_6 = 8 [default = -1];
      private int playerid6_ = -1;
      public boolean hasPlayerid6() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getPlayerid6() {
        return playerid6_;
      }
      public Builder setPlayerid6(int value) {
        bitField0_ |= 0x00000080;
        playerid6_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerid6() {
        bitField0_ = (bitField0_ & ~0x00000080);
        playerid6_ = -1;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ChatEvent)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ChatEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatEvent)
  }
  
  public interface CDOTAUserMsg_CombatLogDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
    boolean hasType();
    DotaUsermessages.DOTA_COMBATLOG_TYPES getType();
    
    // optional uint32 target_name = 2;
    boolean hasTargetName();
    int getTargetName();
    
    // optional uint32 attacker_name = 3;
    boolean hasAttackerName();
    int getAttackerName();
    
    // optional bool attacker_illusion = 4;
    boolean hasAttackerIllusion();
    boolean getAttackerIllusion();
    
    // optional bool target_illusion = 5;
    boolean hasTargetIllusion();
    boolean getTargetIllusion();
    
    // optional uint32 inflictor_name = 6;
    boolean hasInflictorName();
    int getInflictorName();
    
    // optional int32 value = 7;
    boolean hasValue();
    int getValue();
    
    // optional int32 health = 8;
    boolean hasHealth();
    int getHealth();
    
    // optional float time = 9;
    boolean hasTime();
    float getTime();
  }
  public static final class CDOTAUserMsg_CombatLogData extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CombatLogDataOrBuilder {
    // Use CDOTAUserMsg_CombatLogData.newBuilder() to construct.
    private CDOTAUserMsg_CombatLogData(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CombatLogData(boolean noInit) {}
    
    private static final CDOTAUserMsg_CombatLogData defaultInstance;
    public static CDOTAUserMsg_CombatLogData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CombatLogData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
    public static final int TYPE_FIELD_NUMBER = 1;
    private DotaUsermessages.DOTA_COMBATLOG_TYPES type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaUsermessages.DOTA_COMBATLOG_TYPES getType() {
      return type_;
    }
    
    // optional uint32 target_name = 2;
    public static final int TARGET_NAME_FIELD_NUMBER = 2;
    private int targetName_;
    public boolean hasTargetName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTargetName() {
      return targetName_;
    }
    
    // optional uint32 attacker_name = 3;
    public static final int ATTACKER_NAME_FIELD_NUMBER = 3;
    private int attackerName_;
    public boolean hasAttackerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAttackerName() {
      return attackerName_;
    }
    
    // optional bool attacker_illusion = 4;
    public static final int ATTACKER_ILLUSION_FIELD_NUMBER = 4;
    private boolean attackerIllusion_;
    public boolean hasAttackerIllusion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getAttackerIllusion() {
      return attackerIllusion_;
    }
    
    // optional bool target_illusion = 5;
    public static final int TARGET_ILLUSION_FIELD_NUMBER = 5;
    private boolean targetIllusion_;
    public boolean hasTargetIllusion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getTargetIllusion() {
      return targetIllusion_;
    }
    
    // optional uint32 inflictor_name = 6;
    public static final int INFLICTOR_NAME_FIELD_NUMBER = 6;
    private int inflictorName_;
    public boolean hasInflictorName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getInflictorName() {
      return inflictorName_;
    }
    
    // optional int32 value = 7;
    public static final int VALUE_FIELD_NUMBER = 7;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getValue() {
      return value_;
    }
    
    // optional int32 health = 8;
    public static final int HEALTH_FIELD_NUMBER = 8;
    private int health_;
    public boolean hasHealth() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getHealth() {
      return health_;
    }
    
    // optional float time = 9;
    public static final int TIME_FIELD_NUMBER = 9;
    private float time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getTime() {
      return time_;
    }
    
    private void initFields() {
      type_ = DotaUsermessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      targetName_ = 0;
      attackerName_ = 0;
      attackerIllusion_ = false;
      targetIllusion_ = false;
      inflictorName_ = 0;
      value_ = 0;
      health_ = 0;
      time_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, attackerName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, attackerIllusion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, targetIllusion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, value_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, health_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, time_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, attackerName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, attackerIllusion_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, targetIllusion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, value_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, health_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CombatLogData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CombatLogDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogData_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CombatLogData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = DotaUsermessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        attackerName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        attackerIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        targetIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        inflictorName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        time_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatLogData.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogData getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatLogData.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogData build() {
        DotaUsermessages.CDOTAUserMsg_CombatLogData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CombatLogData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CombatLogData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogData buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CombatLogData result = new DotaUsermessages.CDOTAUserMsg_CombatLogData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetName_ = targetName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.attackerName_ = attackerName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.attackerIllusion_ = attackerIllusion_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.targetIllusion_ = targetIllusion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.inflictorName_ = inflictorName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.health_ = health_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CombatLogData) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CombatLogData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CombatLogData other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CombatLogData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetName()) {
          setTargetName(other.getTargetName());
        }
        if (other.hasAttackerName()) {
          setAttackerName(other.getAttackerName());
        }
        if (other.hasAttackerIllusion()) {
          setAttackerIllusion(other.getAttackerIllusion());
        }
        if (other.hasTargetIllusion()) {
          setTargetIllusion(other.getTargetIllusion());
        }
        if (other.hasInflictorName()) {
          setInflictorName(other.getInflictorName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaUsermessages.DOTA_COMBATLOG_TYPES value = DotaUsermessages.DOTA_COMBATLOG_TYPES.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetName_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              attackerName_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              attackerIllusion_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              targetIllusion_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              inflictorName_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              value_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              health_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              time_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
      private DotaUsermessages.DOTA_COMBATLOG_TYPES type_ = DotaUsermessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaUsermessages.DOTA_COMBATLOG_TYPES getType() {
        return type_;
      }
      public Builder setType(DotaUsermessages.DOTA_COMBATLOG_TYPES value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = DotaUsermessages.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        onChanged();
        return this;
      }
      
      // optional uint32 target_name = 2;
      private int targetName_ ;
      public boolean hasTargetName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTargetName() {
        return targetName_;
      }
      public Builder setTargetName(int value) {
        bitField0_ |= 0x00000002;
        targetName_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetName_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 attacker_name = 3;
      private int attackerName_ ;
      public boolean hasAttackerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAttackerName() {
        return attackerName_;
      }
      public Builder setAttackerName(int value) {
        bitField0_ |= 0x00000004;
        attackerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttackerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        attackerName_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool attacker_illusion = 4;
      private boolean attackerIllusion_ ;
      public boolean hasAttackerIllusion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getAttackerIllusion() {
        return attackerIllusion_;
      }
      public Builder setAttackerIllusion(boolean value) {
        bitField0_ |= 0x00000008;
        attackerIllusion_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttackerIllusion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attackerIllusion_ = false;
        onChanged();
        return this;
      }
      
      // optional bool target_illusion = 5;
      private boolean targetIllusion_ ;
      public boolean hasTargetIllusion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getTargetIllusion() {
        return targetIllusion_;
      }
      public Builder setTargetIllusion(boolean value) {
        bitField0_ |= 0x00000010;
        targetIllusion_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetIllusion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetIllusion_ = false;
        onChanged();
        return this;
      }
      
      // optional uint32 inflictor_name = 6;
      private int inflictorName_ ;
      public boolean hasInflictorName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getInflictorName() {
        return inflictorName_;
      }
      public Builder setInflictorName(int value) {
        bitField0_ |= 0x00000020;
        inflictorName_ = value;
        onChanged();
        return this;
      }
      public Builder clearInflictorName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inflictorName_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 value = 7;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000040;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 health = 8;
      private int health_ ;
      public boolean hasHealth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getHealth() {
        return health_;
      }
      public Builder setHealth(int value) {
        bitField0_ |= 0x00000080;
        health_ = value;
        onChanged();
        return this;
      }
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        health_ = 0;
        onChanged();
        return this;
      }
      
      // optional float time = 9;
      private float time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getTime() {
        return time_;
      }
      public Builder setTime(float value) {
        bitField0_ |= 0x00000100;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        time_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CombatLogData)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CombatLogData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatLogData)
  }
  
  public interface CDOTAUserMsg_CombatLogShowDeathOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class CDOTAUserMsg_CombatLogShowDeath extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CombatLogShowDeathOrBuilder {
    // Use CDOTAUserMsg_CombatLogShowDeath.newBuilder() to construct.
    private CDOTAUserMsg_CombatLogShowDeath(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CombatLogShowDeath(boolean noInit) {}
    
    private static final CDOTAUserMsg_CombatLogShowDeath defaultInstance;
    public static CDOTAUserMsg_CombatLogShowDeath getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CombatLogShowDeath getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CombatLogShowDeathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath build() {
        DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath result = new DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CombatLogShowDeath)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CombatLogShowDeath(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatLogShowDeath)
  }
  
  public interface CDOTAUserMsg_BotChatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional string format = 2;
    boolean hasFormat();
    String getFormat();
    
    // optional string message = 3;
    boolean hasMessage();
    String getMessage();
    
    // optional string target = 4;
    boolean hasTarget();
    String getTarget();
  }
  public static final class CDOTAUserMsg_BotChat extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_BotChatOrBuilder {
    // Use CDOTAUserMsg_BotChat.newBuilder() to construct.
    private CDOTAUserMsg_BotChat(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_BotChat(boolean noInit) {}
    
    private static final CDOTAUserMsg_BotChat defaultInstance;
    public static CDOTAUserMsg_BotChat getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_BotChat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_BotChat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional string format = 2;
    public static final int FORMAT_FIELD_NUMBER = 2;
    private java.lang.Object format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          format_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string message = 3;
    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string target = 4;
    public static final int TARGET_FIELD_NUMBER = 4;
    private java.lang.Object target_;
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          target_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      playerId_ = 0;
      format_ = "";
      message_ = "";
      target_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTargetBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFormatBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMessageBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTargetBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_BotChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_BotChat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_BotChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_BotChat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_BotChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_BotChat.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_BotChat getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_BotChat.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_BotChat build() {
        DotaUsermessages.CDOTAUserMsg_BotChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_BotChat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_BotChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_BotChat buildPartial() {
        DotaUsermessages.CDOTAUserMsg_BotChat result = new DotaUsermessages.CDOTAUserMsg_BotChat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.target_ = target_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_BotChat) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_BotChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_BotChat other) {
        if (other == DotaUsermessages.CDOTAUserMsg_BotChat.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              format_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              message_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              target_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string format = 2;
      private java.lang.Object format_ = "";
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          format_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFormat(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        format_ = getDefaultInstance().getFormat();
        onChanged();
        return this;
      }
      void setFormat(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        format_ = value;
        onChanged();
      }
      
      // optional string message = 3;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        message_ = value;
        onChanged();
      }
      
      // optional string target = 4;
      private java.lang.Object target_ = "";
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTarget(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
        return this;
      }
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000008);
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      void setTarget(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        target_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_BotChat)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_BotChat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BotChat)
  }
  
  public interface CDOTAUserMsg_CombatHeroPositionsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 index = 1;
    boolean hasIndex();
    int getIndex();
    
    // optional int32 time = 2;
    boolean hasTime();
    int getTime();
    
    // optional .CMsgVector2D world_pos = 3;
    boolean hasWorldPos();
    Networkbasetypes.CMsgVector2D getWorldPos();
    Networkbasetypes.CMsgVector2DOrBuilder getWorldPosOrBuilder();
    
    // optional int32 health = 4;
    boolean hasHealth();
    int getHealth();
  }
  public static final class CDOTAUserMsg_CombatHeroPositions extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CombatHeroPositionsOrBuilder {
    // Use CDOTAUserMsg_CombatHeroPositions.newBuilder() to construct.
    private CDOTAUserMsg_CombatHeroPositions(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CombatHeroPositions(boolean noInit) {}
    
    private static final CDOTAUserMsg_CombatHeroPositions defaultInstance;
    public static CDOTAUserMsg_CombatHeroPositions getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CombatHeroPositions getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getIndex() {
      return index_;
    }
    
    // optional int32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTime() {
      return time_;
    }
    
    // optional .CMsgVector2D world_pos = 3;
    public static final int WORLD_POS_FIELD_NUMBER = 3;
    private Networkbasetypes.CMsgVector2D worldPos_;
    public boolean hasWorldPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Networkbasetypes.CMsgVector2D getWorldPos() {
      return worldPos_;
    }
    public Networkbasetypes.CMsgVector2DOrBuilder getWorldPosOrBuilder() {
      return worldPos_;
    }
    
    // optional int32 health = 4;
    public static final int HEALTH_FIELD_NUMBER = 4;
    private int health_;
    public boolean hasHealth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getHealth() {
      return health_;
    }
    
    private void initFields() {
      index_ = 0;
      time_ = 0;
      worldPos_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
      health_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, worldPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, health_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, worldPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, health_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CombatHeroPositions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CombatHeroPositions prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CombatHeroPositionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorldPosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (worldPosBuilder_ == null) {
          worldPos_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatHeroPositions getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatHeroPositions build() {
        DotaUsermessages.CDOTAUserMsg_CombatHeroPositions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CombatHeroPositions buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CombatHeroPositions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CombatHeroPositions buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CombatHeroPositions result = new DotaUsermessages.CDOTAUserMsg_CombatHeroPositions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (worldPosBuilder_ == null) {
          result.worldPos_ = worldPos_;
        } else {
          result.worldPos_ = worldPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.health_ = health_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CombatHeroPositions) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CombatHeroPositions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CombatHeroPositions other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasWorldPos()) {
          mergeWorldPos(other.getWorldPos());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readInt32();
              break;
            }
            case 26: {
              Networkbasetypes.CMsgVector2D.Builder subBuilder = Networkbasetypes.CMsgVector2D.newBuilder();
              if (hasWorldPos()) {
                subBuilder.mergeFrom(getWorldPos());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWorldPos(subBuilder.buildPartial());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              health_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 index = 1;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 time = 2;
      private int time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTime() {
        return time_;
      }
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CMsgVector2D world_pos = 3;
      private Networkbasetypes.CMsgVector2D worldPos_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder> worldPosBuilder_;
      public boolean hasWorldPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Networkbasetypes.CMsgVector2D getWorldPos() {
        if (worldPosBuilder_ == null) {
          return worldPos_;
        } else {
          return worldPosBuilder_.getMessage();
        }
      }
      public Builder setWorldPos(Networkbasetypes.CMsgVector2D value) {
        if (worldPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldPos_ = value;
          onChanged();
        } else {
          worldPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setWorldPos(
          Networkbasetypes.CMsgVector2D.Builder builderForValue) {
        if (worldPosBuilder_ == null) {
          worldPos_ = builderForValue.build();
          onChanged();
        } else {
          worldPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeWorldPos(Networkbasetypes.CMsgVector2D value) {
        if (worldPosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              worldPos_ != Networkbasetypes.CMsgVector2D.getDefaultInstance()) {
            worldPos_ =
              Networkbasetypes.CMsgVector2D.newBuilder(worldPos_).mergeFrom(value).buildPartial();
          } else {
            worldPos_ = value;
          }
          onChanged();
        } else {
          worldPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearWorldPos() {
        if (worldPosBuilder_ == null) {
          worldPos_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
          onChanged();
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Networkbasetypes.CMsgVector2D.Builder getWorldPosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getWorldPosFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVector2DOrBuilder getWorldPosOrBuilder() {
        if (worldPosBuilder_ != null) {
          return worldPosBuilder_.getMessageOrBuilder();
        } else {
          return worldPos_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder> 
          getWorldPosFieldBuilder() {
        if (worldPosBuilder_ == null) {
          worldPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder>(
                  worldPos_,
                  getParentForChildren(),
                  isClean());
          worldPos_ = null;
        }
        return worldPosBuilder_;
      }
      
      // optional int32 health = 4;
      private int health_ ;
      public boolean hasHealth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getHealth() {
        return health_;
      }
      public Builder setHealth(int value) {
        bitField0_ |= 0x00000008;
        health_ = value;
        onChanged();
        return this;
      }
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        health_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CombatHeroPositions)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CombatHeroPositions(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatHeroPositions)
  }
  
  public interface CDOTAUserMsg_MiniKillCamInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
    java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> 
        getAttackersList();
    DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index);
    int getAttackersCount();
    java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
        getAttackersOrBuilderList();
    DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
        int index);
  }
  public static final class CDOTAUserMsg_MiniKillCamInfo extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_MiniKillCamInfoOrBuilder {
    // Use CDOTAUserMsg_MiniKillCamInfo.newBuilder() to construct.
    private CDOTAUserMsg_MiniKillCamInfo(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_MiniKillCamInfo(boolean noInit) {}
    
    private static final CDOTAUserMsg_MiniKillCamInfo defaultInstance;
    public static CDOTAUserMsg_MiniKillCamInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_MiniKillCamInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable;
    }
    
    public interface AttackerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional uint32 attacker = 1;
      boolean hasAttacker();
      int getAttacker();
      
      // optional int32 total_damage = 2;
      boolean hasTotalDamage();
      int getTotalDamage();
      
      // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
      java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> 
          getAbilitiesList();
      DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index);
      int getAbilitiesCount();
      java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
          getAbilitiesOrBuilderList();
      DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
          int index);
    }
    public static final class Attacker extends
        com.google.protobuf.GeneratedMessage
        implements AttackerOrBuilder {
      // Use Attacker.newBuilder() to construct.
      private Attacker(Builder builder) {
        super(builder);
      }
      private Attacker(boolean noInit) {}
      
      private static final Attacker defaultInstance;
      public static Attacker getDefaultInstance() {
        return defaultInstance;
      }
      
      public Attacker getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable;
      }
      
      public interface AbilityOrBuilder
          extends com.google.protobuf.MessageOrBuilder {
        
        // optional uint32 ability = 1;
        boolean hasAbility();
        int getAbility();
        
        // optional int32 damage = 2;
        boolean hasDamage();
        int getDamage();
      }
      public static final class Ability extends
          com.google.protobuf.GeneratedMessage
          implements AbilityOrBuilder {
        // Use Ability.newBuilder() to construct.
        private Ability(Builder builder) {
          super(builder);
        }
        private Ability(boolean noInit) {}
        
        private static final Ability defaultInstance;
        public static Ability getDefaultInstance() {
          return defaultInstance;
        }
        
        public Ability getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable;
        }
        
        private int bitField0_;
        // optional uint32 ability = 1;
        public static final int ABILITY_FIELD_NUMBER = 1;
        private int ability_;
        public boolean hasAbility() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getAbility() {
          return ability_;
        }
        
        // optional int32 damage = 2;
        public static final int DAMAGE_FIELD_NUMBER = 2;
        private int damage_;
        public boolean hasDamage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getDamage() {
          return damage_;
        }
        
        private void initFields() {
          ability_ = 0;
          damage_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, ability_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(2, damage_);
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, ability_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, damage_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
          }
          
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable;
          }
          
          // Construct using DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private Builder(BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            ability_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            damage_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDescriptor();
          }
          
          public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getDefaultInstanceForType() {
            return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance();
          }
          
          public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability build() {
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability buildPartial() {
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability result = new DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.ability_ = ability_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.damage_ = damage_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability) {
              return mergeFrom((DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability other) {
            if (other == DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance()) return this;
            if (other.hasAbility()) {
              setAbility(other.getAbility());
            }
            if (other.hasDamage()) {
              setDamage(other.getDamage());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public final boolean isInitialized() {
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    onChanged();
                    return this;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  ability_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  damage_ = input.readInt32();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // optional uint32 ability = 1;
          private int ability_ ;
          public boolean hasAbility() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public int getAbility() {
            return ability_;
          }
          public Builder setAbility(int value) {
            bitField0_ |= 0x00000001;
            ability_ = value;
            onChanged();
            return this;
          }
          public Builder clearAbility() {
            bitField0_ = (bitField0_ & ~0x00000001);
            ability_ = 0;
            onChanged();
            return this;
          }
          
          // optional int32 damage = 2;
          private int damage_ ;
          public boolean hasDamage() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public int getDamage() {
            return damage_;
          }
          public Builder setDamage(int value) {
            bitField0_ |= 0x00000002;
            damage_ = value;
            onChanged();
            return this;
          }
          public Builder clearDamage() {
            bitField0_ = (bitField0_ & ~0x00000002);
            damage_ = 0;
            onChanged();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
        }
        
        static {
          defaultInstance = new Ability(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
      }
      
      private int bitField0_;
      // optional uint32 attacker = 1;
      public static final int ATTACKER_FIELD_NUMBER = 1;
      private int attacker_;
      public boolean hasAttacker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getAttacker() {
        return attacker_;
      }
      
      // optional int32 total_damage = 2;
      public static final int TOTAL_DAMAGE_FIELD_NUMBER = 2;
      private int totalDamage_;
      public boolean hasTotalDamage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTotalDamage() {
        return totalDamage_;
      }
      
      // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
      public static final int ABILITIES_FIELD_NUMBER = 3;
      private java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> abilities_;
      public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> getAbilitiesList() {
        return abilities_;
      }
      public java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
          getAbilitiesOrBuilderList() {
        return abilities_;
      }
      public int getAbilitiesCount() {
        return abilities_.size();
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index) {
        return abilities_.get(index);
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
          int index) {
        return abilities_.get(index);
      }
      
      private void initFields() {
        attacker_ = 0;
        totalDamage_ = 0;
        abilities_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, attacker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, totalDamage_);
        }
        for (int i = 0; i < abilities_.size(); i++) {
          output.writeMessage(3, abilities_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, attacker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, totalDamage_);
        }
        for (int i = 0; i < abilities_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, abilities_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAbilitiesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          attacker_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          totalDamage_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (abilitiesBuilder_ == null) {
            abilities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            abilitiesBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker build() {
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker buildPartial() {
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker result = new DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.attacker_ = attacker_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.totalDamage_ = totalDamage_;
          if (abilitiesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              abilities_ = java.util.Collections.unmodifiableList(abilities_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.abilities_ = abilities_;
          } else {
            result.abilities_ = abilitiesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker other) {
          if (other == DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance()) return this;
          if (other.hasAttacker()) {
            setAttacker(other.getAttacker());
          }
          if (other.hasTotalDamage()) {
            setTotalDamage(other.getTotalDamage());
          }
          if (abilitiesBuilder_ == null) {
            if (!other.abilities_.isEmpty()) {
              if (abilities_.isEmpty()) {
                abilities_ = other.abilities_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureAbilitiesIsMutable();
                abilities_.addAll(other.abilities_);
              }
              onChanged();
            }
          } else {
            if (!other.abilities_.isEmpty()) {
              if (abilitiesBuilder_.isEmpty()) {
                abilitiesBuilder_.dispose();
                abilitiesBuilder_ = null;
                abilities_ = other.abilities_;
                bitField0_ = (bitField0_ & ~0x00000004);
                abilitiesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAbilitiesFieldBuilder() : null;
              } else {
                abilitiesBuilder_.addAllMessages(other.abilities_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                attacker_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                totalDamage_ = input.readInt32();
                break;
              }
              case 26: {
                DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addAbilities(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional uint32 attacker = 1;
        private int attacker_ ;
        public boolean hasAttacker() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getAttacker() {
          return attacker_;
        }
        public Builder setAttacker(int value) {
          bitField0_ |= 0x00000001;
          attacker_ = value;
          onChanged();
          return this;
        }
        public Builder clearAttacker() {
          bitField0_ = (bitField0_ & ~0x00000001);
          attacker_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 total_damage = 2;
        private int totalDamage_ ;
        public boolean hasTotalDamage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getTotalDamage() {
          return totalDamage_;
        }
        public Builder setTotalDamage(int value) {
          bitField0_ |= 0x00000002;
          totalDamage_ = value;
          onChanged();
          return this;
        }
        public Builder clearTotalDamage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          totalDamage_ = 0;
          onChanged();
          return this;
        }
        
        // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
        private java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> abilities_ =
          java.util.Collections.emptyList();
        private void ensureAbilitiesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            abilities_ = new java.util.ArrayList<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability>(abilities_);
            bitField0_ |= 0x00000004;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> abilitiesBuilder_;
        
        public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> getAbilitiesList() {
          if (abilitiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(abilities_);
          } else {
            return abilitiesBuilder_.getMessageList();
          }
        }
        public int getAbilitiesCount() {
          if (abilitiesBuilder_ == null) {
            return abilities_.size();
          } else {
            return abilitiesBuilder_.getCount();
          }
        }
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability getAbilities(int index) {
          if (abilitiesBuilder_ == null) {
            return abilities_.get(index);
          } else {
            return abilitiesBuilder_.getMessage(index);
          }
        }
        public Builder setAbilities(
            int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.set(index, value);
            onChanged();
          } else {
            abilitiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setAbilities(
            int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.set(index, builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAbilities(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.add(value);
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addAbilities(
            int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability value) {
          if (abilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilitiesIsMutable();
            abilities_.add(index, value);
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addAbilities(
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.add(builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addAbilities(
            int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder builderForValue) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.add(index, builderForValue.build());
            onChanged();
          } else {
            abilitiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllAbilities(
            java.lang.Iterable<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability> values) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            super.addAll(values, abilities_);
            onChanged();
          } else {
            abilitiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearAbilities() {
          if (abilitiesBuilder_ == null) {
            abilities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            abilitiesBuilder_.clear();
          }
          return this;
        }
        public Builder removeAbilities(int index) {
          if (abilitiesBuilder_ == null) {
            ensureAbilitiesIsMutable();
            abilities_.remove(index);
            onChanged();
          } else {
            abilitiesBuilder_.remove(index);
          }
          return this;
        }
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder getAbilitiesBuilder(
            int index) {
          return getAbilitiesFieldBuilder().getBuilder(index);
        }
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder getAbilitiesOrBuilder(
            int index) {
          if (abilitiesBuilder_ == null) {
            return abilities_.get(index);  } else {
            return abilitiesBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
             getAbilitiesOrBuilderList() {
          if (abilitiesBuilder_ != null) {
            return abilitiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(abilities_);
          }
        }
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder addAbilitiesBuilder() {
          return getAbilitiesFieldBuilder().addBuilder(
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance());
        }
        public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder addAbilitiesBuilder(
            int index) {
          return getAbilitiesFieldBuilder().addBuilder(
              index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.getDefaultInstance());
        }
        public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder> 
             getAbilitiesBuilderList() {
          return getAbilitiesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder> 
            getAbilitiesFieldBuilder() {
          if (abilitiesBuilder_ == null) {
            abilitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.AbilityOrBuilder>(
                    abilities_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            abilities_ = null;
          }
          return abilitiesBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker)
      }
      
      static {
        defaultInstance = new Attacker(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker)
    }
    
    // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
    public static final int ATTACKERS_FIELD_NUMBER = 1;
    private java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> attackers_;
    public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> getAttackersList() {
      return attackers_;
    }
    public java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
        getAttackersOrBuilderList() {
      return attackers_;
    }
    public int getAttackersCount() {
      return attackers_.size();
    }
    public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index) {
      return attackers_.get(index);
    }
    public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
        int index) {
      return attackers_.get(index);
    }
    
    private void initFields() {
      attackers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < attackers_.size(); i++) {
        output.writeMessage(1, attackers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < attackers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, attackers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_MiniKillCamInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttackersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (attackersBuilder_ == null) {
          attackers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          attackersBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo build() {
        DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo buildPartial() {
        DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo result = new DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo(this);
        int from_bitField0_ = bitField0_;
        if (attackersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            attackers_ = java.util.Collections.unmodifiableList(attackers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.attackers_ = attackers_;
        } else {
          result.attackers_ = attackersBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo other) {
        if (other == DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.getDefaultInstance()) return this;
        if (attackersBuilder_ == null) {
          if (!other.attackers_.isEmpty()) {
            if (attackers_.isEmpty()) {
              attackers_ = other.attackers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAttackersIsMutable();
              attackers_.addAll(other.attackers_);
            }
            onChanged();
          }
        } else {
          if (!other.attackers_.isEmpty()) {
            if (attackersBuilder_.isEmpty()) {
              attackersBuilder_.dispose();
              attackersBuilder_ = null;
              attackers_ = other.attackers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              attackersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttackersFieldBuilder() : null;
            } else {
              attackersBuilder_.addAllMessages(other.attackers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttackers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
      private java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> attackers_ =
        java.util.Collections.emptyList();
      private void ensureAttackersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          attackers_ = new java.util.ArrayList<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker>(attackers_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> attackersBuilder_;
      
      public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> getAttackersList() {
        if (attackersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attackers_);
        } else {
          return attackersBuilder_.getMessageList();
        }
      }
      public int getAttackersCount() {
        if (attackersBuilder_ == null) {
          return attackers_.size();
        } else {
          return attackersBuilder_.getCount();
        }
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker getAttackers(int index) {
        if (attackersBuilder_ == null) {
          return attackers_.get(index);
        } else {
          return attackersBuilder_.getMessage(index);
        }
      }
      public Builder setAttackers(
          int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.set(index, value);
          onChanged();
        } else {
          attackersBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAttackers(
          int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.set(index, builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAttackers(DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.add(value);
          onChanged();
        } else {
          attackersBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAttackers(
          int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker value) {
        if (attackersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttackersIsMutable();
          attackers_.add(index, value);
          onChanged();
        } else {
          attackersBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAttackers(
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.add(builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAttackers(
          int index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder builderForValue) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.add(index, builderForValue.build());
          onChanged();
        } else {
          attackersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAttackers(
          java.lang.Iterable<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker> values) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          super.addAll(values, attackers_);
          onChanged();
        } else {
          attackersBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAttackers() {
        if (attackersBuilder_ == null) {
          attackers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          attackersBuilder_.clear();
        }
        return this;
      }
      public Builder removeAttackers(int index) {
        if (attackersBuilder_ == null) {
          ensureAttackersIsMutable();
          attackers_.remove(index);
          onChanged();
        } else {
          attackersBuilder_.remove(index);
        }
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder getAttackersBuilder(
          int index) {
        return getAttackersFieldBuilder().getBuilder(index);
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder getAttackersOrBuilder(
          int index) {
        if (attackersBuilder_ == null) {
          return attackers_.get(index);  } else {
          return attackersBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
           getAttackersOrBuilderList() {
        if (attackersBuilder_ != null) {
          return attackersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attackers_);
        }
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder addAttackersBuilder() {
        return getAttackersFieldBuilder().addBuilder(
            DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance());
      }
      public DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder addAttackersBuilder(
          int index) {
        return getAttackersFieldBuilder().addBuilder(
            index, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.getDefaultInstance());
      }
      public java.util.List<DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder> 
           getAttackersBuilderList() {
        return getAttackersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder> 
          getAttackersFieldBuilder() {
        if (attackersBuilder_ == null) {
          attackersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder, DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.AttackerOrBuilder>(
                  attackers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          attackers_ = null;
        }
        return attackersBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MiniKillCamInfo)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_MiniKillCamInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo)
  }
  
  public interface CDOTAUserMsg_GlobalLightColorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 color = 1;
    boolean hasColor();
    int getColor();
    
    // optional float duration = 2;
    boolean hasDuration();
    float getDuration();
  }
  public static final class CDOTAUserMsg_GlobalLightColor extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_GlobalLightColorOrBuilder {
    // Use CDOTAUserMsg_GlobalLightColor.newBuilder() to construct.
    private CDOTAUserMsg_GlobalLightColor(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_GlobalLightColor(boolean noInit) {}
    
    private static final CDOTAUserMsg_GlobalLightColor defaultInstance;
    public static CDOTAUserMsg_GlobalLightColor getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_GlobalLightColor getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 color = 1;
    public static final int COLOR_FIELD_NUMBER = 1;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getColor() {
      return color_;
    }
    
    // optional float duration = 2;
    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getDuration() {
      return duration_;
    }
    
    private void initFields() {
      color_ = 0;
      duration_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, color_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightColor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_GlobalLightColor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_GlobalLightColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_GlobalLightColor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_GlobalLightColor.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightColor getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_GlobalLightColor.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightColor build() {
        DotaUsermessages.CDOTAUserMsg_GlobalLightColor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_GlobalLightColor buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_GlobalLightColor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightColor buildPartial() {
        DotaUsermessages.CDOTAUserMsg_GlobalLightColor result = new DotaUsermessages.CDOTAUserMsg_GlobalLightColor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_GlobalLightColor) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_GlobalLightColor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_GlobalLightColor other) {
        if (other == DotaUsermessages.CDOTAUserMsg_GlobalLightColor.getDefaultInstance()) return this;
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              color_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 color = 1;
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000001;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // optional float duration = 2;
      private float duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getDuration() {
        return duration_;
      }
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GlobalLightColor)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_GlobalLightColor(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightColor)
  }
  
  public interface CDOTAUserMsg_GlobalLightDirectionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CMsgVector direction = 1;
    boolean hasDirection();
    Networkbasetypes.CMsgVector getDirection();
    Networkbasetypes.CMsgVectorOrBuilder getDirectionOrBuilder();
    
    // optional float duration = 2;
    boolean hasDuration();
    float getDuration();
  }
  public static final class CDOTAUserMsg_GlobalLightDirection extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_GlobalLightDirectionOrBuilder {
    // Use CDOTAUserMsg_GlobalLightDirection.newBuilder() to construct.
    private CDOTAUserMsg_GlobalLightDirection(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_GlobalLightDirection(boolean noInit) {}
    
    private static final CDOTAUserMsg_GlobalLightDirection defaultInstance;
    public static CDOTAUserMsg_GlobalLightDirection getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_GlobalLightDirection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CMsgVector direction = 1;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private Networkbasetypes.CMsgVector direction_;
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Networkbasetypes.CMsgVector getDirection() {
      return direction_;
    }
    public Networkbasetypes.CMsgVectorOrBuilder getDirectionOrBuilder() {
      return direction_;
    }
    
    // optional float duration = 2;
    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getDuration() {
      return duration_;
    }
    
    private void initFields() {
      direction_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      duration_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, direction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, duration_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, direction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_GlobalLightDirection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_GlobalLightDirection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_GlobalLightDirectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDirectionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (directionBuilder_ == null) {
          direction_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        } else {
          directionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightDirection getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightDirection build() {
        DotaUsermessages.CDOTAUserMsg_GlobalLightDirection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_GlobalLightDirection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_GlobalLightDirection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_GlobalLightDirection buildPartial() {
        DotaUsermessages.CDOTAUserMsg_GlobalLightDirection result = new DotaUsermessages.CDOTAUserMsg_GlobalLightDirection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (directionBuilder_ == null) {
          result.direction_ = direction_;
        } else {
          result.direction_ = directionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_GlobalLightDirection) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_GlobalLightDirection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_GlobalLightDirection other) {
        if (other == DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          mergeDirection(other.getDirection());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
              if (hasDirection()) {
                subBuilder.mergeFrom(getDirection());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDirection(subBuilder.buildPartial());
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duration_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CMsgVector direction = 1;
      private Networkbasetypes.CMsgVector direction_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> directionBuilder_;
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Networkbasetypes.CMsgVector getDirection() {
        if (directionBuilder_ == null) {
          return direction_;
        } else {
          return directionBuilder_.getMessage();
        }
      }
      public Builder setDirection(Networkbasetypes.CMsgVector value) {
        if (directionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          direction_ = value;
          onChanged();
        } else {
          directionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setDirection(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (directionBuilder_ == null) {
          direction_ = builderForValue.build();
          onChanged();
        } else {
          directionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeDirection(Networkbasetypes.CMsgVector value) {
        if (directionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              direction_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            direction_ =
              Networkbasetypes.CMsgVector.newBuilder(direction_).mergeFrom(value).buildPartial();
          } else {
            direction_ = value;
          }
          onChanged();
        } else {
          directionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearDirection() {
        if (directionBuilder_ == null) {
          direction_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          directionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Networkbasetypes.CMsgVector.Builder getDirectionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDirectionFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVectorOrBuilder getDirectionOrBuilder() {
        if (directionBuilder_ != null) {
          return directionBuilder_.getMessageOrBuilder();
        } else {
          return direction_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getDirectionFieldBuilder() {
        if (directionBuilder_ == null) {
          directionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  direction_,
                  getParentForChildren(),
                  isClean());
          direction_ = null;
        }
        return directionBuilder_;
      }
      
      // optional float duration = 2;
      private float duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getDuration() {
        return duration_;
      }
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_GlobalLightDirection)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_GlobalLightDirection(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightDirection)
  }
  
  public interface CDOTAUserMsg_LocationPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_LocationPing location_ping = 2;
    boolean hasLocationPing();
    DotaCommonmessages.CDOTAMsg_LocationPing getLocationPing();
    DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder();
  }
  public static final class CDOTAUserMsg_LocationPing extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_LocationPingOrBuilder {
    // Use CDOTAUserMsg_LocationPing.newBuilder() to construct.
    private CDOTAUserMsg_LocationPing(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_LocationPing(boolean noInit) {}
    
    private static final CDOTAUserMsg_LocationPing defaultInstance;
    public static CDOTAUserMsg_LocationPing getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_LocationPing getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_LocationPing_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_LocationPing location_ping = 2;
    public static final int LOCATION_PING_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_LocationPing locationPing_;
    public boolean hasLocationPing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_LocationPing getLocationPing() {
      return locationPing_;
    }
    public DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder() {
      return locationPing_;
    }
    
    private void initFields() {
      playerId_ = 0;
      locationPing_ = DotaCommonmessages.CDOTAMsg_LocationPing.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, locationPing_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, locationPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_LocationPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_LocationPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_LocationPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_LocationPing_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_LocationPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationPingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationPingBuilder_ == null) {
          locationPing_ = DotaCommonmessages.CDOTAMsg_LocationPing.getDefaultInstance();
        } else {
          locationPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_LocationPing.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_LocationPing getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_LocationPing.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_LocationPing build() {
        DotaUsermessages.CDOTAUserMsg_LocationPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_LocationPing buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_LocationPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_LocationPing buildPartial() {
        DotaUsermessages.CDOTAUserMsg_LocationPing result = new DotaUsermessages.CDOTAUserMsg_LocationPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (locationPingBuilder_ == null) {
          result.locationPing_ = locationPing_;
        } else {
          result.locationPing_ = locationPingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_LocationPing) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_LocationPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_LocationPing other) {
        if (other == DotaUsermessages.CDOTAUserMsg_LocationPing.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLocationPing()) {
          mergeLocationPing(other.getLocationPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_LocationPing.Builder subBuilder = DotaCommonmessages.CDOTAMsg_LocationPing.newBuilder();
              if (hasLocationPing()) {
                subBuilder.mergeFrom(getLocationPing());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocationPing(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_LocationPing location_ping = 2;
      private DotaCommonmessages.CDOTAMsg_LocationPing locationPing_ = DotaCommonmessages.CDOTAMsg_LocationPing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_LocationPing, DotaCommonmessages.CDOTAMsg_LocationPing.Builder, DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder> locationPingBuilder_;
      public boolean hasLocationPing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_LocationPing getLocationPing() {
        if (locationPingBuilder_ == null) {
          return locationPing_;
        } else {
          return locationPingBuilder_.getMessage();
        }
      }
      public Builder setLocationPing(DotaCommonmessages.CDOTAMsg_LocationPing value) {
        if (locationPingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationPing_ = value;
          onChanged();
        } else {
          locationPingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setLocationPing(
          DotaCommonmessages.CDOTAMsg_LocationPing.Builder builderForValue) {
        if (locationPingBuilder_ == null) {
          locationPing_ = builderForValue.build();
          onChanged();
        } else {
          locationPingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeLocationPing(DotaCommonmessages.CDOTAMsg_LocationPing value) {
        if (locationPingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              locationPing_ != DotaCommonmessages.CDOTAMsg_LocationPing.getDefaultInstance()) {
            locationPing_ =
              DotaCommonmessages.CDOTAMsg_LocationPing.newBuilder(locationPing_).mergeFrom(value).buildPartial();
          } else {
            locationPing_ = value;
          }
          onChanged();
        } else {
          locationPingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearLocationPing() {
        if (locationPingBuilder_ == null) {
          locationPing_ = DotaCommonmessages.CDOTAMsg_LocationPing.getDefaultInstance();
          onChanged();
        } else {
          locationPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_LocationPing.Builder getLocationPingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocationPingFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder getLocationPingOrBuilder() {
        if (locationPingBuilder_ != null) {
          return locationPingBuilder_.getMessageOrBuilder();
        } else {
          return locationPing_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_LocationPing, DotaCommonmessages.CDOTAMsg_LocationPing.Builder, DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder> 
          getLocationPingFieldBuilder() {
        if (locationPingBuilder_ == null) {
          locationPingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_LocationPing, DotaCommonmessages.CDOTAMsg_LocationPing.Builder, DotaCommonmessages.CDOTAMsg_LocationPingOrBuilder>(
                  locationPing_,
                  getParentForChildren(),
                  isClean());
          locationPing_ = null;
        }
        return locationPingBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_LocationPing)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_LocationPing(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_LocationPing)
  }
  
  public interface CDOTAUserMsg_ItemAlertOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_ItemAlert item_alert = 2;
    boolean hasItemAlert();
    DotaCommonmessages.CDOTAMsg_ItemAlert getItemAlert();
    DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder();
  }
  public static final class CDOTAUserMsg_ItemAlert extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ItemAlertOrBuilder {
    // Use CDOTAUserMsg_ItemAlert.newBuilder() to construct.
    private CDOTAUserMsg_ItemAlert(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ItemAlert(boolean noInit) {}
    
    private static final CDOTAUserMsg_ItemAlert defaultInstance;
    public static CDOTAUserMsg_ItemAlert getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ItemAlert getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemAlert_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_ItemAlert item_alert = 2;
    public static final int ITEM_ALERT_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_ItemAlert itemAlert_;
    public boolean hasItemAlert() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_ItemAlert getItemAlert() {
      return itemAlert_;
    }
    public DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder() {
      return itemAlert_;
    }
    
    private void initFields() {
      playerId_ = 0;
      itemAlert_ = DotaCommonmessages.CDOTAMsg_ItemAlert.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, itemAlert_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, itemAlert_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemAlert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ItemAlert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ItemAlertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemAlert_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ItemAlert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemAlertFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (itemAlertBuilder_ == null) {
          itemAlert_ = DotaCommonmessages.CDOTAMsg_ItemAlert.getDefaultInstance();
        } else {
          itemAlertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemAlert.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemAlert getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemAlert.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemAlert build() {
        DotaUsermessages.CDOTAUserMsg_ItemAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ItemAlert buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ItemAlert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemAlert buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ItemAlert result = new DotaUsermessages.CDOTAUserMsg_ItemAlert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (itemAlertBuilder_ == null) {
          result.itemAlert_ = itemAlert_;
        } else {
          result.itemAlert_ = itemAlertBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ItemAlert) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ItemAlert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ItemAlert other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ItemAlert.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasItemAlert()) {
          mergeItemAlert(other.getItemAlert());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_ItemAlert.Builder subBuilder = DotaCommonmessages.CDOTAMsg_ItemAlert.newBuilder();
              if (hasItemAlert()) {
                subBuilder.mergeFrom(getItemAlert());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemAlert(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_ItemAlert item_alert = 2;
      private DotaCommonmessages.CDOTAMsg_ItemAlert itemAlert_ = DotaCommonmessages.CDOTAMsg_ItemAlert.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_ItemAlert, DotaCommonmessages.CDOTAMsg_ItemAlert.Builder, DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder> itemAlertBuilder_;
      public boolean hasItemAlert() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_ItemAlert getItemAlert() {
        if (itemAlertBuilder_ == null) {
          return itemAlert_;
        } else {
          return itemAlertBuilder_.getMessage();
        }
      }
      public Builder setItemAlert(DotaCommonmessages.CDOTAMsg_ItemAlert value) {
        if (itemAlertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          itemAlert_ = value;
          onChanged();
        } else {
          itemAlertBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setItemAlert(
          DotaCommonmessages.CDOTAMsg_ItemAlert.Builder builderForValue) {
        if (itemAlertBuilder_ == null) {
          itemAlert_ = builderForValue.build();
          onChanged();
        } else {
          itemAlertBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeItemAlert(DotaCommonmessages.CDOTAMsg_ItemAlert value) {
        if (itemAlertBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              itemAlert_ != DotaCommonmessages.CDOTAMsg_ItemAlert.getDefaultInstance()) {
            itemAlert_ =
              DotaCommonmessages.CDOTAMsg_ItemAlert.newBuilder(itemAlert_).mergeFrom(value).buildPartial();
          } else {
            itemAlert_ = value;
          }
          onChanged();
        } else {
          itemAlertBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearItemAlert() {
        if (itemAlertBuilder_ == null) {
          itemAlert_ = DotaCommonmessages.CDOTAMsg_ItemAlert.getDefaultInstance();
          onChanged();
        } else {
          itemAlertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_ItemAlert.Builder getItemAlertBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getItemAlertFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder getItemAlertOrBuilder() {
        if (itemAlertBuilder_ != null) {
          return itemAlertBuilder_.getMessageOrBuilder();
        } else {
          return itemAlert_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_ItemAlert, DotaCommonmessages.CDOTAMsg_ItemAlert.Builder, DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder> 
          getItemAlertFieldBuilder() {
        if (itemAlertBuilder_ == null) {
          itemAlertBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_ItemAlert, DotaCommonmessages.CDOTAMsg_ItemAlert.Builder, DotaCommonmessages.CDOTAMsg_ItemAlertOrBuilder>(
                  itemAlert_,
                  getParentForChildren(),
                  isClean());
          itemAlert_ = null;
        }
        return itemAlertBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemAlert)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ItemAlert(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemAlert)
  }
  
  public interface CDOTAUserMsg_MinimapEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 event_type = 1;
    boolean hasEventType();
    int getEventType();
    
    // optional int32 entity_handle = 2;
    boolean hasEntityHandle();
    int getEntityHandle();
    
    // optional int32 x = 3;
    boolean hasX();
    int getX();
    
    // optional int32 y = 4;
    boolean hasY();
    int getY();
    
    // optional int32 duration = 5;
    boolean hasDuration();
    int getDuration();
  }
  public static final class CDOTAUserMsg_MinimapEvent extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_MinimapEventOrBuilder {
    // Use CDOTAUserMsg_MinimapEvent.newBuilder() to construct.
    private CDOTAUserMsg_MinimapEvent(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_MinimapEvent(boolean noInit) {}
    
    private static final CDOTAUserMsg_MinimapEvent defaultInstance;
    public static CDOTAUserMsg_MinimapEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_MinimapEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 event_type = 1;
    public static final int EVENT_TYPE_FIELD_NUMBER = 1;
    private int eventType_;
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEventType() {
      return eventType_;
    }
    
    // optional int32 entity_handle = 2;
    public static final int ENTITY_HANDLE_FIELD_NUMBER = 2;
    private int entityHandle_;
    public boolean hasEntityHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getEntityHandle() {
      return entityHandle_;
    }
    
    // optional int32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getX() {
      return x_;
    }
    
    // optional int32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getY() {
      return y_;
    }
    
    // optional int32 duration = 5;
    public static final int DURATION_FIELD_NUMBER = 5;
    private int duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getDuration() {
      return duration_;
    }
    
    private void initFields() {
      eventType_ = 0;
      entityHandle_ = 0;
      x_ = 0;
      y_ = 0;
      duration_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eventType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, entityHandle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, duration_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eventType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, entityHandle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MinimapEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_MinimapEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_MinimapEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        eventType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_MinimapEvent.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapEvent getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_MinimapEvent.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapEvent build() {
        DotaUsermessages.CDOTAUserMsg_MinimapEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_MinimapEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_MinimapEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapEvent buildPartial() {
        DotaUsermessages.CDOTAUserMsg_MinimapEvent result = new DotaUsermessages.CDOTAUserMsg_MinimapEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityHandle_ = entityHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_MinimapEvent) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_MinimapEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MinimapEvent other) {
        if (other == DotaUsermessages.CDOTAUserMsg_MinimapEvent.getDefaultInstance()) return this;
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEntityHandle()) {
          setEntityHandle(other.getEntityHandle());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              entityHandle_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              x_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              y_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              duration_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 event_type = 1;
      private int eventType_ ;
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEventType() {
        return eventType_;
      }
      public Builder setEventType(int value) {
        bitField0_ |= 0x00000001;
        eventType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 entity_handle = 2;
      private int entityHandle_ ;
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEntityHandle() {
        return entityHandle_;
      }
      public Builder setEntityHandle(int value) {
        bitField0_ |= 0x00000002;
        entityHandle_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntityHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityHandle_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 x = 3;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000004;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 y = 4;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 duration = 5;
      private int duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getDuration() {
        return duration_;
      }
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000010;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MinimapEvent)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_MinimapEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapEvent)
  }
  
  public interface CDOTAUserMsg_MapLineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_MapLine mapline = 2;
    boolean hasMapline();
    DotaCommonmessages.CDOTAMsg_MapLine getMapline();
    DotaCommonmessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder();
  }
  public static final class CDOTAUserMsg_MapLine extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_MapLineOrBuilder {
    // Use CDOTAUserMsg_MapLine.newBuilder() to construct.
    private CDOTAUserMsg_MapLine(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_MapLine(boolean noInit) {}
    
    private static final CDOTAUserMsg_MapLine defaultInstance;
    public static CDOTAUserMsg_MapLine getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_MapLine getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MapLine_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_MapLine mapline = 2;
    public static final int MAPLINE_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_MapLine mapline_;
    public boolean hasMapline() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_MapLine getMapline() {
      return mapline_;
    }
    public DotaCommonmessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder() {
      return mapline_;
    }
    
    private void initFields() {
      playerId_ = 0;
      mapline_ = DotaCommonmessages.CDOTAMsg_MapLine.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, mapline_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mapline_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MapLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MapLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_MapLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MapLine_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_MapLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMaplineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (maplineBuilder_ == null) {
          mapline_ = DotaCommonmessages.CDOTAMsg_MapLine.getDefaultInstance();
        } else {
          maplineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_MapLine.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MapLine getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_MapLine.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MapLine build() {
        DotaUsermessages.CDOTAUserMsg_MapLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_MapLine buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_MapLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_MapLine buildPartial() {
        DotaUsermessages.CDOTAUserMsg_MapLine result = new DotaUsermessages.CDOTAUserMsg_MapLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (maplineBuilder_ == null) {
          result.mapline_ = mapline_;
        } else {
          result.mapline_ = maplineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_MapLine) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_MapLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MapLine other) {
        if (other == DotaUsermessages.CDOTAUserMsg_MapLine.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasMapline()) {
          mergeMapline(other.getMapline());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_MapLine.Builder subBuilder = DotaCommonmessages.CDOTAMsg_MapLine.newBuilder();
              if (hasMapline()) {
                subBuilder.mergeFrom(getMapline());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMapline(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_MapLine mapline = 2;
      private DotaCommonmessages.CDOTAMsg_MapLine mapline_ = DotaCommonmessages.CDOTAMsg_MapLine.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_MapLine, DotaCommonmessages.CDOTAMsg_MapLine.Builder, DotaCommonmessages.CDOTAMsg_MapLineOrBuilder> maplineBuilder_;
      public boolean hasMapline() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_MapLine getMapline() {
        if (maplineBuilder_ == null) {
          return mapline_;
        } else {
          return maplineBuilder_.getMessage();
        }
      }
      public Builder setMapline(DotaCommonmessages.CDOTAMsg_MapLine value) {
        if (maplineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapline_ = value;
          onChanged();
        } else {
          maplineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setMapline(
          DotaCommonmessages.CDOTAMsg_MapLine.Builder builderForValue) {
        if (maplineBuilder_ == null) {
          mapline_ = builderForValue.build();
          onChanged();
        } else {
          maplineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeMapline(DotaCommonmessages.CDOTAMsg_MapLine value) {
        if (maplineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              mapline_ != DotaCommonmessages.CDOTAMsg_MapLine.getDefaultInstance()) {
            mapline_ =
              DotaCommonmessages.CDOTAMsg_MapLine.newBuilder(mapline_).mergeFrom(value).buildPartial();
          } else {
            mapline_ = value;
          }
          onChanged();
        } else {
          maplineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearMapline() {
        if (maplineBuilder_ == null) {
          mapline_ = DotaCommonmessages.CDOTAMsg_MapLine.getDefaultInstance();
          onChanged();
        } else {
          maplineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_MapLine.Builder getMaplineBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMaplineFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_MapLineOrBuilder getMaplineOrBuilder() {
        if (maplineBuilder_ != null) {
          return maplineBuilder_.getMessageOrBuilder();
        } else {
          return mapline_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_MapLine, DotaCommonmessages.CDOTAMsg_MapLine.Builder, DotaCommonmessages.CDOTAMsg_MapLineOrBuilder> 
          getMaplineFieldBuilder() {
        if (maplineBuilder_ == null) {
          maplineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_MapLine, DotaCommonmessages.CDOTAMsg_MapLine.Builder, DotaCommonmessages.CDOTAMsg_MapLineOrBuilder>(
                  mapline_,
                  getParentForChildren(),
                  isClean());
          mapline_ = null;
        }
        return maplineBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MapLine)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_MapLine(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MapLine)
  }
  
  public interface CDOTAUserMsg_MinimapDebugPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CMsgVector location = 1;
    boolean hasLocation();
    Networkbasetypes.CMsgVector getLocation();
    Networkbasetypes.CMsgVectorOrBuilder getLocationOrBuilder();
    
    // optional uint32 color = 2;
    boolean hasColor();
    int getColor();
    
    // optional int32 size = 3;
    boolean hasSize();
    int getSize();
    
    // optional float duration = 4;
    boolean hasDuration();
    float getDuration();
  }
  public static final class CDOTAUserMsg_MinimapDebugPoint extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_MinimapDebugPointOrBuilder {
    // Use CDOTAUserMsg_MinimapDebugPoint.newBuilder() to construct.
    private CDOTAUserMsg_MinimapDebugPoint(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_MinimapDebugPoint(boolean noInit) {}
    
    private static final CDOTAUserMsg_MinimapDebugPoint defaultInstance;
    public static CDOTAUserMsg_MinimapDebugPoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_MinimapDebugPoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CMsgVector location = 1;
    public static final int LOCATION_FIELD_NUMBER = 1;
    private Networkbasetypes.CMsgVector location_;
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Networkbasetypes.CMsgVector getLocation() {
      return location_;
    }
    public Networkbasetypes.CMsgVectorOrBuilder getLocationOrBuilder() {
      return location_;
    }
    
    // optional uint32 color = 2;
    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getColor() {
      return color_;
    }
    
    // optional int32 size = 3;
    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSize() {
      return size_;
    }
    
    // optional float duration = 4;
    public static final int DURATION_FIELD_NUMBER = 4;
    private float duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getDuration() {
      return duration_;
    }
    
    private void initFields() {
      location_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      color_ = 0;
      size_ = 0;
      duration_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, duration_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_MinimapDebugPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (locationBuilder_ == null) {
          location_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint build() {
        DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint buildPartial() {
        DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint result = new DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint other) {
        if (other == DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.getDefaultInstance()) return this;
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
              if (hasLocation()) {
                subBuilder.mergeFrom(getLocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocation(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              color_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              duration_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CMsgVector location = 1;
      private Networkbasetypes.CMsgVector location_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> locationBuilder_;
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Networkbasetypes.CMsgVector getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      public Builder setLocation(Networkbasetypes.CMsgVector value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setLocation(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeLocation(Networkbasetypes.CMsgVector value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              location_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            location_ =
              Networkbasetypes.CMsgVector.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Networkbasetypes.CMsgVector.Builder getLocationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVectorOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }
      
      // optional uint32 color = 2;
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 size = 3;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // optional float duration = 4;
      private float duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getDuration() {
        return duration_;
      }
      public Builder setDuration(float value) {
        bitField0_ |= 0x00000008;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_MinimapDebugPoint)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_MinimapDebugPoint(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapDebugPoint)
  }
  
  public interface CDOTAUserMsg_CreateLinearProjectileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CMsgVector origin = 1;
    boolean hasOrigin();
    Networkbasetypes.CMsgVector getOrigin();
    Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder();
    
    // optional .CMsgVector2D velocity = 2;
    boolean hasVelocity();
    Networkbasetypes.CMsgVector2D getVelocity();
    Networkbasetypes.CMsgVector2DOrBuilder getVelocityOrBuilder();
    
    // optional int32 latency = 3;
    boolean hasLatency();
    int getLatency();
    
    // optional int32 entindex = 4;
    boolean hasEntindex();
    int getEntindex();
    
    // optional int32 particle_index = 5;
    boolean hasParticleIndex();
    int getParticleIndex();
    
    // optional int32 handle = 6;
    boolean hasHandle();
    int getHandle();
  }
  public static final class CDOTAUserMsg_CreateLinearProjectile extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CreateLinearProjectileOrBuilder {
    // Use CDOTAUserMsg_CreateLinearProjectile.newBuilder() to construct.
    private CDOTAUserMsg_CreateLinearProjectile(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CreateLinearProjectile(boolean noInit) {}
    
    private static final CDOTAUserMsg_CreateLinearProjectile defaultInstance;
    public static CDOTAUserMsg_CreateLinearProjectile getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CreateLinearProjectile getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CMsgVector origin = 1;
    public static final int ORIGIN_FIELD_NUMBER = 1;
    private Networkbasetypes.CMsgVector origin_;
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Networkbasetypes.CMsgVector getOrigin() {
      return origin_;
    }
    public Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }
    
    // optional .CMsgVector2D velocity = 2;
    public static final int VELOCITY_FIELD_NUMBER = 2;
    private Networkbasetypes.CMsgVector2D velocity_;
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public Networkbasetypes.CMsgVector2D getVelocity() {
      return velocity_;
    }
    public Networkbasetypes.CMsgVector2DOrBuilder getVelocityOrBuilder() {
      return velocity_;
    }
    
    // optional int32 latency = 3;
    public static final int LATENCY_FIELD_NUMBER = 3;
    private int latency_;
    public boolean hasLatency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLatency() {
      return latency_;
    }
    
    // optional int32 entindex = 4;
    public static final int ENTINDEX_FIELD_NUMBER = 4;
    private int entindex_;
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getEntindex() {
      return entindex_;
    }
    
    // optional int32 particle_index = 5;
    public static final int PARTICLE_INDEX_FIELD_NUMBER = 5;
    private int particleIndex_;
    public boolean hasParticleIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getParticleIndex() {
      return particleIndex_;
    }
    
    // optional int32 handle = 6;
    public static final int HANDLE_FIELD_NUMBER = 6;
    private int handle_;
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getHandle() {
      return handle_;
    }
    
    private void initFields() {
      origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      velocity_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
      latency_ = 0;
      entindex_ = 0;
      particleIndex_ = 0;
      handle_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, velocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, latency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, entindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, particleIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, handle_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, velocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, latency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, entindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, particleIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CreateLinearProjectileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
          getVelocityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (originBuilder_ == null) {
          origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (velocityBuilder_ == null) {
          velocity_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        latency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        particleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile build() {
        DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile result = new DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latency_ = latency_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.particleIndex_ = particleIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.handle_ = handle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.getDefaultInstance()) return this;
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasLatency()) {
          setLatency(other.getLatency());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasParticleIndex()) {
          setParticleIndex(other.getParticleIndex());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
              if (hasOrigin()) {
                subBuilder.mergeFrom(getOrigin());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOrigin(subBuilder.buildPartial());
              break;
            }
            case 18: {
              Networkbasetypes.CMsgVector2D.Builder subBuilder = Networkbasetypes.CMsgVector2D.newBuilder();
              if (hasVelocity()) {
                subBuilder.mergeFrom(getVelocity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVelocity(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              latency_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              entindex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              particleIndex_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              handle_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CMsgVector origin = 1;
      private Networkbasetypes.CMsgVector origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> originBuilder_;
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Networkbasetypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      public Builder setOrigin(Networkbasetypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setOrigin(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeOrigin(Networkbasetypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              origin_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              Networkbasetypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Networkbasetypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  origin_,
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }
      
      // optional .CMsgVector2D velocity = 2;
      private Networkbasetypes.CMsgVector2D velocity_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder> velocityBuilder_;
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector2D getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      public Builder setVelocity(Networkbasetypes.CMsgVector2D value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setVelocity(
          Networkbasetypes.CMsgVector2D.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeVelocity(Networkbasetypes.CMsgVector2D value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              velocity_ != Networkbasetypes.CMsgVector2D.getDefaultInstance()) {
            velocity_ =
              Networkbasetypes.CMsgVector2D.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = Networkbasetypes.CMsgVector2D.getDefaultInstance();
          onChanged();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public Networkbasetypes.CMsgVector2D.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVector2DOrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector2D, Networkbasetypes.CMsgVector2D.Builder, Networkbasetypes.CMsgVector2DOrBuilder>(
                  velocity_,
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }
      
      // optional int32 latency = 3;
      private int latency_ ;
      public boolean hasLatency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLatency() {
        return latency_;
      }
      public Builder setLatency(int value) {
        bitField0_ |= 0x00000004;
        latency_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latency_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 entindex = 4;
      private int entindex_ ;
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getEntindex() {
        return entindex_;
      }
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000008;
        entindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        entindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 particle_index = 5;
      private int particleIndex_ ;
      public boolean hasParticleIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getParticleIndex() {
        return particleIndex_;
      }
      public Builder setParticleIndex(int value) {
        bitField0_ |= 0x00000010;
        particleIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearParticleIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        particleIndex_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 handle = 6;
      private int handle_ ;
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getHandle() {
        return handle_;
      }
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000020;
        handle_ = value;
        onChanged();
        return this;
      }
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        handle_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CreateLinearProjectile)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CreateLinearProjectile(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CreateLinearProjectile)
  }
  
  public interface CDOTAUserMsg_DestroyLinearProjectileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 handle = 1;
    boolean hasHandle();
    int getHandle();
  }
  public static final class CDOTAUserMsg_DestroyLinearProjectile extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_DestroyLinearProjectileOrBuilder {
    // Use CDOTAUserMsg_DestroyLinearProjectile.newBuilder() to construct.
    private CDOTAUserMsg_DestroyLinearProjectile(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_DestroyLinearProjectile(boolean noInit) {}
    
    private static final CDOTAUserMsg_DestroyLinearProjectile defaultInstance;
    public static CDOTAUserMsg_DestroyLinearProjectile getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_DestroyLinearProjectile getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 handle = 1;
    public static final int HANDLE_FIELD_NUMBER = 1;
    private int handle_;
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getHandle() {
      return handle_;
    }
    
    private void initFields() {
      handle_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, handle_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile build() {
        DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile buildPartial() {
        DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile result = new DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handle_ = handle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile other) {
        if (other == DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.getDefaultInstance()) return this;
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              handle_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 handle = 1;
      private int handle_ ;
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getHandle() {
        return handle_;
      }
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000001;
        handle_ = value;
        onChanged();
        return this;
      }
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_DestroyLinearProjectile)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_DestroyLinearProjectile(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DestroyLinearProjectile)
  }
  
  public interface CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 entindex = 1;
    boolean hasEntindex();
    int getEntindex();
  }
  public static final class CDOTAUserMsg_DodgeTrackingProjectiles extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder {
    // Use CDOTAUserMsg_DodgeTrackingProjectiles.newBuilder() to construct.
    private CDOTAUserMsg_DodgeTrackingProjectiles(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_DodgeTrackingProjectiles(boolean noInit) {}
    
    private static final CDOTAUserMsg_DodgeTrackingProjectiles defaultInstance;
    public static CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 entindex = 1;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEntindex() {
      return entindex_;
    }
    
    private void initFields() {
      entindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasEntindex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectilesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles build() {
        DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles buildPartial() {
        DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles result = new DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles other) {
        if (other == DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasEntindex()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 entindex = 1;
      private int entindex_ ;
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEntindex() {
        return entindex_;
      }
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_DodgeTrackingProjectiles)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_DodgeTrackingProjectiles(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DodgeTrackingProjectiles)
  }
  
  public interface CDOTAUserMsg_SpectatorPlayerClickOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 entindex = 1;
    boolean hasEntindex();
    int getEntindex();
    
    // optional int32 order_type = 2;
    boolean hasOrderType();
    int getOrderType();
    
    // optional int32 target_index = 3;
    boolean hasTargetIndex();
    int getTargetIndex();
  }
  public static final class CDOTAUserMsg_SpectatorPlayerClick extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SpectatorPlayerClickOrBuilder {
    // Use CDOTAUserMsg_SpectatorPlayerClick.newBuilder() to construct.
    private CDOTAUserMsg_SpectatorPlayerClick(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SpectatorPlayerClick(boolean noInit) {}
    
    private static final CDOTAUserMsg_SpectatorPlayerClick defaultInstance;
    public static CDOTAUserMsg_SpectatorPlayerClick getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SpectatorPlayerClick getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 entindex = 1;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEntindex() {
      return entindex_;
    }
    
    // optional int32 order_type = 2;
    public static final int ORDER_TYPE_FIELD_NUMBER = 2;
    private int orderType_;
    public boolean hasOrderType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getOrderType() {
      return orderType_;
    }
    
    // optional int32 target_index = 3;
    public static final int TARGET_INDEX_FIELD_NUMBER = 3;
    private int targetIndex_;
    public boolean hasTargetIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTargetIndex() {
      return targetIndex_;
    }
    
    private void initFields() {
      entindex_ = 0;
      orderType_ = 0;
      targetIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasEntindex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, targetIndex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, targetIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick build() {
        DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick result = new DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderType_ = orderType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetIndex_ = targetIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasOrderType()) {
          setOrderType(other.getOrderType());
        }
        if (other.hasTargetIndex()) {
          setTargetIndex(other.getTargetIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasEntindex()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetIndex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 entindex = 1;
      private int entindex_ ;
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEntindex() {
        return entindex_;
      }
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 order_type = 2;
      private int orderType_ ;
      public boolean hasOrderType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getOrderType() {
        return orderType_;
      }
      public Builder setOrderType(int value) {
        bitField0_ |= 0x00000002;
        orderType_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 target_index = 3;
      private int targetIndex_ ;
      public boolean hasTargetIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTargetIndex() {
        return targetIndex_;
      }
      public Builder setTargetIndex(int value) {
        bitField0_ |= 0x00000004;
        targetIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetIndex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SpectatorPlayerClick)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SpectatorPlayerClick(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpectatorPlayerClick)
  }
  
  public interface CDOTAUserMsg_NevermoreRequiemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 entity_handle = 1;
    boolean hasEntityHandle();
    int getEntityHandle();
    
    // optional int32 lines = 2;
    boolean hasLines();
    int getLines();
    
    // optional .CMsgVector origin = 3;
    boolean hasOrigin();
    Networkbasetypes.CMsgVector getOrigin();
    Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder();
  }
  public static final class CDOTAUserMsg_NevermoreRequiem extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_NevermoreRequiemOrBuilder {
    // Use CDOTAUserMsg_NevermoreRequiem.newBuilder() to construct.
    private CDOTAUserMsg_NevermoreRequiem(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_NevermoreRequiem(boolean noInit) {}
    
    private static final CDOTAUserMsg_NevermoreRequiem defaultInstance;
    public static CDOTAUserMsg_NevermoreRequiem getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_NevermoreRequiem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 entity_handle = 1;
    public static final int ENTITY_HANDLE_FIELD_NUMBER = 1;
    private int entityHandle_;
    public boolean hasEntityHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEntityHandle() {
      return entityHandle_;
    }
    
    // optional int32 lines = 2;
    public static final int LINES_FIELD_NUMBER = 2;
    private int lines_;
    public boolean hasLines() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLines() {
      return lines_;
    }
    
    // optional .CMsgVector origin = 3;
    public static final int ORIGIN_FIELD_NUMBER = 3;
    private Networkbasetypes.CMsgVector origin_;
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Networkbasetypes.CMsgVector getOrigin() {
      return origin_;
    }
    public Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }
    
    private void initFields() {
      entityHandle_ = 0;
      lines_ = 0;
      origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entityHandle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, origin_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entityHandle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, origin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_NevermoreRequiem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_NevermoreRequiem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_NevermoreRequiemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entityHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (originBuilder_ == null) {
          origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_NevermoreRequiem getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_NevermoreRequiem build() {
        DotaUsermessages.CDOTAUserMsg_NevermoreRequiem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_NevermoreRequiem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_NevermoreRequiem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_NevermoreRequiem buildPartial() {
        DotaUsermessages.CDOTAUserMsg_NevermoreRequiem result = new DotaUsermessages.CDOTAUserMsg_NevermoreRequiem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entityHandle_ = entityHandle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lines_ = lines_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_NevermoreRequiem) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_NevermoreRequiem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_NevermoreRequiem other) {
        if (other == DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.getDefaultInstance()) return this;
        if (other.hasEntityHandle()) {
          setEntityHandle(other.getEntityHandle());
        }
        if (other.hasLines()) {
          setLines(other.getLines());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entityHandle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lines_ = input.readInt32();
              break;
            }
            case 26: {
              Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
              if (hasOrigin()) {
                subBuilder.mergeFrom(getOrigin());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOrigin(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 entity_handle = 1;
      private int entityHandle_ ;
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEntityHandle() {
        return entityHandle_;
      }
      public Builder setEntityHandle(int value) {
        bitField0_ |= 0x00000001;
        entityHandle_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntityHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entityHandle_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 lines = 2;
      private int lines_ ;
      public boolean hasLines() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLines() {
        return lines_;
      }
      public Builder setLines(int value) {
        bitField0_ |= 0x00000002;
        lines_ = value;
        onChanged();
        return this;
      }
      public Builder clearLines() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lines_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CMsgVector origin = 3;
      private Networkbasetypes.CMsgVector origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> originBuilder_;
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Networkbasetypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      public Builder setOrigin(Networkbasetypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setOrigin(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeOrigin(Networkbasetypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              origin_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              Networkbasetypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Networkbasetypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      public Networkbasetypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  origin_,
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_NevermoreRequiem)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_NevermoreRequiem(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_NevermoreRequiem)
  }
  
  public interface CDOTAUserMsg_InvalidCommandOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class CDOTAUserMsg_InvalidCommand extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_InvalidCommandOrBuilder {
    // Use CDOTAUserMsg_InvalidCommand.newBuilder() to construct.
    private CDOTAUserMsg_InvalidCommand(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_InvalidCommand(boolean noInit) {}
    
    private static final CDOTAUserMsg_InvalidCommand defaultInstance;
    public static CDOTAUserMsg_InvalidCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_InvalidCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_InvalidCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_InvalidCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_InvalidCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_InvalidCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_InvalidCommand.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_InvalidCommand getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_InvalidCommand.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_InvalidCommand build() {
        DotaUsermessages.CDOTAUserMsg_InvalidCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_InvalidCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_InvalidCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_InvalidCommand buildPartial() {
        DotaUsermessages.CDOTAUserMsg_InvalidCommand result = new DotaUsermessages.CDOTAUserMsg_InvalidCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_InvalidCommand) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_InvalidCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_InvalidCommand other) {
        if (other == DotaUsermessages.CDOTAUserMsg_InvalidCommand.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_InvalidCommand)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_InvalidCommand(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_InvalidCommand)
  }
  
  public interface CDOTAUserMsg_HudErrorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 order_id = 1;
    boolean hasOrderId();
    int getOrderId();
  }
  public static final class CDOTAUserMsg_HudError extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_HudErrorOrBuilder {
    // Use CDOTAUserMsg_HudError.newBuilder() to construct.
    private CDOTAUserMsg_HudError(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_HudError(boolean noInit) {}
    
    private static final CDOTAUserMsg_HudError defaultInstance;
    public static CDOTAUserMsg_HudError getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_HudError getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_HudError_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_HudError_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 order_id = 1;
    public static final int ORDER_ID_FIELD_NUMBER = 1;
    private int orderId_;
    public boolean hasOrderId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getOrderId() {
      return orderId_;
    }
    
    private void initFields() {
      orderId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, orderId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, orderId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HudError parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_HudError prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_HudErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_HudError_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_HudError_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_HudError.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        orderId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_HudError.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_HudError getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_HudError.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_HudError build() {
        DotaUsermessages.CDOTAUserMsg_HudError result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_HudError buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_HudError result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_HudError buildPartial() {
        DotaUsermessages.CDOTAUserMsg_HudError result = new DotaUsermessages.CDOTAUserMsg_HudError(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.orderId_ = orderId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_HudError) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_HudError)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_HudError other) {
        if (other == DotaUsermessages.CDOTAUserMsg_HudError.getDefaultInstance()) return this;
        if (other.hasOrderId()) {
          setOrderId(other.getOrderId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              orderId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 order_id = 1;
      private int orderId_ ;
      public boolean hasOrderId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getOrderId() {
        return orderId_;
      }
      public Builder setOrderId(int value) {
        bitField0_ |= 0x00000001;
        orderId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        orderId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_HudError)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_HudError(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HudError)
  }
  
  public interface CDOTAUserMsg_SharedCooldownOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 entindex = 1;
    boolean hasEntindex();
    int getEntindex();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
    
    // optional float cooldown = 3;
    boolean hasCooldown();
    float getCooldown();
    
    // optional int32 name_index = 4;
    boolean hasNameIndex();
    int getNameIndex();
  }
  public static final class CDOTAUserMsg_SharedCooldown extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SharedCooldownOrBuilder {
    // Use CDOTAUserMsg_SharedCooldown.newBuilder() to construct.
    private CDOTAUserMsg_SharedCooldown(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SharedCooldown(boolean noInit) {}
    
    private static final CDOTAUserMsg_SharedCooldown defaultInstance;
    public static CDOTAUserMsg_SharedCooldown getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SharedCooldown getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 entindex = 1;
    public static final int ENTINDEX_FIELD_NUMBER = 1;
    private int entindex_;
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEntindex() {
      return entindex_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional float cooldown = 3;
    public static final int COOLDOWN_FIELD_NUMBER = 3;
    private float cooldown_;
    public boolean hasCooldown() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getCooldown() {
      return cooldown_;
    }
    
    // optional int32 name_index = 4;
    public static final int NAME_INDEX_FIELD_NUMBER = 4;
    private int nameIndex_;
    public boolean hasNameIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getNameIndex() {
      return nameIndex_;
    }
    
    private void initFields() {
      entindex_ = 0;
      name_ = "";
      cooldown_ = 0F;
      nameIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, cooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, nameIndex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entindex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, cooldown_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nameIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SharedCooldown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SharedCooldown prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SharedCooldownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SharedCooldown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        cooldown_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        nameIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SharedCooldown.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SharedCooldown getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SharedCooldown.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SharedCooldown build() {
        DotaUsermessages.CDOTAUserMsg_SharedCooldown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SharedCooldown buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SharedCooldown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SharedCooldown buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SharedCooldown result = new DotaUsermessages.CDOTAUserMsg_SharedCooldown(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cooldown_ = cooldown_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nameIndex_ = nameIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SharedCooldown) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SharedCooldown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SharedCooldown other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SharedCooldown.getDefaultInstance()) return this;
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCooldown()) {
          setCooldown(other.getCooldown());
        }
        if (other.hasNameIndex()) {
          setNameIndex(other.getNameIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              entindex_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              cooldown_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              nameIndex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 entindex = 1;
      private int entindex_ ;
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEntindex() {
        return entindex_;
      }
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000001;
        entindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        entindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional float cooldown = 3;
      private float cooldown_ ;
      public boolean hasCooldown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getCooldown() {
        return cooldown_;
      }
      public Builder setCooldown(float value) {
        bitField0_ |= 0x00000004;
        cooldown_ = value;
        onChanged();
        return this;
      }
      public Builder clearCooldown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cooldown_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 name_index = 4;
      private int nameIndex_ ;
      public boolean hasNameIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getNameIndex() {
        return nameIndex_;
      }
      public Builder setNameIndex(int value) {
        bitField0_ |= 0x00000008;
        nameIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nameIndex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SharedCooldown)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SharedCooldown(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SharedCooldown)
  }
  
  public interface CDOTAUserMsg_SetNextAutobuyItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
  }
  public static final class CDOTAUserMsg_SetNextAutobuyItem extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SetNextAutobuyItemOrBuilder {
    // Use CDOTAUserMsg_SetNextAutobuyItem.newBuilder() to construct.
    private CDOTAUserMsg_SetNextAutobuyItem(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SetNextAutobuyItem(boolean noInit) {}
    
    private static final CDOTAUserMsg_SetNextAutobuyItem defaultInstance;
    public static CDOTAUserMsg_SetNextAutobuyItem getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SetNextAutobuyItem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem build() {
        DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem result = new DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SetNextAutobuyItem)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SetNextAutobuyItem(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SetNextAutobuyItem)
  }
  
  public interface CDOTAUserMsg_HalloweenDropsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated uint32 item_defs = 1;
    java.util.List<java.lang.Integer> getItemDefsList();
    int getItemDefsCount();
    int getItemDefs(int index);
    
    // repeated uint32 player_ids = 2;
    java.util.List<java.lang.Integer> getPlayerIdsList();
    int getPlayerIdsCount();
    int getPlayerIds(int index);
    
    // optional uint32 prize_list = 3;
    boolean hasPrizeList();
    int getPrizeList();
  }
  public static final class CDOTAUserMsg_HalloweenDrops extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_HalloweenDropsOrBuilder {
    // Use CDOTAUserMsg_HalloweenDrops.newBuilder() to construct.
    private CDOTAUserMsg_HalloweenDrops(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_HalloweenDrops(boolean noInit) {}
    
    private static final CDOTAUserMsg_HalloweenDrops defaultInstance;
    public static CDOTAUserMsg_HalloweenDrops getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_HalloweenDrops getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated uint32 item_defs = 1;
    public static final int ITEM_DEFS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> itemDefs_;
    public java.util.List<java.lang.Integer>
        getItemDefsList() {
      return itemDefs_;
    }
    public int getItemDefsCount() {
      return itemDefs_.size();
    }
    public int getItemDefs(int index) {
      return itemDefs_.get(index);
    }
    
    // repeated uint32 player_ids = 2;
    public static final int PLAYER_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> playerIds_;
    public java.util.List<java.lang.Integer>
        getPlayerIdsList() {
      return playerIds_;
    }
    public int getPlayerIdsCount() {
      return playerIds_.size();
    }
    public int getPlayerIds(int index) {
      return playerIds_.get(index);
    }
    
    // optional uint32 prize_list = 3;
    public static final int PRIZE_LIST_FIELD_NUMBER = 3;
    private int prizeList_;
    public boolean hasPrizeList() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPrizeList() {
      return prizeList_;
    }
    
    private void initFields() {
      itemDefs_ = java.util.Collections.emptyList();;
      playerIds_ = java.util.Collections.emptyList();;
      prizeList_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < itemDefs_.size(); i++) {
        output.writeUInt32(1, itemDefs_.get(i));
      }
      for (int i = 0; i < playerIds_.size(); i++) {
        output.writeUInt32(2, playerIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(3, prizeList_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < itemDefs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(itemDefs_.get(i));
        }
        size += dataSize;
        size += 1 * getItemDefsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, prizeList_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_HalloweenDrops parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_HalloweenDrops prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_HalloweenDropsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_HalloweenDrops.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        itemDefs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        prizeList_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_HalloweenDrops.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_HalloweenDrops getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_HalloweenDrops.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_HalloweenDrops build() {
        DotaUsermessages.CDOTAUserMsg_HalloweenDrops result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_HalloweenDrops buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_HalloweenDrops result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_HalloweenDrops buildPartial() {
        DotaUsermessages.CDOTAUserMsg_HalloweenDrops result = new DotaUsermessages.CDOTAUserMsg_HalloweenDrops(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          itemDefs_ = java.util.Collections.unmodifiableList(itemDefs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.itemDefs_ = itemDefs_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playerIds_ = java.util.Collections.unmodifiableList(playerIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playerIds_ = playerIds_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prizeList_ = prizeList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_HalloweenDrops) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_HalloweenDrops)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_HalloweenDrops other) {
        if (other == DotaUsermessages.CDOTAUserMsg_HalloweenDrops.getDefaultInstance()) return this;
        if (!other.itemDefs_.isEmpty()) {
          if (itemDefs_.isEmpty()) {
            itemDefs_ = other.itemDefs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureItemDefsIsMutable();
            itemDefs_.addAll(other.itemDefs_);
          }
          onChanged();
        }
        if (!other.playerIds_.isEmpty()) {
          if (playerIds_.isEmpty()) {
            playerIds_ = other.playerIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayerIdsIsMutable();
            playerIds_.addAll(other.playerIds_);
          }
          onChanged();
        }
        if (other.hasPrizeList()) {
          setPrizeList(other.getPrizeList());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureItemDefsIsMutable();
              itemDefs_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addItemDefs(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              ensurePlayerIdsIsMutable();
              playerIds_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPlayerIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prizeList_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated uint32 item_defs = 1;
      private java.util.List<java.lang.Integer> itemDefs_ = java.util.Collections.emptyList();;
      private void ensureItemDefsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          itemDefs_ = new java.util.ArrayList<java.lang.Integer>(itemDefs_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getItemDefsList() {
        return java.util.Collections.unmodifiableList(itemDefs_);
      }
      public int getItemDefsCount() {
        return itemDefs_.size();
      }
      public int getItemDefs(int index) {
        return itemDefs_.get(index);
      }
      public Builder setItemDefs(
          int index, int value) {
        ensureItemDefsIsMutable();
        itemDefs_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addItemDefs(int value) {
        ensureItemDefsIsMutable();
        itemDefs_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllItemDefs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemDefsIsMutable();
        super.addAll(values, itemDefs_);
        onChanged();
        return this;
      }
      public Builder clearItemDefs() {
        itemDefs_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated uint32 player_ids = 2;
      private java.util.List<java.lang.Integer> playerIds_ = java.util.Collections.emptyList();;
      private void ensurePlayerIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerIds_ = new java.util.ArrayList<java.lang.Integer>(playerIds_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getPlayerIdsList() {
        return java.util.Collections.unmodifiableList(playerIds_);
      }
      public int getPlayerIdsCount() {
        return playerIds_.size();
      }
      public int getPlayerIds(int index) {
        return playerIds_.get(index);
      }
      public Builder setPlayerIds(
          int index, int value) {
        ensurePlayerIdsIsMutable();
        playerIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPlayerIds(int value) {
        ensurePlayerIdsIsMutable();
        playerIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPlayerIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerIdsIsMutable();
        super.addAll(values, playerIds_);
        onChanged();
        return this;
      }
      public Builder clearPlayerIds() {
        playerIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // optional uint32 prize_list = 3;
      private int prizeList_ ;
      public boolean hasPrizeList() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPrizeList() {
        return prizeList_;
      }
      public Builder setPrizeList(int value) {
        bitField0_ |= 0x00000004;
        prizeList_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrizeList() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prizeList_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_HalloweenDrops)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_HalloweenDrops(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HalloweenDrops)
  }
  
  public interface CDOTAResponseQuerySerializedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
    java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact> 
        getFactsList();
    DotaUsermessages.CDOTAResponseQuerySerialized.Fact getFacts(int index);
    int getFactsCount();
    java.util.List<? extends DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
        getFactsOrBuilderList();
    DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
        int index);
  }
  public static final class CDOTAResponseQuerySerialized extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAResponseQuerySerializedOrBuilder {
    // Use CDOTAResponseQuerySerialized.newBuilder() to construct.
    private CDOTAResponseQuerySerialized(Builder builder) {
      super(builder);
    }
    private CDOTAResponseQuerySerialized(boolean noInit) {}
    
    private static final CDOTAResponseQuerySerialized defaultInstance;
    public static CDOTAResponseQuerySerialized getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAResponseQuerySerialized getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable;
    }
    
    public interface FactOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required int32 key = 1;
      boolean hasKey();
      int getKey();
      
      // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
      boolean hasValtype();
      DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype();
      
      // optional float val_numeric = 3;
      boolean hasValNumeric();
      float getValNumeric();
      
      // optional string val_string = 4;
      boolean hasValString();
      String getValString();
    }
    public static final class Fact extends
        com.google.protobuf.GeneratedMessage
        implements FactOrBuilder {
      // Use Fact.newBuilder() to construct.
      private Fact(Builder builder) {
        super(builder);
      }
      private Fact(boolean noInit) {}
      
      private static final Fact defaultInstance;
      public static Fact getDefaultInstance() {
        return defaultInstance;
      }
      
      public Fact getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable;
      }
      
      public enum ValueType
          implements com.google.protobuf.ProtocolMessageEnum {
        NUMERIC(0, 1),
        STRING(1, 2),
        ;
        
        public static final int NUMERIC_VALUE = 1;
        public static final int STRING_VALUE = 2;
        
        
        public final int getNumber() { return value; }
        
        public static ValueType valueOf(int value) {
          switch (value) {
            case 1: return NUMERIC;
            case 2: return STRING;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<ValueType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ValueType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ValueType>() {
                public ValueType findValueByNumber(int number) {
                  return ValueType.valueOf(number);
                }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final ValueType[] VALUES = {
          NUMERIC, STRING, 
        };
        
        public static ValueType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        
        private final int index;
        private final int value;
        
        private ValueType(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:CDOTAResponseQuerySerialized.Fact.ValueType)
      }
      
      private int bitField0_;
      // required int32 key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getKey() {
        return key_;
      }
      
      // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
      public static final int VALTYPE_FIELD_NUMBER = 2;
      private DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType valtype_;
      public boolean hasValtype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype() {
        return valtype_;
      }
      
      // optional float val_numeric = 3;
      public static final int VAL_NUMERIC_FIELD_NUMBER = 3;
      private float valNumeric_;
      public boolean hasValNumeric() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getValNumeric() {
        return valNumeric_;
      }
      
      // optional string val_string = 4;
      public static final int VAL_STRING_FIELD_NUMBER = 4;
      private java.lang.Object valString_;
      public boolean hasValString() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getValString() {
        java.lang.Object ref = valString_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            valString_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValStringBytes() {
        java.lang.Object ref = valString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          valString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        key_ = 0;
        valtype_ = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
        valNumeric_ = 0F;
        valString_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValtype()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, valtype_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, valNumeric_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getValStringBytes());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, valtype_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, valNumeric_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getValStringBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAResponseQuerySerialized.Fact parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAResponseQuerySerialized.Fact prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAResponseQuerySerialized.Fact.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          valtype_ = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
          bitField0_ = (bitField0_ & ~0x00000002);
          valNumeric_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          valString_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAResponseQuerySerialized.Fact getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAResponseQuerySerialized.Fact build() {
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAResponseQuerySerialized.Fact buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAResponseQuerySerialized.Fact buildPartial() {
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact result = new DotaUsermessages.CDOTAResponseQuerySerialized.Fact(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.valtype_ = valtype_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.valNumeric_ = valNumeric_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.valString_ = valString_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAResponseQuerySerialized.Fact) {
            return mergeFrom((DotaUsermessages.CDOTAResponseQuerySerialized.Fact)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAResponseQuerySerialized.Fact other) {
          if (other == DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValtype()) {
            setValtype(other.getValtype());
          }
          if (other.hasValNumeric()) {
            setValNumeric(other.getValNumeric());
          }
          if (other.hasValString()) {
            setValString(other.getValString());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValtype()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                key_ = input.readInt32();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType value = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  valtype_ = value;
                }
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                valNumeric_ = input.readFloat();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                valString_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 key = 1;
        private int key_ ;
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getKey() {
          return key_;
        }
        public Builder setKey(int value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }
        
        // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
        private DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType valtype_ = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
        public boolean hasValtype() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType getValtype() {
          return valtype_;
        }
        public Builder setValtype(DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          valtype_ = value;
          onChanged();
          return this;
        }
        public Builder clearValtype() {
          bitField0_ = (bitField0_ & ~0x00000002);
          valtype_ = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.ValueType.NUMERIC;
          onChanged();
          return this;
        }
        
        // optional float val_numeric = 3;
        private float valNumeric_ ;
        public boolean hasValNumeric() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getValNumeric() {
          return valNumeric_;
        }
        public Builder setValNumeric(float value) {
          bitField0_ |= 0x00000004;
          valNumeric_ = value;
          onChanged();
          return this;
        }
        public Builder clearValNumeric() {
          bitField0_ = (bitField0_ & ~0x00000004);
          valNumeric_ = 0F;
          onChanged();
          return this;
        }
        
        // optional string val_string = 4;
        private java.lang.Object valString_ = "";
        public boolean hasValString() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public String getValString() {
          java.lang.Object ref = valString_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            valString_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValString(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          valString_ = value;
          onChanged();
          return this;
        }
        public Builder clearValString() {
          bitField0_ = (bitField0_ & ~0x00000008);
          valString_ = getDefaultInstance().getValString();
          onChanged();
          return this;
        }
        void setValString(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000008;
          valString_ = value;
          onChanged();
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAResponseQuerySerialized.Fact)
      }
      
      static {
        defaultInstance = new Fact(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized.Fact)
    }
    
    // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
    public static final int FACTS_FIELD_NUMBER = 1;
    private java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact> facts_;
    public java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact> getFactsList() {
      return facts_;
    }
    public java.util.List<? extends DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
        getFactsOrBuilderList() {
      return facts_;
    }
    public int getFactsCount() {
      return facts_.size();
    }
    public DotaUsermessages.CDOTAResponseQuerySerialized.Fact getFacts(int index) {
      return facts_.get(index);
    }
    public DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
        int index) {
      return facts_.get(index);
    }
    
    private void initFields() {
      facts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getFactsCount(); i++) {
        if (!getFacts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < facts_.size(); i++) {
        output.writeMessage(1, facts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < facts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, facts_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAResponseQuerySerialized parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAResponseQuerySerialized prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAResponseQuerySerialized.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFactsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (factsBuilder_ == null) {
          facts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          factsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAResponseQuerySerialized.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAResponseQuerySerialized getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAResponseQuerySerialized build() {
        DotaUsermessages.CDOTAResponseQuerySerialized result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAResponseQuerySerialized buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAResponseQuerySerialized result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAResponseQuerySerialized buildPartial() {
        DotaUsermessages.CDOTAResponseQuerySerialized result = new DotaUsermessages.CDOTAResponseQuerySerialized(this);
        int from_bitField0_ = bitField0_;
        if (factsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            facts_ = java.util.Collections.unmodifiableList(facts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.facts_ = facts_;
        } else {
          result.facts_ = factsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAResponseQuerySerialized) {
          return mergeFrom((DotaUsermessages.CDOTAResponseQuerySerialized)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAResponseQuerySerialized other) {
        if (other == DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance()) return this;
        if (factsBuilder_ == null) {
          if (!other.facts_.isEmpty()) {
            if (facts_.isEmpty()) {
              facts_ = other.facts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFactsIsMutable();
              facts_.addAll(other.facts_);
            }
            onChanged();
          }
        } else {
          if (!other.facts_.isEmpty()) {
            if (factsBuilder_.isEmpty()) {
              factsBuilder_.dispose();
              factsBuilder_ = null;
              facts_ = other.facts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              factsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFactsFieldBuilder() : null;
            } else {
              factsBuilder_.addAllMessages(other.facts_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getFactsCount(); i++) {
          if (!getFacts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder subBuilder = DotaUsermessages.CDOTAResponseQuerySerialized.Fact.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFacts(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
      private java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact> facts_ =
        java.util.Collections.emptyList();
      private void ensureFactsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          facts_ = new java.util.ArrayList<DotaUsermessages.CDOTAResponseQuerySerialized.Fact>(facts_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder, DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder> factsBuilder_;
      
      public java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact> getFactsList() {
        if (factsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(facts_);
        } else {
          return factsBuilder_.getMessageList();
        }
      }
      public int getFactsCount() {
        if (factsBuilder_ == null) {
          return facts_.size();
        } else {
          return factsBuilder_.getCount();
        }
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Fact getFacts(int index) {
        if (factsBuilder_ == null) {
          return facts_.get(index);
        } else {
          return factsBuilder_.getMessage(index);
        }
      }
      public Builder setFacts(
          int index, DotaUsermessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.set(index, value);
          onChanged();
        } else {
          factsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFacts(
          int index, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.set(index, builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFacts(DotaUsermessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.add(value);
          onChanged();
        } else {
          factsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFacts(
          int index, DotaUsermessages.CDOTAResponseQuerySerialized.Fact value) {
        if (factsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactsIsMutable();
          facts_.add(index, value);
          onChanged();
        } else {
          factsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFacts(
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.add(builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFacts(
          int index, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder builderForValue) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.add(index, builderForValue.build());
          onChanged();
        } else {
          factsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFacts(
          java.lang.Iterable<? extends DotaUsermessages.CDOTAResponseQuerySerialized.Fact> values) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          super.addAll(values, facts_);
          onChanged();
        } else {
          factsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFacts() {
        if (factsBuilder_ == null) {
          facts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          factsBuilder_.clear();
        }
        return this;
      }
      public Builder removeFacts(int index) {
        if (factsBuilder_ == null) {
          ensureFactsIsMutable();
          facts_.remove(index);
          onChanged();
        } else {
          factsBuilder_.remove(index);
        }
        return this;
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder getFactsBuilder(
          int index) {
        return getFactsFieldBuilder().getBuilder(index);
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder getFactsOrBuilder(
          int index) {
        if (factsBuilder_ == null) {
          return facts_.get(index);  } else {
          return factsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
           getFactsOrBuilderList() {
        if (factsBuilder_ != null) {
          return factsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(facts_);
        }
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder addFactsBuilder() {
        return getFactsFieldBuilder().addBuilder(
            DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance());
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder addFactsBuilder(
          int index) {
        return getFactsFieldBuilder().addBuilder(
            index, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.getDefaultInstance());
      }
      public java.util.List<DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder> 
           getFactsBuilderList() {
        return getFactsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DotaUsermessages.CDOTAResponseQuerySerialized.Fact, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder, DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder> 
          getFactsFieldBuilder() {
        if (factsBuilder_ == null) {
          factsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DotaUsermessages.CDOTAResponseQuerySerialized.Fact, DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder, DotaUsermessages.CDOTAResponseQuerySerialized.FactOrBuilder>(
                  facts_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          facts_ = null;
        }
        return factsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAResponseQuerySerialized)
    }
    
    static {
      defaultInstance = new CDOTAResponseQuerySerialized(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized)
  }
  
  public interface CDOTASpeechMatchOnClientOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 concept = 1;
    boolean hasConcept();
    int getConcept();
    
    // optional int32 recipient_type = 2;
    boolean hasRecipientType();
    int getRecipientType();
    
    // optional .CDOTAResponseQuerySerialized responsequery = 3;
    boolean hasResponsequery();
    DotaUsermessages.CDOTAResponseQuerySerialized getResponsequery();
    DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder();
    
    // optional sfixed32 randomseed = 4 [default = 0];
    boolean hasRandomseed();
    int getRandomseed();
  }
  public static final class CDOTASpeechMatchOnClient extends
      com.google.protobuf.GeneratedMessage
      implements CDOTASpeechMatchOnClientOrBuilder {
    // Use CDOTASpeechMatchOnClient.newBuilder() to construct.
    private CDOTASpeechMatchOnClient(Builder builder) {
      super(builder);
    }
    private CDOTASpeechMatchOnClient(boolean noInit) {}
    
    private static final CDOTASpeechMatchOnClient defaultInstance;
    public static CDOTASpeechMatchOnClient getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTASpeechMatchOnClient getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTASpeechMatchOnClient_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 concept = 1;
    public static final int CONCEPT_FIELD_NUMBER = 1;
    private int concept_;
    public boolean hasConcept() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getConcept() {
      return concept_;
    }
    
    // optional int32 recipient_type = 2;
    public static final int RECIPIENT_TYPE_FIELD_NUMBER = 2;
    private int recipientType_;
    public boolean hasRecipientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRecipientType() {
      return recipientType_;
    }
    
    // optional .CDOTAResponseQuerySerialized responsequery = 3;
    public static final int RESPONSEQUERY_FIELD_NUMBER = 3;
    private DotaUsermessages.CDOTAResponseQuerySerialized responsequery_;
    public boolean hasResponsequery() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public DotaUsermessages.CDOTAResponseQuerySerialized getResponsequery() {
      return responsequery_;
    }
    public DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder() {
      return responsequery_;
    }
    
    // optional sfixed32 randomseed = 4 [default = 0];
    public static final int RANDOMSEED_FIELD_NUMBER = 4;
    private int randomseed_;
    public boolean hasRandomseed() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRandomseed() {
      return randomseed_;
    }
    
    private void initFields() {
      concept_ = 0;
      recipientType_ = 0;
      responsequery_ = DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      randomseed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasResponsequery()) {
        if (!getResponsequery().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, concept_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, recipientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, responsequery_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed32(4, randomseed_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, concept_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, recipientType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, responsequery_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(4, randomseed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTASpeechMatchOnClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTASpeechMatchOnClient prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTASpeechMatchOnClient_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTASpeechMatchOnClient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResponsequeryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        concept_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        recipientType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (responsequeryBuilder_ == null) {
          responsequery_ = DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance();
        } else {
          responsequeryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        randomseed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTASpeechMatchOnClient.getDescriptor();
      }
      
      public DotaUsermessages.CDOTASpeechMatchOnClient getDefaultInstanceForType() {
        return DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTASpeechMatchOnClient build() {
        DotaUsermessages.CDOTASpeechMatchOnClient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTASpeechMatchOnClient buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTASpeechMatchOnClient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTASpeechMatchOnClient buildPartial() {
        DotaUsermessages.CDOTASpeechMatchOnClient result = new DotaUsermessages.CDOTASpeechMatchOnClient(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.concept_ = concept_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.recipientType_ = recipientType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (responsequeryBuilder_ == null) {
          result.responsequery_ = responsequery_;
        } else {
          result.responsequery_ = responsequeryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.randomseed_ = randomseed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTASpeechMatchOnClient) {
          return mergeFrom((DotaUsermessages.CDOTASpeechMatchOnClient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTASpeechMatchOnClient other) {
        if (other == DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance()) return this;
        if (other.hasConcept()) {
          setConcept(other.getConcept());
        }
        if (other.hasRecipientType()) {
          setRecipientType(other.getRecipientType());
        }
        if (other.hasResponsequery()) {
          mergeResponsequery(other.getResponsequery());
        }
        if (other.hasRandomseed()) {
          setRandomseed(other.getRandomseed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasResponsequery()) {
          if (!getResponsequery().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              concept_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              recipientType_ = input.readInt32();
              break;
            }
            case 26: {
              DotaUsermessages.CDOTAResponseQuerySerialized.Builder subBuilder = DotaUsermessages.CDOTAResponseQuerySerialized.newBuilder();
              if (hasResponsequery()) {
                subBuilder.mergeFrom(getResponsequery());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponsequery(subBuilder.buildPartial());
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              randomseed_ = input.readSFixed32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 concept = 1;
      private int concept_ ;
      public boolean hasConcept() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getConcept() {
        return concept_;
      }
      public Builder setConcept(int value) {
        bitField0_ |= 0x00000001;
        concept_ = value;
        onChanged();
        return this;
      }
      public Builder clearConcept() {
        bitField0_ = (bitField0_ & ~0x00000001);
        concept_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 recipient_type = 2;
      private int recipientType_ ;
      public boolean hasRecipientType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRecipientType() {
        return recipientType_;
      }
      public Builder setRecipientType(int value) {
        bitField0_ |= 0x00000002;
        recipientType_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecipientType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recipientType_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAResponseQuerySerialized responsequery = 3;
      private DotaUsermessages.CDOTAResponseQuerySerialized responsequery_ = DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAResponseQuerySerialized, DotaUsermessages.CDOTAResponseQuerySerialized.Builder, DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder> responsequeryBuilder_;
      public boolean hasResponsequery() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized getResponsequery() {
        if (responsequeryBuilder_ == null) {
          return responsequery_;
        } else {
          return responsequeryBuilder_.getMessage();
        }
      }
      public Builder setResponsequery(DotaUsermessages.CDOTAResponseQuerySerialized value) {
        if (responsequeryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responsequery_ = value;
          onChanged();
        } else {
          responsequeryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setResponsequery(
          DotaUsermessages.CDOTAResponseQuerySerialized.Builder builderForValue) {
        if (responsequeryBuilder_ == null) {
          responsequery_ = builderForValue.build();
          onChanged();
        } else {
          responsequeryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeResponsequery(DotaUsermessages.CDOTAResponseQuerySerialized value) {
        if (responsequeryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              responsequery_ != DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance()) {
            responsequery_ =
              DotaUsermessages.CDOTAResponseQuerySerialized.newBuilder(responsequery_).mergeFrom(value).buildPartial();
          } else {
            responsequery_ = value;
          }
          onChanged();
        } else {
          responsequeryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearResponsequery() {
        if (responsequeryBuilder_ == null) {
          responsequery_ = DotaUsermessages.CDOTAResponseQuerySerialized.getDefaultInstance();
          onChanged();
        } else {
          responsequeryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public DotaUsermessages.CDOTAResponseQuerySerialized.Builder getResponsequeryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getResponsequeryFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder getResponsequeryOrBuilder() {
        if (responsequeryBuilder_ != null) {
          return responsequeryBuilder_.getMessageOrBuilder();
        } else {
          return responsequery_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAResponseQuerySerialized, DotaUsermessages.CDOTAResponseQuerySerialized.Builder, DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder> 
          getResponsequeryFieldBuilder() {
        if (responsequeryBuilder_ == null) {
          responsequeryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAResponseQuerySerialized, DotaUsermessages.CDOTAResponseQuerySerialized.Builder, DotaUsermessages.CDOTAResponseQuerySerializedOrBuilder>(
                  responsequery_,
                  getParentForChildren(),
                  isClean());
          responsequery_ = null;
        }
        return responsequeryBuilder_;
      }
      
      // optional sfixed32 randomseed = 4 [default = 0];
      private int randomseed_ ;
      public boolean hasRandomseed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRandomseed() {
        return randomseed_;
      }
      public Builder setRandomseed(int value) {
        bitField0_ |= 0x00000008;
        randomseed_ = value;
        onChanged();
        return this;
      }
      public Builder clearRandomseed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        randomseed_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTASpeechMatchOnClient)
    }
    
    static {
      defaultInstance = new CDOTASpeechMatchOnClient(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTASpeechMatchOnClient)
  }
  
  public interface CDOTAUserMsg_UnitEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
    boolean hasMsgType();
    DotaUsermessages.EDotaEntityMessages getMsgType();
    
    // required int32 entity_index = 2;
    boolean hasEntityIndex();
    int getEntityIndex();
    
    // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
    boolean hasSpeech();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech getSpeech();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder();
    
    // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
    boolean hasSpeechMute();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder();
    
    // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
    boolean hasAddGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder();
    
    // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
    boolean hasRemoveGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder();
    
    // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
    boolean hasBloodImpact();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder();
    
    // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
    boolean hasFadeGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture();
    DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder();
    
    // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
    boolean hasSpeechMatchOnClient();
    DotaUsermessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient();
    DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder();
  }
  public static final class CDOTAUserMsg_UnitEvent extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_UnitEventOrBuilder {
    // Use CDOTAUserMsg_UnitEvent.newBuilder() to construct.
    private CDOTAUserMsg_UnitEvent(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_UnitEvent(boolean noInit) {}
    
    private static final CDOTAUserMsg_UnitEvent defaultInstance;
    public static CDOTAUserMsg_UnitEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_UnitEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable;
    }
    
    public interface SpeechOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 concept = 1;
      boolean hasConcept();
      int getConcept();
      
      // optional string response = 2;
      boolean hasResponse();
      String getResponse();
      
      // optional int32 recipient_type = 3;
      boolean hasRecipientType();
      int getRecipientType();
      
      // optional int32 level = 4;
      boolean hasLevel();
      int getLevel();
      
      // optional bool muteable = 5 [default = false];
      boolean hasMuteable();
      boolean getMuteable();
    }
    public static final class Speech extends
        com.google.protobuf.GeneratedMessage
        implements SpeechOrBuilder {
      // Use Speech.newBuilder() to construct.
      private Speech(Builder builder) {
        super(builder);
      }
      private Speech(boolean noInit) {}
      
      private static final Speech defaultInstance;
      public static Speech getDefaultInstance() {
        return defaultInstance;
      }
      
      public Speech getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 concept = 1;
      public static final int CONCEPT_FIELD_NUMBER = 1;
      private int concept_;
      public boolean hasConcept() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getConcept() {
        return concept_;
      }
      
      // optional string response = 2;
      public static final int RESPONSE_FIELD_NUMBER = 2;
      private java.lang.Object response_;
      public boolean hasResponse() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getResponse() {
        java.lang.Object ref = response_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            response_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getResponseBytes() {
        java.lang.Object ref = response_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          response_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional int32 recipient_type = 3;
      public static final int RECIPIENT_TYPE_FIELD_NUMBER = 3;
      private int recipientType_;
      public boolean hasRecipientType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRecipientType() {
        return recipientType_;
      }
      
      // optional int32 level = 4;
      public static final int LEVEL_FIELD_NUMBER = 4;
      private int level_;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getLevel() {
        return level_;
      }
      
      // optional bool muteable = 5 [default = false];
      public static final int MUTEABLE_FIELD_NUMBER = 5;
      private boolean muteable_;
      public boolean hasMuteable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getMuteable() {
        return muteable_;
      }
      
      private void initFields() {
        concept_ = 0;
        response_ = "";
        recipientType_ = 0;
        level_ = 0;
        muteable_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, concept_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getResponseBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, recipientType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, level_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, muteable_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, concept_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getResponseBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, recipientType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, level_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, muteable_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          concept_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          response_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          recipientType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          muteable_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.concept_ = concept_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.response_ = response_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.recipientType_ = recipientType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.muteable_ = muteable_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance()) return this;
          if (other.hasConcept()) {
            setConcept(other.getConcept());
          }
          if (other.hasResponse()) {
            setResponse(other.getResponse());
          }
          if (other.hasRecipientType()) {
            setRecipientType(other.getRecipientType());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasMuteable()) {
            setMuteable(other.getMuteable());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                concept_ = input.readInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                response_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                recipientType_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                level_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                muteable_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 concept = 1;
        private int concept_ ;
        public boolean hasConcept() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getConcept() {
          return concept_;
        }
        public Builder setConcept(int value) {
          bitField0_ |= 0x00000001;
          concept_ = value;
          onChanged();
          return this;
        }
        public Builder clearConcept() {
          bitField0_ = (bitField0_ & ~0x00000001);
          concept_ = 0;
          onChanged();
          return this;
        }
        
        // optional string response = 2;
        private java.lang.Object response_ = "";
        public boolean hasResponse() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getResponse() {
          java.lang.Object ref = response_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            response_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setResponse(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          response_ = value;
          onChanged();
          return this;
        }
        public Builder clearResponse() {
          bitField0_ = (bitField0_ & ~0x00000002);
          response_ = getDefaultInstance().getResponse();
          onChanged();
          return this;
        }
        void setResponse(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          response_ = value;
          onChanged();
        }
        
        // optional int32 recipient_type = 3;
        private int recipientType_ ;
        public boolean hasRecipientType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getRecipientType() {
          return recipientType_;
        }
        public Builder setRecipientType(int value) {
          bitField0_ |= 0x00000004;
          recipientType_ = value;
          onChanged();
          return this;
        }
        public Builder clearRecipientType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          recipientType_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 level = 4;
        private int level_ ;
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getLevel() {
          return level_;
        }
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000008;
          level_ = value;
          onChanged();
          return this;
        }
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000008);
          level_ = 0;
          onChanged();
          return this;
        }
        
        // optional bool muteable = 5 [default = false];
        private boolean muteable_ ;
        public boolean hasMuteable() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public boolean getMuteable() {
          return muteable_;
        }
        public Builder setMuteable(boolean value) {
          bitField0_ |= 0x00000010;
          muteable_ = value;
          onChanged();
          return this;
        }
        public Builder clearMuteable() {
          bitField0_ = (bitField0_ & ~0x00000010);
          muteable_ = false;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.Speech)
      }
      
      static {
        defaultInstance = new Speech(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.Speech)
    }
    
    public interface SpeechMuteOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional float delay = 1 [default = 0.5];
      boolean hasDelay();
      float getDelay();
    }
    public static final class SpeechMute extends
        com.google.protobuf.GeneratedMessage
        implements SpeechMuteOrBuilder {
      // Use SpeechMute.newBuilder() to construct.
      private SpeechMute(Builder builder) {
        super(builder);
      }
      private SpeechMute(boolean noInit) {}
      
      private static final SpeechMute defaultInstance;
      public static SpeechMute getDefaultInstance() {
        return defaultInstance;
      }
      
      public SpeechMute getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional float delay = 1 [default = 0.5];
      public static final int DELAY_FIELD_NUMBER = 1;
      private float delay_;
      public boolean hasDelay() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getDelay() {
        return delay_;
      }
      
      private void initFields() {
        delay_ = 0.5F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, delay_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, delay_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          delay_ = 0.5F;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.delay_ = delay_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance()) return this;
          if (other.hasDelay()) {
            setDelay(other.getDelay());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                delay_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional float delay = 1 [default = 0.5];
        private float delay_ = 0.5F;
        public boolean hasDelay() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getDelay() {
          return delay_;
        }
        public Builder setDelay(float value) {
          bitField0_ |= 0x00000001;
          delay_ = value;
          onChanged();
          return this;
        }
        public Builder clearDelay() {
          bitField0_ = (bitField0_ & ~0x00000001);
          delay_ = 0.5F;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.SpeechMute)
      }
      
      static {
        defaultInstance = new SpeechMute(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.SpeechMute)
    }
    
    public interface AddGestureOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional .Activity activity = 1 [default = ACT_INVALID];
      boolean hasActivity();
      AiActivity.Activity getActivity();
      
      // optional int32 slot = 2;
      boolean hasSlot();
      int getSlot();
      
      // optional float fade_in = 3 [default = 0];
      boolean hasFadeIn();
      float getFadeIn();
      
      // optional float fade_out = 4 [default = 0.1];
      boolean hasFadeOut();
      float getFadeOut();
    }
    public static final class AddGesture extends
        com.google.protobuf.GeneratedMessage
        implements AddGestureOrBuilder {
      // Use AddGesture.newBuilder() to construct.
      private AddGesture(Builder builder) {
        super(builder);
      }
      private AddGesture(boolean noInit) {}
      
      private static final AddGesture defaultInstance;
      public static AddGesture getDefaultInstance() {
        return defaultInstance;
      }
      
      public AddGesture getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional .Activity activity = 1 [default = ACT_INVALID];
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private AiActivity.Activity activity_;
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public AiActivity.Activity getActivity() {
        return activity_;
      }
      
      // optional int32 slot = 2;
      public static final int SLOT_FIELD_NUMBER = 2;
      private int slot_;
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSlot() {
        return slot_;
      }
      
      // optional float fade_in = 3 [default = 0];
      public static final int FADE_IN_FIELD_NUMBER = 3;
      private float fadeIn_;
      public boolean hasFadeIn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getFadeIn() {
        return fadeIn_;
      }
      
      // optional float fade_out = 4 [default = 0.1];
      public static final int FADE_OUT_FIELD_NUMBER = 4;
      private float fadeOut_;
      public boolean hasFadeOut() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getFadeOut() {
        return fadeOut_;
      }
      
      private void initFields() {
        activity_ = AiActivity.Activity.ACT_INVALID;
        slot_ = 0;
        fadeIn_ = 0F;
        fadeOut_ = 0.1F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, activity_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, slot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, fadeIn_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, fadeOut_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, activity_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, slot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, fadeIn_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, fadeOut_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          activity_ = AiActivity.Activity.ACT_INVALID;
          bitField0_ = (bitField0_ & ~0x00000001);
          slot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          fadeIn_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          fadeOut_ = 0.1F;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.slot_ = slot_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.fadeIn_ = fadeIn_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fadeOut_ = fadeOut_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (other.hasFadeIn()) {
            setFadeIn(other.getFadeIn());
          }
          if (other.hasFadeOut()) {
            setFadeOut(other.getFadeOut());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                AiActivity.Activity value = AiActivity.Activity.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  activity_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                slot_ = input.readInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                fadeIn_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                fadeOut_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional .Activity activity = 1 [default = ACT_INVALID];
        private AiActivity.Activity activity_ = AiActivity.Activity.ACT_INVALID;
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public AiActivity.Activity getActivity() {
          return activity_;
        }
        public Builder setActivity(AiActivity.Activity value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = AiActivity.Activity.ACT_INVALID;
          onChanged();
          return this;
        }
        
        // optional int32 slot = 2;
        private int slot_ ;
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getSlot() {
          return slot_;
        }
        public Builder setSlot(int value) {
          bitField0_ |= 0x00000002;
          slot_ = value;
          onChanged();
          return this;
        }
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000002);
          slot_ = 0;
          onChanged();
          return this;
        }
        
        // optional float fade_in = 3 [default = 0];
        private float fadeIn_ ;
        public boolean hasFadeIn() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getFadeIn() {
          return fadeIn_;
        }
        public Builder setFadeIn(float value) {
          bitField0_ |= 0x00000004;
          fadeIn_ = value;
          onChanged();
          return this;
        }
        public Builder clearFadeIn() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fadeIn_ = 0F;
          onChanged();
          return this;
        }
        
        // optional float fade_out = 4 [default = 0.1];
        private float fadeOut_ = 0.1F;
        public boolean hasFadeOut() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public float getFadeOut() {
          return fadeOut_;
        }
        public Builder setFadeOut(float value) {
          bitField0_ |= 0x00000008;
          fadeOut_ = value;
          onChanged();
          return this;
        }
        public Builder clearFadeOut() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fadeOut_ = 0.1F;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.AddGesture)
      }
      
      static {
        defaultInstance = new AddGesture(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.AddGesture)
    }
    
    public interface RemoveGestureOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional .Activity activity = 1 [default = ACT_INVALID];
      boolean hasActivity();
      AiActivity.Activity getActivity();
    }
    public static final class RemoveGesture extends
        com.google.protobuf.GeneratedMessage
        implements RemoveGestureOrBuilder {
      // Use RemoveGesture.newBuilder() to construct.
      private RemoveGesture(Builder builder) {
        super(builder);
      }
      private RemoveGesture(boolean noInit) {}
      
      private static final RemoveGesture defaultInstance;
      public static RemoveGesture getDefaultInstance() {
        return defaultInstance;
      }
      
      public RemoveGesture getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional .Activity activity = 1 [default = ACT_INVALID];
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private AiActivity.Activity activity_;
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public AiActivity.Activity getActivity() {
        return activity_;
      }
      
      private void initFields() {
        activity_ = AiActivity.Activity.ACT_INVALID;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, activity_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, activity_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          activity_ = AiActivity.Activity.ACT_INVALID;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                AiActivity.Activity value = AiActivity.Activity.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  activity_ = value;
                }
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional .Activity activity = 1 [default = ACT_INVALID];
        private AiActivity.Activity activity_ = AiActivity.Activity.ACT_INVALID;
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public AiActivity.Activity getActivity() {
          return activity_;
        }
        public Builder setActivity(AiActivity.Activity value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = AiActivity.Activity.ACT_INVALID;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.RemoveGesture)
      }
      
      static {
        defaultInstance = new RemoveGesture(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.RemoveGesture)
    }
    
    public interface BloodImpactOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 scale = 1;
      boolean hasScale();
      int getScale();
      
      // optional int32 x_normal = 2;
      boolean hasXNormal();
      int getXNormal();
      
      // optional int32 y_normal = 3;
      boolean hasYNormal();
      int getYNormal();
    }
    public static final class BloodImpact extends
        com.google.protobuf.GeneratedMessage
        implements BloodImpactOrBuilder {
      // Use BloodImpact.newBuilder() to construct.
      private BloodImpact(Builder builder) {
        super(builder);
      }
      private BloodImpact(boolean noInit) {}
      
      private static final BloodImpact defaultInstance;
      public static BloodImpact getDefaultInstance() {
        return defaultInstance;
      }
      
      public BloodImpact getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 scale = 1;
      public static final int SCALE_FIELD_NUMBER = 1;
      private int scale_;
      public boolean hasScale() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getScale() {
        return scale_;
      }
      
      // optional int32 x_normal = 2;
      public static final int X_NORMAL_FIELD_NUMBER = 2;
      private int xNormal_;
      public boolean hasXNormal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getXNormal() {
        return xNormal_;
      }
      
      // optional int32 y_normal = 3;
      public static final int Y_NORMAL_FIELD_NUMBER = 3;
      private int yNormal_;
      public boolean hasYNormal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getYNormal() {
        return yNormal_;
      }
      
      private void initFields() {
        scale_ = 0;
        xNormal_ = 0;
        yNormal_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, scale_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, xNormal_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, yNormal_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, scale_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, xNormal_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, yNormal_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          scale_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          xNormal_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          yNormal_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.scale_ = scale_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.xNormal_ = xNormal_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.yNormal_ = yNormal_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance()) return this;
          if (other.hasScale()) {
            setScale(other.getScale());
          }
          if (other.hasXNormal()) {
            setXNormal(other.getXNormal());
          }
          if (other.hasYNormal()) {
            setYNormal(other.getYNormal());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                scale_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                xNormal_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                yNormal_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 scale = 1;
        private int scale_ ;
        public boolean hasScale() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getScale() {
          return scale_;
        }
        public Builder setScale(int value) {
          bitField0_ |= 0x00000001;
          scale_ = value;
          onChanged();
          return this;
        }
        public Builder clearScale() {
          bitField0_ = (bitField0_ & ~0x00000001);
          scale_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 x_normal = 2;
        private int xNormal_ ;
        public boolean hasXNormal() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getXNormal() {
          return xNormal_;
        }
        public Builder setXNormal(int value) {
          bitField0_ |= 0x00000002;
          xNormal_ = value;
          onChanged();
          return this;
        }
        public Builder clearXNormal() {
          bitField0_ = (bitField0_ & ~0x00000002);
          xNormal_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 y_normal = 3;
        private int yNormal_ ;
        public boolean hasYNormal() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getYNormal() {
          return yNormal_;
        }
        public Builder setYNormal(int value) {
          bitField0_ |= 0x00000004;
          yNormal_ = value;
          onChanged();
          return this;
        }
        public Builder clearYNormal() {
          bitField0_ = (bitField0_ & ~0x00000004);
          yNormal_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.BloodImpact)
      }
      
      static {
        defaultInstance = new BloodImpact(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.BloodImpact)
    }
    
    public interface FadeGestureOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional .Activity activity = 1 [default = ACT_INVALID];
      boolean hasActivity();
      AiActivity.Activity getActivity();
    }
    public static final class FadeGesture extends
        com.google.protobuf.GeneratedMessage
        implements FadeGestureOrBuilder {
      // Use FadeGesture.newBuilder() to construct.
      private FadeGesture(Builder builder) {
        super(builder);
      }
      private FadeGesture(boolean noInit) {}
      
      private static final FadeGesture defaultInstance;
      public static FadeGesture getDefaultInstance() {
        return defaultInstance;
      }
      
      public FadeGesture getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional .Activity activity = 1 [default = ACT_INVALID];
      public static final int ACTIVITY_FIELD_NUMBER = 1;
      private AiActivity.Activity activity_;
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public AiActivity.Activity getActivity() {
        return activity_;
      }
      
      private void initFields() {
        activity_ = AiActivity.Activity.ACT_INVALID;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, activity_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, activity_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          activity_ = AiActivity.Activity.ACT_INVALID;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture build() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture buildPartial() {
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture result = new DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activity_ = activity_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture other) {
          if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance()) return this;
          if (other.hasActivity()) {
            setActivity(other.getActivity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                AiActivity.Activity value = AiActivity.Activity.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  activity_ = value;
                }
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional .Activity activity = 1 [default = ACT_INVALID];
        private AiActivity.Activity activity_ = AiActivity.Activity.ACT_INVALID;
        public boolean hasActivity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public AiActivity.Activity getActivity() {
          return activity_;
        }
        public Builder setActivity(AiActivity.Activity value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          activity_ = value;
          onChanged();
          return this;
        }
        public Builder clearActivity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activity_ = AiActivity.Activity.ACT_INVALID;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent.FadeGesture)
      }
      
      static {
        defaultInstance = new FadeGesture(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.FadeGesture)
    }
    
    private int bitField0_;
    // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
    public static final int MSG_TYPE_FIELD_NUMBER = 1;
    private DotaUsermessages.EDotaEntityMessages msgType_;
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaUsermessages.EDotaEntityMessages getMsgType() {
      return msgType_;
    }
    
    // required int32 entity_index = 2;
    public static final int ENTITY_INDEX_FIELD_NUMBER = 2;
    private int entityIndex_;
    public boolean hasEntityIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getEntityIndex() {
      return entityIndex_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
    public static final int SPEECH_FIELD_NUMBER = 3;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech speech_;
    public boolean hasSpeech() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech getSpeech() {
      return speech_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder() {
      return speech_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
    public static final int SPEECH_MUTE_FIELD_NUMBER = 4;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute speechMute_;
    public boolean hasSpeechMute() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute() {
      return speechMute_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder() {
      return speechMute_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
    public static final int ADD_GESTURE_FIELD_NUMBER = 5;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture addGesture_;
    public boolean hasAddGesture() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture() {
      return addGesture_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder() {
      return addGesture_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
    public static final int REMOVE_GESTURE_FIELD_NUMBER = 6;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture removeGesture_;
    public boolean hasRemoveGesture() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture() {
      return removeGesture_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder() {
      return removeGesture_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
    public static final int BLOOD_IMPACT_FIELD_NUMBER = 7;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact bloodImpact_;
    public boolean hasBloodImpact() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact() {
      return bloodImpact_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder() {
      return bloodImpact_;
    }
    
    // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
    public static final int FADE_GESTURE_FIELD_NUMBER = 8;
    private DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture fadeGesture_;
    public boolean hasFadeGesture() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture() {
      return fadeGesture_;
    }
    public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder() {
      return fadeGesture_;
    }
    
    // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
    public static final int SPEECH_MATCH_ON_CLIENT_FIELD_NUMBER = 9;
    private DotaUsermessages.CDOTASpeechMatchOnClient speechMatchOnClient_;
    public boolean hasSpeechMatchOnClient() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public DotaUsermessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient() {
      return speechMatchOnClient_;
    }
    public DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder() {
      return speechMatchOnClient_;
    }
    
    private void initFields() {
      msgType_ = DotaUsermessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
      entityIndex_ = 0;
      speech_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
      speechMute_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
      addGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
      removeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
      bloodImpact_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
      fadeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
      speechMatchOnClient_ = DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMsgType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntityIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSpeechMatchOnClient()) {
        if (!getSpeechMatchOnClient().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, msgType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, entityIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, speech_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, speechMute_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, addGesture_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, removeGesture_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, bloodImpact_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, fadeGesture_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, speechMatchOnClient_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, msgType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, entityIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, speech_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, speechMute_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, addGesture_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, removeGesture_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bloodImpact_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, fadeGesture_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, speechMatchOnClient_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UnitEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UnitEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_UnitEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_UnitEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSpeechFieldBuilder();
          getSpeechMuteFieldBuilder();
          getAddGestureFieldBuilder();
          getRemoveGestureFieldBuilder();
          getBloodImpactFieldBuilder();
          getFadeGestureFieldBuilder();
          getSpeechMatchOnClientFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msgType_ = DotaUsermessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
        bitField0_ = (bitField0_ & ~0x00000001);
        entityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (speechBuilder_ == null) {
          speech_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
        } else {
          speechBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (speechMuteBuilder_ == null) {
          speechMute_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
        } else {
          speechMuteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (addGestureBuilder_ == null) {
          addGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
        } else {
          addGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (removeGestureBuilder_ == null) {
          removeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
        } else {
          removeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
        } else {
          bloodImpactBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
        } else {
          fadeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance();
        } else {
          speechMatchOnClientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_UnitEvent.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_UnitEvent getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_UnitEvent.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_UnitEvent build() {
        DotaUsermessages.CDOTAUserMsg_UnitEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_UnitEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_UnitEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_UnitEvent buildPartial() {
        DotaUsermessages.CDOTAUserMsg_UnitEvent result = new DotaUsermessages.CDOTAUserMsg_UnitEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entityIndex_ = entityIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (speechBuilder_ == null) {
          result.speech_ = speech_;
        } else {
          result.speech_ = speechBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (speechMuteBuilder_ == null) {
          result.speechMute_ = speechMute_;
        } else {
          result.speechMute_ = speechMuteBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (addGestureBuilder_ == null) {
          result.addGesture_ = addGesture_;
        } else {
          result.addGesture_ = addGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (removeGestureBuilder_ == null) {
          result.removeGesture_ = removeGesture_;
        } else {
          result.removeGesture_ = removeGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (bloodImpactBuilder_ == null) {
          result.bloodImpact_ = bloodImpact_;
        } else {
          result.bloodImpact_ = bloodImpactBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (fadeGestureBuilder_ == null) {
          result.fadeGesture_ = fadeGesture_;
        } else {
          result.fadeGesture_ = fadeGestureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (speechMatchOnClientBuilder_ == null) {
          result.speechMatchOnClient_ = speechMatchOnClient_;
        } else {
          result.speechMatchOnClient_ = speechMatchOnClientBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_UnitEvent) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_UnitEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UnitEvent other) {
        if (other == DotaUsermessages.CDOTAUserMsg_UnitEvent.getDefaultInstance()) return this;
        if (other.hasMsgType()) {
          setMsgType(other.getMsgType());
        }
        if (other.hasEntityIndex()) {
          setEntityIndex(other.getEntityIndex());
        }
        if (other.hasSpeech()) {
          mergeSpeech(other.getSpeech());
        }
        if (other.hasSpeechMute()) {
          mergeSpeechMute(other.getSpeechMute());
        }
        if (other.hasAddGesture()) {
          mergeAddGesture(other.getAddGesture());
        }
        if (other.hasRemoveGesture()) {
          mergeRemoveGesture(other.getRemoveGesture());
        }
        if (other.hasBloodImpact()) {
          mergeBloodImpact(other.getBloodImpact());
        }
        if (other.hasFadeGesture()) {
          mergeFadeGesture(other.getFadeGesture());
        }
        if (other.hasSpeechMatchOnClient()) {
          mergeSpeechMatchOnClient(other.getSpeechMatchOnClient());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMsgType()) {
          
          return false;
        }
        if (!hasEntityIndex()) {
          
          return false;
        }
        if (hasSpeechMatchOnClient()) {
          if (!getSpeechMatchOnClient().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaUsermessages.EDotaEntityMessages value = DotaUsermessages.EDotaEntityMessages.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                msgType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              entityIndex_ = input.readInt32();
              break;
            }
            case 26: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.newBuilder();
              if (hasSpeech()) {
                subBuilder.mergeFrom(getSpeech());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSpeech(subBuilder.buildPartial());
              break;
            }
            case 34: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.newBuilder();
              if (hasSpeechMute()) {
                subBuilder.mergeFrom(getSpeechMute());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSpeechMute(subBuilder.buildPartial());
              break;
            }
            case 42: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.newBuilder();
              if (hasAddGesture()) {
                subBuilder.mergeFrom(getAddGesture());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAddGesture(subBuilder.buildPartial());
              break;
            }
            case 50: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.newBuilder();
              if (hasRemoveGesture()) {
                subBuilder.mergeFrom(getRemoveGesture());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRemoveGesture(subBuilder.buildPartial());
              break;
            }
            case 58: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.newBuilder();
              if (hasBloodImpact()) {
                subBuilder.mergeFrom(getBloodImpact());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBloodImpact(subBuilder.buildPartial());
              break;
            }
            case 66: {
              DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.newBuilder();
              if (hasFadeGesture()) {
                subBuilder.mergeFrom(getFadeGesture());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFadeGesture(subBuilder.buildPartial());
              break;
            }
            case 74: {
              DotaUsermessages.CDOTASpeechMatchOnClient.Builder subBuilder = DotaUsermessages.CDOTASpeechMatchOnClient.newBuilder();
              if (hasSpeechMatchOnClient()) {
                subBuilder.mergeFrom(getSpeechMatchOnClient());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSpeechMatchOnClient(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
      private DotaUsermessages.EDotaEntityMessages msgType_ = DotaUsermessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaUsermessages.EDotaEntityMessages getMsgType() {
        return msgType_;
      }
      public Builder setMsgType(DotaUsermessages.EDotaEntityMessages value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        msgType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgType_ = DotaUsermessages.EDotaEntityMessages.DOTA_UNIT_SPEECH;
        onChanged();
        return this;
      }
      
      // required int32 entity_index = 2;
      private int entityIndex_ ;
      public boolean hasEntityIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEntityIndex() {
        return entityIndex_;
      }
      public Builder setEntityIndex(int value) {
        bitField0_ |= 0x00000002;
        entityIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntityIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entityIndex_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech speech_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech, DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder> speechBuilder_;
      public boolean hasSpeech() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech getSpeech() {
        if (speechBuilder_ == null) {
          return speech_;
        } else {
          return speechBuilder_.getMessage();
        }
      }
      public Builder setSpeech(DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech value) {
        if (speechBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speech_ = value;
          onChanged();
        } else {
          speechBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setSpeech(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder builderForValue) {
        if (speechBuilder_ == null) {
          speech_ = builderForValue.build();
          onChanged();
        } else {
          speechBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeSpeech(DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech value) {
        if (speechBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              speech_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance()) {
            speech_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.newBuilder(speech_).mergeFrom(value).buildPartial();
          } else {
            speech_ = value;
          }
          onChanged();
        } else {
          speechBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearSpeech() {
        if (speechBuilder_ == null) {
          speech_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.getDefaultInstance();
          onChanged();
        } else {
          speechBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder getSpeechBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSpeechFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder getSpeechOrBuilder() {
        if (speechBuilder_ != null) {
          return speechBuilder_.getMessageOrBuilder();
        } else {
          return speech_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech, DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder> 
          getSpeechFieldBuilder() {
        if (speechBuilder_ == null) {
          speechBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech, DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechOrBuilder>(
                  speech_,
                  getParentForChildren(),
                  isClean());
          speech_ = null;
        }
        return speechBuilder_;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute speechMute_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder> speechMuteBuilder_;
      public boolean hasSpeechMute() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute getSpeechMute() {
        if (speechMuteBuilder_ == null) {
          return speechMute_;
        } else {
          return speechMuteBuilder_.getMessage();
        }
      }
      public Builder setSpeechMute(DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute value) {
        if (speechMuteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speechMute_ = value;
          onChanged();
        } else {
          speechMuteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setSpeechMute(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder builderForValue) {
        if (speechMuteBuilder_ == null) {
          speechMute_ = builderForValue.build();
          onChanged();
        } else {
          speechMuteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeSpeechMute(DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute value) {
        if (speechMuteBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              speechMute_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance()) {
            speechMute_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.newBuilder(speechMute_).mergeFrom(value).buildPartial();
          } else {
            speechMute_ = value;
          }
          onChanged();
        } else {
          speechMuteBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearSpeechMute() {
        if (speechMuteBuilder_ == null) {
          speechMute_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.getDefaultInstance();
          onChanged();
        } else {
          speechMuteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder getSpeechMuteBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSpeechMuteFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder getSpeechMuteOrBuilder() {
        if (speechMuteBuilder_ != null) {
          return speechMuteBuilder_.getMessageOrBuilder();
        } else {
          return speechMute_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder> 
          getSpeechMuteFieldBuilder() {
        if (speechMuteBuilder_ == null) {
          speechMuteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMuteOrBuilder>(
                  speechMute_,
                  getParentForChildren(),
                  isClean());
          speechMute_ = null;
        }
        return speechMuteBuilder_;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture addGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder> addGestureBuilder_;
      public boolean hasAddGesture() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture getAddGesture() {
        if (addGestureBuilder_ == null) {
          return addGesture_;
        } else {
          return addGestureBuilder_.getMessage();
        }
      }
      public Builder setAddGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture value) {
        if (addGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          addGesture_ = value;
          onChanged();
        } else {
          addGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setAddGesture(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder builderForValue) {
        if (addGestureBuilder_ == null) {
          addGesture_ = builderForValue.build();
          onChanged();
        } else {
          addGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeAddGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture value) {
        if (addGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              addGesture_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance()) {
            addGesture_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.newBuilder(addGesture_).mergeFrom(value).buildPartial();
          } else {
            addGesture_ = value;
          }
          onChanged();
        } else {
          addGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearAddGesture() {
        if (addGestureBuilder_ == null) {
          addGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.getDefaultInstance();
          onChanged();
        } else {
          addGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder getAddGestureBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAddGestureFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder getAddGestureOrBuilder() {
        if (addGestureBuilder_ != null) {
          return addGestureBuilder_.getMessageOrBuilder();
        } else {
          return addGesture_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder> 
          getAddGestureFieldBuilder() {
        if (addGestureBuilder_ == null) {
          addGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGestureOrBuilder>(
                  addGesture_,
                  getParentForChildren(),
                  isClean());
          addGesture_ = null;
        }
        return addGestureBuilder_;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture removeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder> removeGestureBuilder_;
      public boolean hasRemoveGesture() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture getRemoveGesture() {
        if (removeGestureBuilder_ == null) {
          return removeGesture_;
        } else {
          return removeGestureBuilder_.getMessage();
        }
      }
      public Builder setRemoveGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture value) {
        if (removeGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          removeGesture_ = value;
          onChanged();
        } else {
          removeGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setRemoveGesture(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder builderForValue) {
        if (removeGestureBuilder_ == null) {
          removeGesture_ = builderForValue.build();
          onChanged();
        } else {
          removeGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeRemoveGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture value) {
        if (removeGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              removeGesture_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance()) {
            removeGesture_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.newBuilder(removeGesture_).mergeFrom(value).buildPartial();
          } else {
            removeGesture_ = value;
          }
          onChanged();
        } else {
          removeGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearRemoveGesture() {
        if (removeGestureBuilder_ == null) {
          removeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.getDefaultInstance();
          onChanged();
        } else {
          removeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder getRemoveGestureBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRemoveGestureFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder getRemoveGestureOrBuilder() {
        if (removeGestureBuilder_ != null) {
          return removeGestureBuilder_.getMessageOrBuilder();
        } else {
          return removeGesture_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder> 
          getRemoveGestureFieldBuilder() {
        if (removeGestureBuilder_ == null) {
          removeGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGestureOrBuilder>(
                  removeGesture_,
                  getParentForChildren(),
                  isClean());
          removeGesture_ = null;
        }
        return removeGestureBuilder_;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact bloodImpact_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder> bloodImpactBuilder_;
      public boolean hasBloodImpact() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact getBloodImpact() {
        if (bloodImpactBuilder_ == null) {
          return bloodImpact_;
        } else {
          return bloodImpactBuilder_.getMessage();
        }
      }
      public Builder setBloodImpact(DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact value) {
        if (bloodImpactBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bloodImpact_ = value;
          onChanged();
        } else {
          bloodImpactBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setBloodImpact(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder builderForValue) {
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = builderForValue.build();
          onChanged();
        } else {
          bloodImpactBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeBloodImpact(DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact value) {
        if (bloodImpactBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              bloodImpact_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance()) {
            bloodImpact_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.newBuilder(bloodImpact_).mergeFrom(value).buildPartial();
          } else {
            bloodImpact_ = value;
          }
          onChanged();
        } else {
          bloodImpactBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearBloodImpact() {
        if (bloodImpactBuilder_ == null) {
          bloodImpact_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.getDefaultInstance();
          onChanged();
        } else {
          bloodImpactBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder getBloodImpactBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getBloodImpactFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder getBloodImpactOrBuilder() {
        if (bloodImpactBuilder_ != null) {
          return bloodImpactBuilder_.getMessageOrBuilder();
        } else {
          return bloodImpact_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder> 
          getBloodImpactFieldBuilder() {
        if (bloodImpactBuilder_ == null) {
          bloodImpactBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpactOrBuilder>(
                  bloodImpact_,
                  getParentForChildren(),
                  isClean());
          bloodImpact_ = null;
        }
        return bloodImpactBuilder_;
      }
      
      // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
      private DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture fadeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder> fadeGestureBuilder_;
      public boolean hasFadeGesture() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture getFadeGesture() {
        if (fadeGestureBuilder_ == null) {
          return fadeGesture_;
        } else {
          return fadeGestureBuilder_.getMessage();
        }
      }
      public Builder setFadeGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture value) {
        if (fadeGestureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fadeGesture_ = value;
          onChanged();
        } else {
          fadeGestureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setFadeGesture(
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder builderForValue) {
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = builderForValue.build();
          onChanged();
        } else {
          fadeGestureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergeFadeGesture(DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture value) {
        if (fadeGestureBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              fadeGesture_ != DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance()) {
            fadeGesture_ =
              DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.newBuilder(fadeGesture_).mergeFrom(value).buildPartial();
          } else {
            fadeGesture_ = value;
          }
          onChanged();
        } else {
          fadeGestureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearFadeGesture() {
        if (fadeGestureBuilder_ == null) {
          fadeGesture_ = DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.getDefaultInstance();
          onChanged();
        } else {
          fadeGestureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder getFadeGestureBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getFadeGestureFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder getFadeGestureOrBuilder() {
        if (fadeGestureBuilder_ != null) {
          return fadeGestureBuilder_.getMessageOrBuilder();
        } else {
          return fadeGesture_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder> 
          getFadeGestureFieldBuilder() {
        if (fadeGestureBuilder_ == null) {
          fadeGestureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder, DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGestureOrBuilder>(
                  fadeGesture_,
                  getParentForChildren(),
                  isClean());
          fadeGesture_ = null;
        }
        return fadeGestureBuilder_;
      }
      
      // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
      private DotaUsermessages.CDOTASpeechMatchOnClient speechMatchOnClient_ = DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTASpeechMatchOnClient, DotaUsermessages.CDOTASpeechMatchOnClient.Builder, DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder> speechMatchOnClientBuilder_;
      public boolean hasSpeechMatchOnClient() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public DotaUsermessages.CDOTASpeechMatchOnClient getSpeechMatchOnClient() {
        if (speechMatchOnClientBuilder_ == null) {
          return speechMatchOnClient_;
        } else {
          return speechMatchOnClientBuilder_.getMessage();
        }
      }
      public Builder setSpeechMatchOnClient(DotaUsermessages.CDOTASpeechMatchOnClient value) {
        if (speechMatchOnClientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speechMatchOnClient_ = value;
          onChanged();
        } else {
          speechMatchOnClientBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setSpeechMatchOnClient(
          DotaUsermessages.CDOTASpeechMatchOnClient.Builder builderForValue) {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = builderForValue.build();
          onChanged();
        } else {
          speechMatchOnClientBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeSpeechMatchOnClient(DotaUsermessages.CDOTASpeechMatchOnClient value) {
        if (speechMatchOnClientBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              speechMatchOnClient_ != DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance()) {
            speechMatchOnClient_ =
              DotaUsermessages.CDOTASpeechMatchOnClient.newBuilder(speechMatchOnClient_).mergeFrom(value).buildPartial();
          } else {
            speechMatchOnClient_ = value;
          }
          onChanged();
        } else {
          speechMatchOnClientBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearSpeechMatchOnClient() {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClient_ = DotaUsermessages.CDOTASpeechMatchOnClient.getDefaultInstance();
          onChanged();
        } else {
          speechMatchOnClientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      public DotaUsermessages.CDOTASpeechMatchOnClient.Builder getSpeechMatchOnClientBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getSpeechMatchOnClientFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder getSpeechMatchOnClientOrBuilder() {
        if (speechMatchOnClientBuilder_ != null) {
          return speechMatchOnClientBuilder_.getMessageOrBuilder();
        } else {
          return speechMatchOnClient_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTASpeechMatchOnClient, DotaUsermessages.CDOTASpeechMatchOnClient.Builder, DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder> 
          getSpeechMatchOnClientFieldBuilder() {
        if (speechMatchOnClientBuilder_ == null) {
          speechMatchOnClientBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTASpeechMatchOnClient, DotaUsermessages.CDOTASpeechMatchOnClient.Builder, DotaUsermessages.CDOTASpeechMatchOnClientOrBuilder>(
                  speechMatchOnClient_,
                  getParentForChildren(),
                  isClean());
          speechMatchOnClient_ = null;
        }
        return speechMatchOnClientBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UnitEvent)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_UnitEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent)
  }
  
  public interface CDOTAUserMsg_ItemPurchasedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 item_index = 1;
    boolean hasItemIndex();
    int getItemIndex();
  }
  public static final class CDOTAUserMsg_ItemPurchased extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ItemPurchasedOrBuilder {
    // Use CDOTAUserMsg_ItemPurchased.newBuilder() to construct.
    private CDOTAUserMsg_ItemPurchased(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ItemPurchased(boolean noInit) {}
    
    private static final CDOTAUserMsg_ItemPurchased defaultInstance;
    public static CDOTAUserMsg_ItemPurchased getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ItemPurchased getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 item_index = 1;
    public static final int ITEM_INDEX_FIELD_NUMBER = 1;
    private int itemIndex_;
    public boolean hasItemIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getItemIndex() {
      return itemIndex_;
    }
    
    private void initFields() {
      itemIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemIndex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemPurchased parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ItemPurchased prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ItemPurchasedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ItemPurchased.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        itemIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemPurchased.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemPurchased getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemPurchased.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemPurchased build() {
        DotaUsermessages.CDOTAUserMsg_ItemPurchased result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ItemPurchased buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ItemPurchased result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemPurchased buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ItemPurchased result = new DotaUsermessages.CDOTAUserMsg_ItemPurchased(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemIndex_ = itemIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ItemPurchased) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ItemPurchased)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ItemPurchased other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ItemPurchased.getDefaultInstance()) return this;
        if (other.hasItemIndex()) {
          setItemIndex(other.getItemIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemIndex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 item_index = 1;
      private int itemIndex_ ;
      public boolean hasItemIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getItemIndex() {
        return itemIndex_;
      }
      public Builder setItemIndex(int value) {
        bitField0_ |= 0x00000001;
        itemIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemIndex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemPurchased)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ItemPurchased(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemPurchased)
  }
  
  public interface CDOTAUserMsg_ItemFoundOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 player = 1;
    boolean hasPlayer();
    int getPlayer();
    
    // optional int32 quality = 2;
    boolean hasQuality();
    int getQuality();
    
    // optional int32 rarity = 3;
    boolean hasRarity();
    int getRarity();
    
    // optional int32 method = 4;
    boolean hasMethod();
    int getMethod();
    
    // optional int32 itemdef = 5;
    boolean hasItemdef();
    int getItemdef();
  }
  public static final class CDOTAUserMsg_ItemFound extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ItemFoundOrBuilder {
    // Use CDOTAUserMsg_ItemFound.newBuilder() to construct.
    private CDOTAUserMsg_ItemFound(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ItemFound(boolean noInit) {}
    
    private static final CDOTAUserMsg_ItemFound defaultInstance;
    public static CDOTAUserMsg_ItemFound getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ItemFound getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemFound_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 player = 1;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayer() {
      return player_;
    }
    
    // optional int32 quality = 2;
    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getQuality() {
      return quality_;
    }
    
    // optional int32 rarity = 3;
    public static final int RARITY_FIELD_NUMBER = 3;
    private int rarity_;
    public boolean hasRarity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRarity() {
      return rarity_;
    }
    
    // optional int32 method = 4;
    public static final int METHOD_FIELD_NUMBER = 4;
    private int method_;
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getMethod() {
      return method_;
    }
    
    // optional int32 itemdef = 5;
    public static final int ITEMDEF_FIELD_NUMBER = 5;
    private int itemdef_;
    public boolean hasItemdef() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getItemdef() {
      return itemdef_;
    }
    
    private void initFields() {
      player_ = 0;
      quality_ = 0;
      rarity_ = 0;
      method_ = 0;
      itemdef_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rarity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, method_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, itemdef_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rarity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, method_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, itemdef_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ItemFound parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ItemFound prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ItemFoundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemFound_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ItemFound.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rarity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        method_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        itemdef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemFound.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemFound getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ItemFound.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemFound build() {
        DotaUsermessages.CDOTAUserMsg_ItemFound result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ItemFound buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ItemFound result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ItemFound buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ItemFound result = new DotaUsermessages.CDOTAUserMsg_ItemFound(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rarity_ = rarity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.method_ = method_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.itemdef_ = itemdef_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ItemFound) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ItemFound)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ItemFound other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ItemFound.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasRarity()) {
          setRarity(other.getRarity());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        if (other.hasItemdef()) {
          setItemdef(other.getItemdef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              player_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rarity_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              method_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              itemdef_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 player = 1;
      private int player_ ;
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayer() {
        return player_;
      }
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 quality = 2;
      private int quality_ ;
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getQuality() {
        return quality_;
      }
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        onChanged();
        return this;
      }
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 rarity = 3;
      private int rarity_ ;
      public boolean hasRarity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRarity() {
        return rarity_;
      }
      public Builder setRarity(int value) {
        bitField0_ |= 0x00000004;
        rarity_ = value;
        onChanged();
        return this;
      }
      public Builder clearRarity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rarity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 method = 4;
      private int method_ ;
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMethod() {
        return method_;
      }
      public Builder setMethod(int value) {
        bitField0_ |= 0x00000008;
        method_ = value;
        onChanged();
        return this;
      }
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        method_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 itemdef = 5;
      private int itemdef_ ;
      public boolean hasItemdef() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getItemdef() {
        return itemdef_;
      }
      public Builder setItemdef(int value) {
        bitField0_ |= 0x00000010;
        itemdef_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemdef() {
        bitField0_ = (bitField0_ & ~0x00000010);
        itemdef_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ItemFound)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ItemFound(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemFound)
  }
  
  public interface CDOTAUserMsg_ParticleManagerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];
    boolean hasType();
    DotaUsermessages.DOTA_PARTICLE_MESSAGE getType();
    
    // required uint32 index = 2;
    boolean hasIndex();
    int getIndex();
    
    // optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
    boolean hasReleaseParticleIndex();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;
    boolean hasCreateParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
    boolean hasDestroyParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
    boolean hasDestroyParticleInvolving();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;
    boolean hasUpdateParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
    boolean hasUpdateParticleFwd();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
    boolean hasUpdateParticleOrient();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
    boolean hasUpdateParticleFallback();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
    boolean hasUpdateParticleOffset();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
    boolean hasUpdateParticleEnt();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    boolean hasUpdateParticleShouldDraw();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder();
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
    boolean hasUpdateParticleSetFrozen();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen();
    DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder();
  }
  public static final class CDOTAUserMsg_ParticleManager extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ParticleManagerOrBuilder {
    // Use CDOTAUserMsg_ParticleManager.newBuilder() to construct.
    private CDOTAUserMsg_ParticleManager(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ParticleManager(boolean noInit) {}
    
    private static final CDOTAUserMsg_ParticleManager defaultInstance;
    public static CDOTAUserMsg_ParticleManager getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ParticleManager getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable;
    }
    
    public interface ReleaseParticleIndexOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
    }
    public static final class ReleaseParticleIndex extends
        com.google.protobuf.GeneratedMessage
        implements ReleaseParticleIndexOrBuilder {
      // Use ReleaseParticleIndex.newBuilder() to construct.
      private ReleaseParticleIndex(Builder builder) {
        super(builder);
      }
      private ReleaseParticleIndex(boolean noInit) {}
      
      private static final ReleaseParticleIndex defaultInstance;
      public static ReleaseParticleIndex getDefaultInstance() {
        return defaultInstance;
      }
      
      public ReleaseParticleIndex getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable;
      }
      
      private void initFields() {
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex(this);
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
            }
          }
        }
        
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
      }
      
      static {
        defaultInstance = new ReleaseParticleIndex(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
    }
    
    public interface CreateParticleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 particle_name_index = 1;
      boolean hasParticleNameIndex();
      int getParticleNameIndex();
      
      // optional int32 attach_type = 2;
      boolean hasAttachType();
      int getAttachType();
      
      // optional int32 entity_handle = 3;
      boolean hasEntityHandle();
      int getEntityHandle();
    }
    public static final class CreateParticle extends
        com.google.protobuf.GeneratedMessage
        implements CreateParticleOrBuilder {
      // Use CreateParticle.newBuilder() to construct.
      private CreateParticle(Builder builder) {
        super(builder);
      }
      private CreateParticle(boolean noInit) {}
      
      private static final CreateParticle defaultInstance;
      public static CreateParticle getDefaultInstance() {
        return defaultInstance;
      }
      
      public CreateParticle getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 particle_name_index = 1;
      public static final int PARTICLE_NAME_INDEX_FIELD_NUMBER = 1;
      private int particleNameIndex_;
      public boolean hasParticleNameIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getParticleNameIndex() {
        return particleNameIndex_;
      }
      
      // optional int32 attach_type = 2;
      public static final int ATTACH_TYPE_FIELD_NUMBER = 2;
      private int attachType_;
      public boolean hasAttachType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getAttachType() {
        return attachType_;
      }
      
      // optional int32 entity_handle = 3;
      public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
      private int entityHandle_;
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getEntityHandle() {
        return entityHandle_;
      }
      
      private void initFields() {
        particleNameIndex_ = 0;
        attachType_ = 0;
        entityHandle_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, particleNameIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, attachType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, entityHandle_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, particleNameIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, attachType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, entityHandle_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          particleNameIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          attachType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.particleNameIndex_ = particleNameIndex_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.attachType_ = attachType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.entityHandle_ = entityHandle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance()) return this;
          if (other.hasParticleNameIndex()) {
            setParticleNameIndex(other.getParticleNameIndex());
          }
          if (other.hasAttachType()) {
            setAttachType(other.getAttachType());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                particleNameIndex_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                attachType_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                entityHandle_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 particle_name_index = 1;
        private int particleNameIndex_ ;
        public boolean hasParticleNameIndex() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getParticleNameIndex() {
          return particleNameIndex_;
        }
        public Builder setParticleNameIndex(int value) {
          bitField0_ |= 0x00000001;
          particleNameIndex_ = value;
          onChanged();
          return this;
        }
        public Builder clearParticleNameIndex() {
          bitField0_ = (bitField0_ & ~0x00000001);
          particleNameIndex_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 attach_type = 2;
        private int attachType_ ;
        public boolean hasAttachType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getAttachType() {
          return attachType_;
        }
        public Builder setAttachType(int value) {
          bitField0_ |= 0x00000002;
          attachType_ = value;
          onChanged();
          return this;
        }
        public Builder clearAttachType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          attachType_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 entity_handle = 3;
        private int entityHandle_ ;
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getEntityHandle() {
          return entityHandle_;
        }
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000004;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          entityHandle_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.CreateParticle)
      }
      
      static {
        defaultInstance = new CreateParticle(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.CreateParticle)
    }
    
    public interface DestroyParticleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional bool destroy_immediately = 1;
      boolean hasDestroyImmediately();
      boolean getDestroyImmediately();
    }
    public static final class DestroyParticle extends
        com.google.protobuf.GeneratedMessage
        implements DestroyParticleOrBuilder {
      // Use DestroyParticle.newBuilder() to construct.
      private DestroyParticle(Builder builder) {
        super(builder);
      }
      private DestroyParticle(boolean noInit) {}
      
      private static final DestroyParticle defaultInstance;
      public static DestroyParticle getDefaultInstance() {
        return defaultInstance;
      }
      
      public DestroyParticle getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional bool destroy_immediately = 1;
      public static final int DESTROY_IMMEDIATELY_FIELD_NUMBER = 1;
      private boolean destroyImmediately_;
      public boolean hasDestroyImmediately() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getDestroyImmediately() {
        return destroyImmediately_;
      }
      
      private void initFields() {
        destroyImmediately_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, destroyImmediately_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, destroyImmediately_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          destroyImmediately_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.destroyImmediately_ = destroyImmediately_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance()) return this;
          if (other.hasDestroyImmediately()) {
            setDestroyImmediately(other.getDestroyImmediately());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                destroyImmediately_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional bool destroy_immediately = 1;
        private boolean destroyImmediately_ ;
        public boolean hasDestroyImmediately() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public boolean getDestroyImmediately() {
          return destroyImmediately_;
        }
        public Builder setDestroyImmediately(boolean value) {
          bitField0_ |= 0x00000001;
          destroyImmediately_ = value;
          onChanged();
          return this;
        }
        public Builder clearDestroyImmediately() {
          bitField0_ = (bitField0_ & ~0x00000001);
          destroyImmediately_ = false;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.DestroyParticle)
      }
      
      static {
        defaultInstance = new DestroyParticle(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.DestroyParticle)
    }
    
    public interface DestroyParticleInvolvingOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional bool destroy_immediately = 1;
      boolean hasDestroyImmediately();
      boolean getDestroyImmediately();
      
      // optional int32 entity_handle = 3;
      boolean hasEntityHandle();
      int getEntityHandle();
    }
    public static final class DestroyParticleInvolving extends
        com.google.protobuf.GeneratedMessage
        implements DestroyParticleInvolvingOrBuilder {
      // Use DestroyParticleInvolving.newBuilder() to construct.
      private DestroyParticleInvolving(Builder builder) {
        super(builder);
      }
      private DestroyParticleInvolving(boolean noInit) {}
      
      private static final DestroyParticleInvolving defaultInstance;
      public static DestroyParticleInvolving getDefaultInstance() {
        return defaultInstance;
      }
      
      public DestroyParticleInvolving getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional bool destroy_immediately = 1;
      public static final int DESTROY_IMMEDIATELY_FIELD_NUMBER = 1;
      private boolean destroyImmediately_;
      public boolean hasDestroyImmediately() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getDestroyImmediately() {
        return destroyImmediately_;
      }
      
      // optional int32 entity_handle = 3;
      public static final int ENTITY_HANDLE_FIELD_NUMBER = 3;
      private int entityHandle_;
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEntityHandle() {
        return entityHandle_;
      }
      
      private void initFields() {
        destroyImmediately_ = false;
        entityHandle_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, destroyImmediately_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, entityHandle_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, destroyImmediately_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, entityHandle_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          destroyImmediately_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.destroyImmediately_ = destroyImmediately_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.entityHandle_ = entityHandle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance()) return this;
          if (other.hasDestroyImmediately()) {
            setDestroyImmediately(other.getDestroyImmediately());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                destroyImmediately_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                entityHandle_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional bool destroy_immediately = 1;
        private boolean destroyImmediately_ ;
        public boolean hasDestroyImmediately() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public boolean getDestroyImmediately() {
          return destroyImmediately_;
        }
        public Builder setDestroyImmediately(boolean value) {
          bitField0_ |= 0x00000001;
          destroyImmediately_ = value;
          onChanged();
          return this;
        }
        public Builder clearDestroyImmediately() {
          bitField0_ = (bitField0_ & ~0x00000001);
          destroyImmediately_ = false;
          onChanged();
          return this;
        }
        
        // optional int32 entity_handle = 3;
        private int entityHandle_ ;
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getEntityHandle() {
          return entityHandle_;
        }
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000002;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
      }
      
      static {
        defaultInstance = new DestroyParticleInvolving(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
    }
    
    public interface UpdateParticleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional .CMsgVector position = 2;
      boolean hasPosition();
      Networkbasetypes.CMsgVector getPosition();
      Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder();
    }
    public static final class UpdateParticle extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleOrBuilder {
      // Use UpdateParticle.newBuilder() to construct.
      private UpdateParticle(Builder builder) {
        super(builder);
      }
      private UpdateParticle(boolean noInit) {}
      
      private static final UpdateParticle defaultInstance;
      public static UpdateParticle getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticle getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional .CMsgVector position = 2;
      public static final int POSITION_FIELD_NUMBER = 2;
      private Networkbasetypes.CMsgVector position_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector getPosition() {
        return position_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        return position_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasPosition()) {
                  subBuilder.mergeFrom(getPosition());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPosition(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector position = 2;
        private Networkbasetypes.CMsgVector position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> positionBuilder_;
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public Networkbasetypes.CMsgVector getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        public Builder setPosition(Networkbasetypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setPosition(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergePosition(Networkbasetypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              position_ =
                Networkbasetypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticle)
      }
      
      static {
        defaultInstance = new UpdateParticle(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticle)
    }
    
    public interface UpdateParticleFwdOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional .CMsgVector forward = 2;
      boolean hasForward();
      Networkbasetypes.CMsgVector getForward();
      Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder();
    }
    public static final class UpdateParticleFwd extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleFwdOrBuilder {
      // Use UpdateParticleFwd.newBuilder() to construct.
      private UpdateParticleFwd(Builder builder) {
        super(builder);
      }
      private UpdateParticleFwd(boolean noInit) {}
      
      private static final UpdateParticleFwd defaultInstance;
      public static UpdateParticleFwd getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleFwd getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional .CMsgVector forward = 2;
      public static final int FORWARD_FIELD_NUMBER = 2;
      private Networkbasetypes.CMsgVector forward_;
      public boolean hasForward() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector getForward() {
        return forward_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder() {
        return forward_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, forward_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, forward_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getForwardFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (forwardBuilder_ == null) {
            forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (forwardBuilder_ == null) {
            result.forward_ = forward_;
          } else {
            result.forward_ = forwardBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasForward()) {
            mergeForward(other.getForward());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasForward()) {
                  subBuilder.mergeFrom(getForward());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setForward(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector forward = 2;
        private Networkbasetypes.CMsgVector forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> forwardBuilder_;
        public boolean hasForward() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public Networkbasetypes.CMsgVector getForward() {
          if (forwardBuilder_ == null) {
            return forward_;
          } else {
            return forwardBuilder_.getMessage();
          }
        }
        public Builder setForward(Networkbasetypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forward_ = value;
            onChanged();
          } else {
            forwardBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setForward(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (forwardBuilder_ == null) {
            forward_ = builderForValue.build();
            onChanged();
          } else {
            forwardBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergeForward(Networkbasetypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                forward_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              forward_ =
                Networkbasetypes.CMsgVector.newBuilder(forward_).mergeFrom(value).buildPartial();
            } else {
              forward_ = value;
            }
            onChanged();
          } else {
            forwardBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearForward() {
          if (forwardBuilder_ == null) {
            forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getForwardBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getForwardFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder() {
          if (forwardBuilder_ != null) {
            return forwardBuilder_.getMessageOrBuilder();
          } else {
            return forward_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getForwardFieldBuilder() {
          if (forwardBuilder_ == null) {
            forwardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    forward_,
                    getParentForChildren(),
                    isClean());
            forward_ = null;
          }
          return forwardBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
      }
      
      static {
        defaultInstance = new UpdateParticleFwd(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
    }
    
    public interface UpdateParticleOrientOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional .CMsgVector forward = 2;
      boolean hasForward();
      Networkbasetypes.CMsgVector getForward();
      Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder();
      
      // optional .CMsgVector right = 3;
      boolean hasRight();
      Networkbasetypes.CMsgVector getRight();
      Networkbasetypes.CMsgVectorOrBuilder getRightOrBuilder();
      
      // optional .CMsgVector up = 4;
      boolean hasUp();
      Networkbasetypes.CMsgVector getUp();
      Networkbasetypes.CMsgVectorOrBuilder getUpOrBuilder();
    }
    public static final class UpdateParticleOrient extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleOrientOrBuilder {
      // Use UpdateParticleOrient.newBuilder() to construct.
      private UpdateParticleOrient(Builder builder) {
        super(builder);
      }
      private UpdateParticleOrient(boolean noInit) {}
      
      private static final UpdateParticleOrient defaultInstance;
      public static UpdateParticleOrient getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleOrient getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional .CMsgVector forward = 2;
      public static final int FORWARD_FIELD_NUMBER = 2;
      private Networkbasetypes.CMsgVector forward_;
      public boolean hasForward() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector getForward() {
        return forward_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder() {
        return forward_;
      }
      
      // optional .CMsgVector right = 3;
      public static final int RIGHT_FIELD_NUMBER = 3;
      private Networkbasetypes.CMsgVector right_;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Networkbasetypes.CMsgVector getRight() {
        return right_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getRightOrBuilder() {
        return right_;
      }
      
      // optional .CMsgVector up = 4;
      public static final int UP_FIELD_NUMBER = 4;
      private Networkbasetypes.CMsgVector up_;
      public boolean hasUp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public Networkbasetypes.CMsgVector getUp() {
        return up_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getUpOrBuilder() {
        return up_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        right_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        up_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, forward_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, up_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, forward_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, right_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, up_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getForwardFieldBuilder();
            getRightFieldBuilder();
            getUpFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (forwardBuilder_ == null) {
            forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (rightBuilder_ == null) {
            right_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            rightBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (upBuilder_ == null) {
            up_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            upBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (forwardBuilder_ == null) {
            result.forward_ = forward_;
          } else {
            result.forward_ = forwardBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (rightBuilder_ == null) {
            result.right_ = right_;
          } else {
            result.right_ = rightBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (upBuilder_ == null) {
            result.up_ = up_;
          } else {
            result.up_ = upBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasForward()) {
            mergeForward(other.getForward());
          }
          if (other.hasRight()) {
            mergeRight(other.getRight());
          }
          if (other.hasUp()) {
            mergeUp(other.getUp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasForward()) {
                  subBuilder.mergeFrom(getForward());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setForward(subBuilder.buildPartial());
                break;
              }
              case 26: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasRight()) {
                  subBuilder.mergeFrom(getRight());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setRight(subBuilder.buildPartial());
                break;
              }
              case 34: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasUp()) {
                  subBuilder.mergeFrom(getUp());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setUp(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector forward = 2;
        private Networkbasetypes.CMsgVector forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> forwardBuilder_;
        public boolean hasForward() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public Networkbasetypes.CMsgVector getForward() {
          if (forwardBuilder_ == null) {
            return forward_;
          } else {
            return forwardBuilder_.getMessage();
          }
        }
        public Builder setForward(Networkbasetypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forward_ = value;
            onChanged();
          } else {
            forwardBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setForward(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (forwardBuilder_ == null) {
            forward_ = builderForValue.build();
            onChanged();
          } else {
            forwardBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergeForward(Networkbasetypes.CMsgVector value) {
          if (forwardBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                forward_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              forward_ =
                Networkbasetypes.CMsgVector.newBuilder(forward_).mergeFrom(value).buildPartial();
            } else {
              forward_ = value;
            }
            onChanged();
          } else {
            forwardBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearForward() {
          if (forwardBuilder_ == null) {
            forward_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            forwardBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getForwardBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getForwardFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getForwardOrBuilder() {
          if (forwardBuilder_ != null) {
            return forwardBuilder_.getMessageOrBuilder();
          } else {
            return forward_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getForwardFieldBuilder() {
          if (forwardBuilder_ == null) {
            forwardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    forward_,
                    getParentForChildren(),
                    isClean());
            forward_ = null;
          }
          return forwardBuilder_;
        }
        
        // optional .CMsgVector right = 3;
        private Networkbasetypes.CMsgVector right_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> rightBuilder_;
        public boolean hasRight() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public Networkbasetypes.CMsgVector getRight() {
          if (rightBuilder_ == null) {
            return right_;
          } else {
            return rightBuilder_.getMessage();
          }
        }
        public Builder setRight(Networkbasetypes.CMsgVector value) {
          if (rightBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            right_ = value;
            onChanged();
          } else {
            rightBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder setRight(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (rightBuilder_ == null) {
            right_ = builderForValue.build();
            onChanged();
          } else {
            rightBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder mergeRight(Networkbasetypes.CMsgVector value) {
          if (rightBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                right_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              right_ =
                Networkbasetypes.CMsgVector.newBuilder(right_).mergeFrom(value).buildPartial();
            } else {
              right_ = value;
            }
            onChanged();
          } else {
            rightBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder clearRight() {
          if (rightBuilder_ == null) {
            right_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            rightBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getRightBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getRightFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getRightOrBuilder() {
          if (rightBuilder_ != null) {
            return rightBuilder_.getMessageOrBuilder();
          } else {
            return right_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getRightFieldBuilder() {
          if (rightBuilder_ == null) {
            rightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    right_,
                    getParentForChildren(),
                    isClean());
            right_ = null;
          }
          return rightBuilder_;
        }
        
        // optional .CMsgVector up = 4;
        private Networkbasetypes.CMsgVector up_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> upBuilder_;
        public boolean hasUp() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public Networkbasetypes.CMsgVector getUp() {
          if (upBuilder_ == null) {
            return up_;
          } else {
            return upBuilder_.getMessage();
          }
        }
        public Builder setUp(Networkbasetypes.CMsgVector value) {
          if (upBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            up_ = value;
            onChanged();
          } else {
            upBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder setUp(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (upBuilder_ == null) {
            up_ = builderForValue.build();
            onChanged();
          } else {
            upBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder mergeUp(Networkbasetypes.CMsgVector value) {
          if (upBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                up_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              up_ =
                Networkbasetypes.CMsgVector.newBuilder(up_).mergeFrom(value).buildPartial();
            } else {
              up_ = value;
            }
            onChanged();
          } else {
            upBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder clearUp() {
          if (upBuilder_ == null) {
            up_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            upBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getUpBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getUpFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getUpOrBuilder() {
          if (upBuilder_ != null) {
            return upBuilder_.getMessageOrBuilder();
          } else {
            return up_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getUpFieldBuilder() {
          if (upBuilder_ == null) {
            upBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    up_,
                    getParentForChildren(),
                    isClean());
            up_ = null;
          }
          return upBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
      }
      
      static {
        defaultInstance = new UpdateParticleOrient(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
    }
    
    public interface UpdateParticleFallbackOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional .CMsgVector position = 2;
      boolean hasPosition();
      Networkbasetypes.CMsgVector getPosition();
      Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder();
    }
    public static final class UpdateParticleFallback extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleFallbackOrBuilder {
      // Use UpdateParticleFallback.newBuilder() to construct.
      private UpdateParticleFallback(Builder builder) {
        super(builder);
      }
      private UpdateParticleFallback(boolean noInit) {}
      
      private static final UpdateParticleFallback defaultInstance;
      public static UpdateParticleFallback getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleFallback getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional .CMsgVector position = 2;
      public static final int POSITION_FIELD_NUMBER = 2;
      private Networkbasetypes.CMsgVector position_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector getPosition() {
        return position_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder() {
        return position_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasPosition()) {
                  subBuilder.mergeFrom(getPosition());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPosition(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector position = 2;
        private Networkbasetypes.CMsgVector position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> positionBuilder_;
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public Networkbasetypes.CMsgVector getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        public Builder setPosition(Networkbasetypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setPosition(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergePosition(Networkbasetypes.CMsgVector value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              position_ =
                Networkbasetypes.CMsgVector.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
      }
      
      static {
        defaultInstance = new UpdateParticleFallback(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
    }
    
    public interface UpdateParticleOffsetOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional .CMsgVector origin_offset = 2;
      boolean hasOriginOffset();
      Networkbasetypes.CMsgVector getOriginOffset();
      Networkbasetypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder();
    }
    public static final class UpdateParticleOffset extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleOffsetOrBuilder {
      // Use UpdateParticleOffset.newBuilder() to construct.
      private UpdateParticleOffset(Builder builder) {
        super(builder);
      }
      private UpdateParticleOffset(boolean noInit) {}
      
      private static final UpdateParticleOffset defaultInstance;
      public static UpdateParticleOffset getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleOffset getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional .CMsgVector origin_offset = 2;
      public static final int ORIGIN_OFFSET_FIELD_NUMBER = 2;
      private Networkbasetypes.CMsgVector originOffset_;
      public boolean hasOriginOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Networkbasetypes.CMsgVector getOriginOffset() {
        return originOffset_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder() {
        return originOffset_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        originOffset_ = Networkbasetypes.CMsgVector.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, originOffset_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, originOffset_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getOriginOffsetFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (originOffsetBuilder_ == null) {
            originOffset_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            originOffsetBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (originOffsetBuilder_ == null) {
            result.originOffset_ = originOffset_;
          } else {
            result.originOffset_ = originOffsetBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasOriginOffset()) {
            mergeOriginOffset(other.getOriginOffset());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 18: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasOriginOffset()) {
                  subBuilder.mergeFrom(getOriginOffset());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setOriginOffset(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector origin_offset = 2;
        private Networkbasetypes.CMsgVector originOffset_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> originOffsetBuilder_;
        public boolean hasOriginOffset() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public Networkbasetypes.CMsgVector getOriginOffset() {
          if (originOffsetBuilder_ == null) {
            return originOffset_;
          } else {
            return originOffsetBuilder_.getMessage();
          }
        }
        public Builder setOriginOffset(Networkbasetypes.CMsgVector value) {
          if (originOffsetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            originOffset_ = value;
            onChanged();
          } else {
            originOffsetBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setOriginOffset(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (originOffsetBuilder_ == null) {
            originOffset_ = builderForValue.build();
            onChanged();
          } else {
            originOffsetBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergeOriginOffset(Networkbasetypes.CMsgVector value) {
          if (originOffsetBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                originOffset_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              originOffset_ =
                Networkbasetypes.CMsgVector.newBuilder(originOffset_).mergeFrom(value).buildPartial();
            } else {
              originOffset_ = value;
            }
            onChanged();
          } else {
            originOffsetBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearOriginOffset() {
          if (originOffsetBuilder_ == null) {
            originOffset_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            originOffsetBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getOriginOffsetBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getOriginOffsetFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getOriginOffsetOrBuilder() {
          if (originOffsetBuilder_ != null) {
            return originOffsetBuilder_.getMessageOrBuilder();
          } else {
            return originOffset_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getOriginOffsetFieldBuilder() {
          if (originOffsetBuilder_ == null) {
            originOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    originOffset_,
                    getParentForChildren(),
                    isClean());
            originOffset_ = null;
          }
          return originOffsetBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
      }
      
      static {
        defaultInstance = new UpdateParticleOffset(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
    }
    
    public interface UpdateParticleEntOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional int32 control_point = 1;
      boolean hasControlPoint();
      int getControlPoint();
      
      // optional int32 entity_handle = 2;
      boolean hasEntityHandle();
      int getEntityHandle();
      
      // optional int32 attach_type = 3;
      boolean hasAttachType();
      int getAttachType();
      
      // optional int32 attachment = 4;
      boolean hasAttachment();
      int getAttachment();
      
      // optional .CMsgVector fallback_position = 5;
      boolean hasFallbackPosition();
      Networkbasetypes.CMsgVector getFallbackPosition();
      Networkbasetypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder();
      
      // optional bool include_wearables = 6;
      boolean hasIncludeWearables();
      boolean getIncludeWearables();
    }
    public static final class UpdateParticleEnt extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleEntOrBuilder {
      // Use UpdateParticleEnt.newBuilder() to construct.
      private UpdateParticleEnt(Builder builder) {
        super(builder);
      }
      private UpdateParticleEnt(boolean noInit) {}
      
      private static final UpdateParticleEnt defaultInstance;
      public static UpdateParticleEnt getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleEnt getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional int32 control_point = 1;
      public static final int CONTROL_POINT_FIELD_NUMBER = 1;
      private int controlPoint_;
      public boolean hasControlPoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getControlPoint() {
        return controlPoint_;
      }
      
      // optional int32 entity_handle = 2;
      public static final int ENTITY_HANDLE_FIELD_NUMBER = 2;
      private int entityHandle_;
      public boolean hasEntityHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEntityHandle() {
        return entityHandle_;
      }
      
      // optional int32 attach_type = 3;
      public static final int ATTACH_TYPE_FIELD_NUMBER = 3;
      private int attachType_;
      public boolean hasAttachType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAttachType() {
        return attachType_;
      }
      
      // optional int32 attachment = 4;
      public static final int ATTACHMENT_FIELD_NUMBER = 4;
      private int attachment_;
      public boolean hasAttachment() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getAttachment() {
        return attachment_;
      }
      
      // optional .CMsgVector fallback_position = 5;
      public static final int FALLBACK_POSITION_FIELD_NUMBER = 5;
      private Networkbasetypes.CMsgVector fallbackPosition_;
      public boolean hasFallbackPosition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public Networkbasetypes.CMsgVector getFallbackPosition() {
        return fallbackPosition_;
      }
      public Networkbasetypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder() {
        return fallbackPosition_;
      }
      
      // optional bool include_wearables = 6;
      public static final int INCLUDE_WEARABLES_FIELD_NUMBER = 6;
      private boolean includeWearables_;
      public boolean hasIncludeWearables() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getIncludeWearables() {
        return includeWearables_;
      }
      
      private void initFields() {
        controlPoint_ = 0;
        entityHandle_ = 0;
        attachType_ = 0;
        attachment_ = 0;
        fallbackPosition_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        includeWearables_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, entityHandle_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, attachType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, attachment_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, fallbackPosition_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, includeWearables_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, controlPoint_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, entityHandle_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, attachType_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, attachment_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, fallbackPosition_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, includeWearables_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getFallbackPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          controlPoint_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          entityHandle_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          attachType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          attachment_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = Networkbasetypes.CMsgVector.getDefaultInstance();
          } else {
            fallbackPositionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          includeWearables_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.controlPoint_ = controlPoint_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.entityHandle_ = entityHandle_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.attachType_ = attachType_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.attachment_ = attachment_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (fallbackPositionBuilder_ == null) {
            result.fallbackPosition_ = fallbackPosition_;
          } else {
            result.fallbackPosition_ = fallbackPositionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.includeWearables_ = includeWearables_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance()) return this;
          if (other.hasControlPoint()) {
            setControlPoint(other.getControlPoint());
          }
          if (other.hasEntityHandle()) {
            setEntityHandle(other.getEntityHandle());
          }
          if (other.hasAttachType()) {
            setAttachType(other.getAttachType());
          }
          if (other.hasAttachment()) {
            setAttachment(other.getAttachment());
          }
          if (other.hasFallbackPosition()) {
            mergeFallbackPosition(other.getFallbackPosition());
          }
          if (other.hasIncludeWearables()) {
            setIncludeWearables(other.getIncludeWearables());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                controlPoint_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                entityHandle_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                attachType_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                attachment_ = input.readInt32();
                break;
              }
              case 42: {
                Networkbasetypes.CMsgVector.Builder subBuilder = Networkbasetypes.CMsgVector.newBuilder();
                if (hasFallbackPosition()) {
                  subBuilder.mergeFrom(getFallbackPosition());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setFallbackPosition(subBuilder.buildPartial());
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                includeWearables_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 control_point = 1;
        private int controlPoint_ ;
        public boolean hasControlPoint() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getControlPoint() {
          return controlPoint_;
        }
        public Builder setControlPoint(int value) {
          bitField0_ |= 0x00000001;
          controlPoint_ = value;
          onChanged();
          return this;
        }
        public Builder clearControlPoint() {
          bitField0_ = (bitField0_ & ~0x00000001);
          controlPoint_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 entity_handle = 2;
        private int entityHandle_ ;
        public boolean hasEntityHandle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getEntityHandle() {
          return entityHandle_;
        }
        public Builder setEntityHandle(int value) {
          bitField0_ |= 0x00000002;
          entityHandle_ = value;
          onChanged();
          return this;
        }
        public Builder clearEntityHandle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          entityHandle_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 attach_type = 3;
        private int attachType_ ;
        public boolean hasAttachType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getAttachType() {
          return attachType_;
        }
        public Builder setAttachType(int value) {
          bitField0_ |= 0x00000004;
          attachType_ = value;
          onChanged();
          return this;
        }
        public Builder clearAttachType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          attachType_ = 0;
          onChanged();
          return this;
        }
        
        // optional int32 attachment = 4;
        private int attachment_ ;
        public boolean hasAttachment() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getAttachment() {
          return attachment_;
        }
        public Builder setAttachment(int value) {
          bitField0_ |= 0x00000008;
          attachment_ = value;
          onChanged();
          return this;
        }
        public Builder clearAttachment() {
          bitField0_ = (bitField0_ & ~0x00000008);
          attachment_ = 0;
          onChanged();
          return this;
        }
        
        // optional .CMsgVector fallback_position = 5;
        private Networkbasetypes.CMsgVector fallbackPosition_ = Networkbasetypes.CMsgVector.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> fallbackPositionBuilder_;
        public boolean hasFallbackPosition() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public Networkbasetypes.CMsgVector getFallbackPosition() {
          if (fallbackPositionBuilder_ == null) {
            return fallbackPosition_;
          } else {
            return fallbackPositionBuilder_.getMessage();
          }
        }
        public Builder setFallbackPosition(Networkbasetypes.CMsgVector value) {
          if (fallbackPositionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fallbackPosition_ = value;
            onChanged();
          } else {
            fallbackPositionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder setFallbackPosition(
            Networkbasetypes.CMsgVector.Builder builderForValue) {
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = builderForValue.build();
            onChanged();
          } else {
            fallbackPositionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder mergeFallbackPosition(Networkbasetypes.CMsgVector value) {
          if (fallbackPositionBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                fallbackPosition_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
              fallbackPosition_ =
                Networkbasetypes.CMsgVector.newBuilder(fallbackPosition_).mergeFrom(value).buildPartial();
            } else {
              fallbackPosition_ = value;
            }
            onChanged();
          } else {
            fallbackPositionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder clearFallbackPosition() {
          if (fallbackPositionBuilder_ == null) {
            fallbackPosition_ = Networkbasetypes.CMsgVector.getDefaultInstance();
            onChanged();
          } else {
            fallbackPositionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        public Networkbasetypes.CMsgVector.Builder getFallbackPositionBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getFallbackPositionFieldBuilder().getBuilder();
        }
        public Networkbasetypes.CMsgVectorOrBuilder getFallbackPositionOrBuilder() {
          if (fallbackPositionBuilder_ != null) {
            return fallbackPositionBuilder_.getMessageOrBuilder();
          } else {
            return fallbackPosition_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
            getFallbackPositionFieldBuilder() {
          if (fallbackPositionBuilder_ == null) {
            fallbackPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                    fallbackPosition_,
                    getParentForChildren(),
                    isClean());
            fallbackPosition_ = null;
          }
          return fallbackPositionBuilder_;
        }
        
        // optional bool include_wearables = 6;
        private boolean includeWearables_ ;
        public boolean hasIncludeWearables() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public boolean getIncludeWearables() {
          return includeWearables_;
        }
        public Builder setIncludeWearables(boolean value) {
          bitField0_ |= 0x00000020;
          includeWearables_ = value;
          onChanged();
          return this;
        }
        public Builder clearIncludeWearables() {
          bitField0_ = (bitField0_ & ~0x00000020);
          includeWearables_ = false;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
      }
      
      static {
        defaultInstance = new UpdateParticleEnt(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
    }
    
    public interface UpdateParticleSetFrozenOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional bool set_frozen = 1;
      boolean hasSetFrozen();
      boolean getSetFrozen();
    }
    public static final class UpdateParticleSetFrozen extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleSetFrozenOrBuilder {
      // Use UpdateParticleSetFrozen.newBuilder() to construct.
      private UpdateParticleSetFrozen(Builder builder) {
        super(builder);
      }
      private UpdateParticleSetFrozen(boolean noInit) {}
      
      private static final UpdateParticleSetFrozen defaultInstance;
      public static UpdateParticleSetFrozen getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleSetFrozen getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional bool set_frozen = 1;
      public static final int SET_FROZEN_FIELD_NUMBER = 1;
      private boolean setFrozen_;
      public boolean hasSetFrozen() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getSetFrozen() {
        return setFrozen_;
      }
      
      private void initFields() {
        setFrozen_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, setFrozen_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, setFrozen_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          setFrozen_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.setFrozen_ = setFrozen_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance()) return this;
          if (other.hasSetFrozen()) {
            setSetFrozen(other.getSetFrozen());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                setFrozen_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional bool set_frozen = 1;
        private boolean setFrozen_ ;
        public boolean hasSetFrozen() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public boolean getSetFrozen() {
          return setFrozen_;
        }
        public Builder setSetFrozen(boolean value) {
          bitField0_ |= 0x00000001;
          setFrozen_ = value;
          onChanged();
          return this;
        }
        public Builder clearSetFrozen() {
          bitField0_ = (bitField0_ & ~0x00000001);
          setFrozen_ = false;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
      }
      
      static {
        defaultInstance = new UpdateParticleSetFrozen(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
    }
    
    public interface UpdateParticleShouldDrawOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional bool should_draw = 1;
      boolean hasShouldDraw();
      boolean getShouldDraw();
    }
    public static final class UpdateParticleShouldDraw extends
        com.google.protobuf.GeneratedMessage
        implements UpdateParticleShouldDrawOrBuilder {
      // Use UpdateParticleShouldDraw.newBuilder() to construct.
      private UpdateParticleShouldDraw(Builder builder) {
        super(builder);
      }
      private UpdateParticleShouldDraw(boolean noInit) {}
      
      private static final UpdateParticleShouldDraw defaultInstance;
      public static UpdateParticleShouldDraw getDefaultInstance() {
        return defaultInstance;
      }
      
      public UpdateParticleShouldDraw getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional bool should_draw = 1;
      public static final int SHOULD_DRAW_FIELD_NUMBER = 1;
      private boolean shouldDraw_;
      public boolean hasShouldDraw() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getShouldDraw() {
        return shouldDraw_;
      }
      
      private void initFields() {
        shouldDraw_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, shouldDraw_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, shouldDraw_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable;
        }
        
        // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          shouldDraw_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDescriptor();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getDefaultInstanceForType() {
          return DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw build() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw buildPartial() {
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw result = new DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shouldDraw_ = shouldDraw_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw) {
            return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw other) {
          if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance()) return this;
          if (other.hasShouldDraw()) {
            setShouldDraw(other.getShouldDraw());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                shouldDraw_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional bool should_draw = 1;
        private boolean shouldDraw_ ;
        public boolean hasShouldDraw() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public boolean getShouldDraw() {
          return shouldDraw_;
        }
        public Builder setShouldDraw(boolean value) {
          bitField0_ |= 0x00000001;
          shouldDraw_ = value;
          onChanged();
          return this;
        }
        public Builder clearShouldDraw() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shouldDraw_ = false;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
      }
      
      static {
        defaultInstance = new UpdateParticleShouldDraw(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
    }
    
    private int bitField0_;
    // required .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];
    public static final int TYPE_FIELD_NUMBER = 1;
    private DotaUsermessages.DOTA_PARTICLE_MESSAGE type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaUsermessages.DOTA_PARTICLE_MESSAGE getType() {
      return type_;
    }
    
    // required uint32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getIndex() {
      return index_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
    public static final int RELEASE_PARTICLE_INDEX_FIELD_NUMBER = 3;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex releaseParticleIndex_;
    public boolean hasReleaseParticleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex() {
      return releaseParticleIndex_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder() {
      return releaseParticleIndex_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;
    public static final int CREATE_PARTICLE_FIELD_NUMBER = 4;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle createParticle_;
    public boolean hasCreateParticle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle() {
      return createParticle_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder() {
      return createParticle_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
    public static final int DESTROY_PARTICLE_FIELD_NUMBER = 5;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle destroyParticle_;
    public boolean hasDestroyParticle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle() {
      return destroyParticle_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder() {
      return destroyParticle_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
    public static final int DESTROY_PARTICLE_INVOLVING_FIELD_NUMBER = 6;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroyParticleInvolving_;
    public boolean hasDestroyParticleInvolving() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving() {
      return destroyParticleInvolving_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder() {
      return destroyParticleInvolving_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;
    public static final int UPDATE_PARTICLE_FIELD_NUMBER = 7;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle updateParticle_;
    public boolean hasUpdateParticle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle() {
      return updateParticle_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder() {
      return updateParticle_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
    public static final int UPDATE_PARTICLE_FWD_FIELD_NUMBER = 8;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd updateParticleFwd_;
    public boolean hasUpdateParticleFwd() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd() {
      return updateParticleFwd_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder() {
      return updateParticleFwd_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
    public static final int UPDATE_PARTICLE_ORIENT_FIELD_NUMBER = 9;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient updateParticleOrient_;
    public boolean hasUpdateParticleOrient() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient() {
      return updateParticleOrient_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder() {
      return updateParticleOrient_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
    public static final int UPDATE_PARTICLE_FALLBACK_FIELD_NUMBER = 10;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback updateParticleFallback_;
    public boolean hasUpdateParticleFallback() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback() {
      return updateParticleFallback_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder() {
      return updateParticleFallback_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
    public static final int UPDATE_PARTICLE_OFFSET_FIELD_NUMBER = 11;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset updateParticleOffset_;
    public boolean hasUpdateParticleOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset() {
      return updateParticleOffset_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder() {
      return updateParticleOffset_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
    public static final int UPDATE_PARTICLE_ENT_FIELD_NUMBER = 12;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt updateParticleEnt_;
    public boolean hasUpdateParticleEnt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt() {
      return updateParticleEnt_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder() {
      return updateParticleEnt_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    public static final int UPDATE_PARTICLE_SHOULD_DRAW_FIELD_NUMBER = 14;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw updateParticleShouldDraw_;
    public boolean hasUpdateParticleShouldDraw() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw() {
      return updateParticleShouldDraw_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder() {
      return updateParticleShouldDraw_;
    }
    
    // optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
    public static final int UPDATE_PARTICLE_SET_FROZEN_FIELD_NUMBER = 15;
    private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen updateParticleSetFrozen_;
    public boolean hasUpdateParticleSetFrozen() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen() {
      return updateParticleSetFrozen_;
    }
    public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder() {
      return updateParticleSetFrozen_;
    }
    
    private void initFields() {
      type_ = DotaUsermessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
      index_ = 0;
      releaseParticleIndex_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
      createParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
      destroyParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
      destroyParticleInvolving_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
      updateParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
      updateParticleFwd_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
      updateParticleOrient_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
      updateParticleFallback_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
      updateParticleOffset_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
      updateParticleEnt_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
      updateParticleShouldDraw_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
      updateParticleSetFrozen_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, releaseParticleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, createParticle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, destroyParticle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, destroyParticleInvolving_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, updateParticle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, updateParticleFwd_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, updateParticleOrient_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, updateParticleFallback_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, updateParticleOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, updateParticleEnt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(14, updateParticleShouldDraw_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(15, updateParticleSetFrozen_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, releaseParticleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, createParticle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, destroyParticle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, destroyParticleInvolving_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, updateParticle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, updateParticleFwd_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, updateParticleOrient_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, updateParticleFallback_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, updateParticleOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, updateParticleEnt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, updateParticleShouldDraw_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, updateParticleSetFrozen_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ParticleManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ParticleManager prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ParticleManagerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ParticleManager.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReleaseParticleIndexFieldBuilder();
          getCreateParticleFieldBuilder();
          getDestroyParticleFieldBuilder();
          getDestroyParticleInvolvingFieldBuilder();
          getUpdateParticleFieldBuilder();
          getUpdateParticleFwdFieldBuilder();
          getUpdateParticleOrientFieldBuilder();
          getUpdateParticleFallbackFieldBuilder();
          getUpdateParticleOffsetFieldBuilder();
          getUpdateParticleEntFieldBuilder();
          getUpdateParticleShouldDrawFieldBuilder();
          getUpdateParticleSetFrozenFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = DotaUsermessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
        } else {
          releaseParticleIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (createParticleBuilder_ == null) {
          createParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
        } else {
          createParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
        } else {
          destroyParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
        } else {
          destroyParticleInvolvingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (updateParticleBuilder_ == null) {
          updateParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
        } else {
          updateParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
        } else {
          updateParticleFwdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
        } else {
          updateParticleOrientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
        } else {
          updateParticleFallbackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
        } else {
          updateParticleOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
        } else {
          updateParticleEntBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
        } else {
          updateParticleShouldDrawBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
        } else {
          updateParticleSetFrozenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ParticleManager.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ParticleManager getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ParticleManager.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ParticleManager build() {
        DotaUsermessages.CDOTAUserMsg_ParticleManager result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ParticleManager buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ParticleManager result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ParticleManager buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ParticleManager result = new DotaUsermessages.CDOTAUserMsg_ParticleManager(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (releaseParticleIndexBuilder_ == null) {
          result.releaseParticleIndex_ = releaseParticleIndex_;
        } else {
          result.releaseParticleIndex_ = releaseParticleIndexBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (createParticleBuilder_ == null) {
          result.createParticle_ = createParticle_;
        } else {
          result.createParticle_ = createParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (destroyParticleBuilder_ == null) {
          result.destroyParticle_ = destroyParticle_;
        } else {
          result.destroyParticle_ = destroyParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (destroyParticleInvolvingBuilder_ == null) {
          result.destroyParticleInvolving_ = destroyParticleInvolving_;
        } else {
          result.destroyParticleInvolving_ = destroyParticleInvolvingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (updateParticleBuilder_ == null) {
          result.updateParticle_ = updateParticle_;
        } else {
          result.updateParticle_ = updateParticleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (updateParticleFwdBuilder_ == null) {
          result.updateParticleFwd_ = updateParticleFwd_;
        } else {
          result.updateParticleFwd_ = updateParticleFwdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (updateParticleOrientBuilder_ == null) {
          result.updateParticleOrient_ = updateParticleOrient_;
        } else {
          result.updateParticleOrient_ = updateParticleOrientBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (updateParticleFallbackBuilder_ == null) {
          result.updateParticleFallback_ = updateParticleFallback_;
        } else {
          result.updateParticleFallback_ = updateParticleFallbackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (updateParticleOffsetBuilder_ == null) {
          result.updateParticleOffset_ = updateParticleOffset_;
        } else {
          result.updateParticleOffset_ = updateParticleOffsetBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (updateParticleEntBuilder_ == null) {
          result.updateParticleEnt_ = updateParticleEnt_;
        } else {
          result.updateParticleEnt_ = updateParticleEntBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (updateParticleShouldDrawBuilder_ == null) {
          result.updateParticleShouldDraw_ = updateParticleShouldDraw_;
        } else {
          result.updateParticleShouldDraw_ = updateParticleShouldDrawBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (updateParticleSetFrozenBuilder_ == null) {
          result.updateParticleSetFrozen_ = updateParticleSetFrozen_;
        } else {
          result.updateParticleSetFrozen_ = updateParticleSetFrozenBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ParticleManager) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ParticleManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ParticleManager other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ParticleManager.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasReleaseParticleIndex()) {
          mergeReleaseParticleIndex(other.getReleaseParticleIndex());
        }
        if (other.hasCreateParticle()) {
          mergeCreateParticle(other.getCreateParticle());
        }
        if (other.hasDestroyParticle()) {
          mergeDestroyParticle(other.getDestroyParticle());
        }
        if (other.hasDestroyParticleInvolving()) {
          mergeDestroyParticleInvolving(other.getDestroyParticleInvolving());
        }
        if (other.hasUpdateParticle()) {
          mergeUpdateParticle(other.getUpdateParticle());
        }
        if (other.hasUpdateParticleFwd()) {
          mergeUpdateParticleFwd(other.getUpdateParticleFwd());
        }
        if (other.hasUpdateParticleOrient()) {
          mergeUpdateParticleOrient(other.getUpdateParticleOrient());
        }
        if (other.hasUpdateParticleFallback()) {
          mergeUpdateParticleFallback(other.getUpdateParticleFallback());
        }
        if (other.hasUpdateParticleOffset()) {
          mergeUpdateParticleOffset(other.getUpdateParticleOffset());
        }
        if (other.hasUpdateParticleEnt()) {
          mergeUpdateParticleEnt(other.getUpdateParticleEnt());
        }
        if (other.hasUpdateParticleShouldDraw()) {
          mergeUpdateParticleShouldDraw(other.getUpdateParticleShouldDraw());
        }
        if (other.hasUpdateParticleSetFrozen()) {
          mergeUpdateParticleSetFrozen(other.getUpdateParticleSetFrozen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasIndex()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaUsermessages.DOTA_PARTICLE_MESSAGE value = DotaUsermessages.DOTA_PARTICLE_MESSAGE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt32();
              break;
            }
            case 26: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.newBuilder();
              if (hasReleaseParticleIndex()) {
                subBuilder.mergeFrom(getReleaseParticleIndex());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setReleaseParticleIndex(subBuilder.buildPartial());
              break;
            }
            case 34: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.newBuilder();
              if (hasCreateParticle()) {
                subBuilder.mergeFrom(getCreateParticle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCreateParticle(subBuilder.buildPartial());
              break;
            }
            case 42: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.newBuilder();
              if (hasDestroyParticle()) {
                subBuilder.mergeFrom(getDestroyParticle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDestroyParticle(subBuilder.buildPartial());
              break;
            }
            case 50: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.newBuilder();
              if (hasDestroyParticleInvolving()) {
                subBuilder.mergeFrom(getDestroyParticleInvolving());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDestroyParticleInvolving(subBuilder.buildPartial());
              break;
            }
            case 58: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.newBuilder();
              if (hasUpdateParticle()) {
                subBuilder.mergeFrom(getUpdateParticle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticle(subBuilder.buildPartial());
              break;
            }
            case 66: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.newBuilder();
              if (hasUpdateParticleFwd()) {
                subBuilder.mergeFrom(getUpdateParticleFwd());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleFwd(subBuilder.buildPartial());
              break;
            }
            case 74: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.newBuilder();
              if (hasUpdateParticleOrient()) {
                subBuilder.mergeFrom(getUpdateParticleOrient());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleOrient(subBuilder.buildPartial());
              break;
            }
            case 82: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.newBuilder();
              if (hasUpdateParticleFallback()) {
                subBuilder.mergeFrom(getUpdateParticleFallback());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleFallback(subBuilder.buildPartial());
              break;
            }
            case 90: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.newBuilder();
              if (hasUpdateParticleOffset()) {
                subBuilder.mergeFrom(getUpdateParticleOffset());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleOffset(subBuilder.buildPartial());
              break;
            }
            case 98: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.newBuilder();
              if (hasUpdateParticleEnt()) {
                subBuilder.mergeFrom(getUpdateParticleEnt());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleEnt(subBuilder.buildPartial());
              break;
            }
            case 114: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.newBuilder();
              if (hasUpdateParticleShouldDraw()) {
                subBuilder.mergeFrom(getUpdateParticleShouldDraw());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleShouldDraw(subBuilder.buildPartial());
              break;
            }
            case 122: {
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder subBuilder = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.newBuilder();
              if (hasUpdateParticleSetFrozen()) {
                subBuilder.mergeFrom(getUpdateParticleSetFrozen());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdateParticleSetFrozen(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];
      private DotaUsermessages.DOTA_PARTICLE_MESSAGE type_ = DotaUsermessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaUsermessages.DOTA_PARTICLE_MESSAGE getType() {
        return type_;
      }
      public Builder setType(DotaUsermessages.DOTA_PARTICLE_MESSAGE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = DotaUsermessages.DOTA_PARTICLE_MESSAGE.DOTA_PARTICLE_MANAGER_EVENT_CREATE;
        onChanged();
        return this;
      }
      
      // required uint32 index = 2;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex releaseParticleIndex_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder> releaseParticleIndexBuilder_;
      public boolean hasReleaseParticleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex getReleaseParticleIndex() {
        if (releaseParticleIndexBuilder_ == null) {
          return releaseParticleIndex_;
        } else {
          return releaseParticleIndexBuilder_.getMessage();
        }
      }
      public Builder setReleaseParticleIndex(DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex value) {
        if (releaseParticleIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          releaseParticleIndex_ = value;
          onChanged();
        } else {
          releaseParticleIndexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setReleaseParticleIndex(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder builderForValue) {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = builderForValue.build();
          onChanged();
        } else {
          releaseParticleIndexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeReleaseParticleIndex(DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex value) {
        if (releaseParticleIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              releaseParticleIndex_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance()) {
            releaseParticleIndex_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.newBuilder(releaseParticleIndex_).mergeFrom(value).buildPartial();
          } else {
            releaseParticleIndex_ = value;
          }
          onChanged();
        } else {
          releaseParticleIndexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearReleaseParticleIndex() {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndex_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.getDefaultInstance();
          onChanged();
        } else {
          releaseParticleIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder getReleaseParticleIndexBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReleaseParticleIndexFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder getReleaseParticleIndexOrBuilder() {
        if (releaseParticleIndexBuilder_ != null) {
          return releaseParticleIndexBuilder_.getMessageOrBuilder();
        } else {
          return releaseParticleIndex_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder> 
          getReleaseParticleIndexFieldBuilder() {
        if (releaseParticleIndexBuilder_ == null) {
          releaseParticleIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndexOrBuilder>(
                  releaseParticleIndex_,
                  getParentForChildren(),
                  isClean());
          releaseParticleIndex_ = null;
        }
        return releaseParticleIndexBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle createParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder> createParticleBuilder_;
      public boolean hasCreateParticle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle getCreateParticle() {
        if (createParticleBuilder_ == null) {
          return createParticle_;
        } else {
          return createParticleBuilder_.getMessage();
        }
      }
      public Builder setCreateParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle value) {
        if (createParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          createParticle_ = value;
          onChanged();
        } else {
          createParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setCreateParticle(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder builderForValue) {
        if (createParticleBuilder_ == null) {
          createParticle_ = builderForValue.build();
          onChanged();
        } else {
          createParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeCreateParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle value) {
        if (createParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              createParticle_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance()) {
            createParticle_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.newBuilder(createParticle_).mergeFrom(value).buildPartial();
          } else {
            createParticle_ = value;
          }
          onChanged();
        } else {
          createParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearCreateParticle() {
        if (createParticleBuilder_ == null) {
          createParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.getDefaultInstance();
          onChanged();
        } else {
          createParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder getCreateParticleBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCreateParticleFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder getCreateParticleOrBuilder() {
        if (createParticleBuilder_ != null) {
          return createParticleBuilder_.getMessageOrBuilder();
        } else {
          return createParticle_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder> 
          getCreateParticleFieldBuilder() {
        if (createParticleBuilder_ == null) {
          createParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticleOrBuilder>(
                  createParticle_,
                  getParentForChildren(),
                  isClean());
          createParticle_ = null;
        }
        return createParticleBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle destroyParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder> destroyParticleBuilder_;
      public boolean hasDestroyParticle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle getDestroyParticle() {
        if (destroyParticleBuilder_ == null) {
          return destroyParticle_;
        } else {
          return destroyParticleBuilder_.getMessage();
        }
      }
      public Builder setDestroyParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle value) {
        if (destroyParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destroyParticle_ = value;
          onChanged();
        } else {
          destroyParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setDestroyParticle(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder builderForValue) {
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = builderForValue.build();
          onChanged();
        } else {
          destroyParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeDestroyParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle value) {
        if (destroyParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              destroyParticle_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance()) {
            destroyParticle_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.newBuilder(destroyParticle_).mergeFrom(value).buildPartial();
          } else {
            destroyParticle_ = value;
          }
          onChanged();
        } else {
          destroyParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearDestroyParticle() {
        if (destroyParticleBuilder_ == null) {
          destroyParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.getDefaultInstance();
          onChanged();
        } else {
          destroyParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder getDestroyParticleBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDestroyParticleFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder getDestroyParticleOrBuilder() {
        if (destroyParticleBuilder_ != null) {
          return destroyParticleBuilder_.getMessageOrBuilder();
        } else {
          return destroyParticle_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder> 
          getDestroyParticleFieldBuilder() {
        if (destroyParticleBuilder_ == null) {
          destroyParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleOrBuilder>(
                  destroyParticle_,
                  getParentForChildren(),
                  isClean());
          destroyParticle_ = null;
        }
        return destroyParticleBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroyParticleInvolving_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder> destroyParticleInvolvingBuilder_;
      public boolean hasDestroyParticleInvolving() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving getDestroyParticleInvolving() {
        if (destroyParticleInvolvingBuilder_ == null) {
          return destroyParticleInvolving_;
        } else {
          return destroyParticleInvolvingBuilder_.getMessage();
        }
      }
      public Builder setDestroyParticleInvolving(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving value) {
        if (destroyParticleInvolvingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destroyParticleInvolving_ = value;
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setDestroyParticleInvolving(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder builderForValue) {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = builderForValue.build();
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeDestroyParticleInvolving(DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving value) {
        if (destroyParticleInvolvingBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              destroyParticleInvolving_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance()) {
            destroyParticleInvolving_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.newBuilder(destroyParticleInvolving_).mergeFrom(value).buildPartial();
          } else {
            destroyParticleInvolving_ = value;
          }
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearDestroyParticleInvolving() {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolving_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.getDefaultInstance();
          onChanged();
        } else {
          destroyParticleInvolvingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder getDestroyParticleInvolvingBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDestroyParticleInvolvingFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder getDestroyParticleInvolvingOrBuilder() {
        if (destroyParticleInvolvingBuilder_ != null) {
          return destroyParticleInvolvingBuilder_.getMessageOrBuilder();
        } else {
          return destroyParticleInvolving_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder> 
          getDestroyParticleInvolvingFieldBuilder() {
        if (destroyParticleInvolvingBuilder_ == null) {
          destroyParticleInvolvingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolvingOrBuilder>(
                  destroyParticleInvolving_,
                  getParentForChildren(),
                  isClean());
          destroyParticleInvolving_ = null;
        }
        return destroyParticleInvolvingBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle updateParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder> updateParticleBuilder_;
      public boolean hasUpdateParticle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle getUpdateParticle() {
        if (updateParticleBuilder_ == null) {
          return updateParticle_;
        } else {
          return updateParticleBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle value) {
        if (updateParticleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticle_ = value;
          onChanged();
        } else {
          updateParticleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setUpdateParticle(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder builderForValue) {
        if (updateParticleBuilder_ == null) {
          updateParticle_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeUpdateParticle(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle value) {
        if (updateParticleBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              updateParticle_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance()) {
            updateParticle_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.newBuilder(updateParticle_).mergeFrom(value).buildPartial();
          } else {
            updateParticle_ = value;
          }
          onChanged();
        } else {
          updateParticleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearUpdateParticle() {
        if (updateParticleBuilder_ == null) {
          updateParticle_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.getDefaultInstance();
          onChanged();
        } else {
          updateParticleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder getUpdateParticleBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getUpdateParticleFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder getUpdateParticleOrBuilder() {
        if (updateParticleBuilder_ != null) {
          return updateParticleBuilder_.getMessageOrBuilder();
        } else {
          return updateParticle_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder> 
          getUpdateParticleFieldBuilder() {
        if (updateParticleBuilder_ == null) {
          updateParticleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrBuilder>(
                  updateParticle_,
                  getParentForChildren(),
                  isClean());
          updateParticle_ = null;
        }
        return updateParticleBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd updateParticleFwd_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder> updateParticleFwdBuilder_;
      public boolean hasUpdateParticleFwd() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd getUpdateParticleFwd() {
        if (updateParticleFwdBuilder_ == null) {
          return updateParticleFwd_;
        } else {
          return updateParticleFwdBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleFwd(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd value) {
        if (updateParticleFwdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleFwd_ = value;
          onChanged();
        } else {
          updateParticleFwdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setUpdateParticleFwd(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder builderForValue) {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleFwdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergeUpdateParticleFwd(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd value) {
        if (updateParticleFwdBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              updateParticleFwd_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance()) {
            updateParticleFwd_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.newBuilder(updateParticleFwd_).mergeFrom(value).buildPartial();
          } else {
            updateParticleFwd_ = value;
          }
          onChanged();
        } else {
          updateParticleFwdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearUpdateParticleFwd() {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwd_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.getDefaultInstance();
          onChanged();
        } else {
          updateParticleFwdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder getUpdateParticleFwdBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getUpdateParticleFwdFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder getUpdateParticleFwdOrBuilder() {
        if (updateParticleFwdBuilder_ != null) {
          return updateParticleFwdBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleFwd_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder> 
          getUpdateParticleFwdFieldBuilder() {
        if (updateParticleFwdBuilder_ == null) {
          updateParticleFwdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwdOrBuilder>(
                  updateParticleFwd_,
                  getParentForChildren(),
                  isClean());
          updateParticleFwd_ = null;
        }
        return updateParticleFwdBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient updateParticleOrient_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder> updateParticleOrientBuilder_;
      public boolean hasUpdateParticleOrient() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient getUpdateParticleOrient() {
        if (updateParticleOrientBuilder_ == null) {
          return updateParticleOrient_;
        } else {
          return updateParticleOrientBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleOrient(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient value) {
        if (updateParticleOrientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleOrient_ = value;
          onChanged();
        } else {
          updateParticleOrientBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setUpdateParticleOrient(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder builderForValue) {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleOrientBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeUpdateParticleOrient(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient value) {
        if (updateParticleOrientBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              updateParticleOrient_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance()) {
            updateParticleOrient_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.newBuilder(updateParticleOrient_).mergeFrom(value).buildPartial();
          } else {
            updateParticleOrient_ = value;
          }
          onChanged();
        } else {
          updateParticleOrientBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearUpdateParticleOrient() {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrient_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.getDefaultInstance();
          onChanged();
        } else {
          updateParticleOrientBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder getUpdateParticleOrientBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getUpdateParticleOrientFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder getUpdateParticleOrientOrBuilder() {
        if (updateParticleOrientBuilder_ != null) {
          return updateParticleOrientBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleOrient_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder> 
          getUpdateParticleOrientFieldBuilder() {
        if (updateParticleOrientBuilder_ == null) {
          updateParticleOrientBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrientOrBuilder>(
                  updateParticleOrient_,
                  getParentForChildren(),
                  isClean());
          updateParticleOrient_ = null;
        }
        return updateParticleOrientBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback updateParticleFallback_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder> updateParticleFallbackBuilder_;
      public boolean hasUpdateParticleFallback() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback getUpdateParticleFallback() {
        if (updateParticleFallbackBuilder_ == null) {
          return updateParticleFallback_;
        } else {
          return updateParticleFallbackBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleFallback(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback value) {
        if (updateParticleFallbackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleFallback_ = value;
          onChanged();
        } else {
          updateParticleFallbackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setUpdateParticleFallback(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder builderForValue) {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleFallbackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeUpdateParticleFallback(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback value) {
        if (updateParticleFallbackBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              updateParticleFallback_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance()) {
            updateParticleFallback_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.newBuilder(updateParticleFallback_).mergeFrom(value).buildPartial();
          } else {
            updateParticleFallback_ = value;
          }
          onChanged();
        } else {
          updateParticleFallbackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearUpdateParticleFallback() {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallback_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.getDefaultInstance();
          onChanged();
        } else {
          updateParticleFallbackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder getUpdateParticleFallbackBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getUpdateParticleFallbackFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder getUpdateParticleFallbackOrBuilder() {
        if (updateParticleFallbackBuilder_ != null) {
          return updateParticleFallbackBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleFallback_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder> 
          getUpdateParticleFallbackFieldBuilder() {
        if (updateParticleFallbackBuilder_ == null) {
          updateParticleFallbackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallbackOrBuilder>(
                  updateParticleFallback_,
                  getParentForChildren(),
                  isClean());
          updateParticleFallback_ = null;
        }
        return updateParticleFallbackBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset updateParticleOffset_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder> updateParticleOffsetBuilder_;
      public boolean hasUpdateParticleOffset() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset getUpdateParticleOffset() {
        if (updateParticleOffsetBuilder_ == null) {
          return updateParticleOffset_;
        } else {
          return updateParticleOffsetBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleOffset(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset value) {
        if (updateParticleOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleOffset_ = value;
          onChanged();
        } else {
          updateParticleOffsetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder setUpdateParticleOffset(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder builderForValue) {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleOffsetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder mergeUpdateParticleOffset(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset value) {
        if (updateParticleOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              updateParticleOffset_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance()) {
            updateParticleOffset_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.newBuilder(updateParticleOffset_).mergeFrom(value).buildPartial();
          } else {
            updateParticleOffset_ = value;
          }
          onChanged();
        } else {
          updateParticleOffsetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder clearUpdateParticleOffset() {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffset_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.getDefaultInstance();
          onChanged();
        } else {
          updateParticleOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder getUpdateParticleOffsetBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getUpdateParticleOffsetFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder getUpdateParticleOffsetOrBuilder() {
        if (updateParticleOffsetBuilder_ != null) {
          return updateParticleOffsetBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleOffset_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder> 
          getUpdateParticleOffsetFieldBuilder() {
        if (updateParticleOffsetBuilder_ == null) {
          updateParticleOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffsetOrBuilder>(
                  updateParticleOffset_,
                  getParentForChildren(),
                  isClean());
          updateParticleOffset_ = null;
        }
        return updateParticleOffsetBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt updateParticleEnt_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder> updateParticleEntBuilder_;
      public boolean hasUpdateParticleEnt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt getUpdateParticleEnt() {
        if (updateParticleEntBuilder_ == null) {
          return updateParticleEnt_;
        } else {
          return updateParticleEntBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleEnt(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt value) {
        if (updateParticleEntBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleEnt_ = value;
          onChanged();
        } else {
          updateParticleEntBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder setUpdateParticleEnt(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder builderForValue) {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleEntBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder mergeUpdateParticleEnt(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt value) {
        if (updateParticleEntBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              updateParticleEnt_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance()) {
            updateParticleEnt_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.newBuilder(updateParticleEnt_).mergeFrom(value).buildPartial();
          } else {
            updateParticleEnt_ = value;
          }
          onChanged();
        } else {
          updateParticleEntBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder clearUpdateParticleEnt() {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEnt_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.getDefaultInstance();
          onChanged();
        } else {
          updateParticleEntBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder getUpdateParticleEntBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getUpdateParticleEntFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder getUpdateParticleEntOrBuilder() {
        if (updateParticleEntBuilder_ != null) {
          return updateParticleEntBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleEnt_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder> 
          getUpdateParticleEntFieldBuilder() {
        if (updateParticleEntBuilder_ == null) {
          updateParticleEntBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEntOrBuilder>(
                  updateParticleEnt_,
                  getParentForChildren(),
                  isClean());
          updateParticleEnt_ = null;
        }
        return updateParticleEntBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw updateParticleShouldDraw_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder> updateParticleShouldDrawBuilder_;
      public boolean hasUpdateParticleShouldDraw() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw getUpdateParticleShouldDraw() {
        if (updateParticleShouldDrawBuilder_ == null) {
          return updateParticleShouldDraw_;
        } else {
          return updateParticleShouldDrawBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleShouldDraw(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw value) {
        if (updateParticleShouldDrawBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleShouldDraw_ = value;
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder setUpdateParticleShouldDraw(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder builderForValue) {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder mergeUpdateParticleShouldDraw(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw value) {
        if (updateParticleShouldDrawBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              updateParticleShouldDraw_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance()) {
            updateParticleShouldDraw_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.newBuilder(updateParticleShouldDraw_).mergeFrom(value).buildPartial();
          } else {
            updateParticleShouldDraw_ = value;
          }
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder clearUpdateParticleShouldDraw() {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDraw_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.getDefaultInstance();
          onChanged();
        } else {
          updateParticleShouldDrawBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder getUpdateParticleShouldDrawBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getUpdateParticleShouldDrawFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder getUpdateParticleShouldDrawOrBuilder() {
        if (updateParticleShouldDrawBuilder_ != null) {
          return updateParticleShouldDrawBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleShouldDraw_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder> 
          getUpdateParticleShouldDrawFieldBuilder() {
        if (updateParticleShouldDrawBuilder_ == null) {
          updateParticleShouldDrawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDrawOrBuilder>(
                  updateParticleShouldDraw_,
                  getParentForChildren(),
                  isClean());
          updateParticleShouldDraw_ = null;
        }
        return updateParticleShouldDrawBuilder_;
      }
      
      // optional .CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
      private DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen updateParticleSetFrozen_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder> updateParticleSetFrozenBuilder_;
      public boolean hasUpdateParticleSetFrozen() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen getUpdateParticleSetFrozen() {
        if (updateParticleSetFrozenBuilder_ == null) {
          return updateParticleSetFrozen_;
        } else {
          return updateParticleSetFrozenBuilder_.getMessage();
        }
      }
      public Builder setUpdateParticleSetFrozen(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen value) {
        if (updateParticleSetFrozenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateParticleSetFrozen_ = value;
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder setUpdateParticleSetFrozen(
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder builderForValue) {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = builderForValue.build();
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder mergeUpdateParticleSetFrozen(DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen value) {
        if (updateParticleSetFrozenBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              updateParticleSetFrozen_ != DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance()) {
            updateParticleSetFrozen_ =
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.newBuilder(updateParticleSetFrozen_).mergeFrom(value).buildPartial();
          } else {
            updateParticleSetFrozen_ = value;
          }
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder clearUpdateParticleSetFrozen() {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozen_ = DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.getDefaultInstance();
          onChanged();
        } else {
          updateParticleSetFrozenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder getUpdateParticleSetFrozenBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getUpdateParticleSetFrozenFieldBuilder().getBuilder();
      }
      public DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder getUpdateParticleSetFrozenOrBuilder() {
        if (updateParticleSetFrozenBuilder_ != null) {
          return updateParticleSetFrozenBuilder_.getMessageOrBuilder();
        } else {
          return updateParticleSetFrozen_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder> 
          getUpdateParticleSetFrozenFieldBuilder() {
        if (updateParticleSetFrozenBuilder_ == null) {
          updateParticleSetFrozenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder, DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozenOrBuilder>(
                  updateParticleSetFrozen_,
                  getParentForChildren(),
                  isClean());
          updateParticleSetFrozen_ = null;
        }
        return updateParticleSetFrozenBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ParticleManager)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ParticleManager(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ParticleManager)
  }
  
  public interface CDOTAUserMsg_OverheadEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
    boolean hasMessageType();
    DotaUsermessages.DOTA_OVERHEAD_ALERT getMessageType();
    
    // optional int32 value = 2;
    boolean hasValue();
    int getValue();
    
    // optional int32 target_player_entindex = 3;
    boolean hasTargetPlayerEntindex();
    int getTargetPlayerEntindex();
    
    // optional int32 target_entindex = 4;
    boolean hasTargetEntindex();
    int getTargetEntindex();
    
    // optional int32 source_player_entindex = 5;
    boolean hasSourcePlayerEntindex();
    int getSourcePlayerEntindex();
  }
  public static final class CDOTAUserMsg_OverheadEvent extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_OverheadEventOrBuilder {
    // Use CDOTAUserMsg_OverheadEvent.newBuilder() to construct.
    private CDOTAUserMsg_OverheadEvent(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_OverheadEvent(boolean noInit) {}
    
    private static final CDOTAUserMsg_OverheadEvent defaultInstance;
    public static CDOTAUserMsg_OverheadEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_OverheadEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private DotaUsermessages.DOTA_OVERHEAD_ALERT messageType_;
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaUsermessages.DOTA_OVERHEAD_ALERT getMessageType() {
      return messageType_;
    }
    
    // optional int32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getValue() {
      return value_;
    }
    
    // optional int32 target_player_entindex = 3;
    public static final int TARGET_PLAYER_ENTINDEX_FIELD_NUMBER = 3;
    private int targetPlayerEntindex_;
    public boolean hasTargetPlayerEntindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTargetPlayerEntindex() {
      return targetPlayerEntindex_;
    }
    
    // optional int32 target_entindex = 4;
    public static final int TARGET_ENTINDEX_FIELD_NUMBER = 4;
    private int targetEntindex_;
    public boolean hasTargetEntindex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTargetEntindex() {
      return targetEntindex_;
    }
    
    // optional int32 source_player_entindex = 5;
    public static final int SOURCE_PLAYER_ENTINDEX_FIELD_NUMBER = 5;
    private int sourcePlayerEntindex_;
    public boolean hasSourcePlayerEntindex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSourcePlayerEntindex() {
      return sourcePlayerEntindex_;
    }
    
    private void initFields() {
      messageType_ = DotaUsermessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
      value_ = 0;
      targetPlayerEntindex_ = 0;
      targetEntindex_ = 0;
      sourcePlayerEntindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessageType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, targetPlayerEntindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, targetEntindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sourcePlayerEntindex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, targetPlayerEntindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetEntindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sourcePlayerEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_OverheadEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_OverheadEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_OverheadEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_OverheadEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        messageType_ = DotaUsermessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetPlayerEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sourcePlayerEntindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_OverheadEvent.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_OverheadEvent getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_OverheadEvent.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_OverheadEvent build() {
        DotaUsermessages.CDOTAUserMsg_OverheadEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_OverheadEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_OverheadEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_OverheadEvent buildPartial() {
        DotaUsermessages.CDOTAUserMsg_OverheadEvent result = new DotaUsermessages.CDOTAUserMsg_OverheadEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetPlayerEntindex_ = targetPlayerEntindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetEntindex_ = targetEntindex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sourcePlayerEntindex_ = sourcePlayerEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_OverheadEvent) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_OverheadEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_OverheadEvent other) {
        if (other == DotaUsermessages.CDOTAUserMsg_OverheadEvent.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasTargetPlayerEntindex()) {
          setTargetPlayerEntindex(other.getTargetPlayerEntindex());
        }
        if (other.hasTargetEntindex()) {
          setTargetEntindex(other.getTargetEntindex());
        }
        if (other.hasSourcePlayerEntindex()) {
          setSourcePlayerEntindex(other.getSourcePlayerEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessageType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaUsermessages.DOTA_OVERHEAD_ALERT value = DotaUsermessages.DOTA_OVERHEAD_ALERT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                messageType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetPlayerEntindex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              targetEntindex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sourcePlayerEntindex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
      private DotaUsermessages.DOTA_OVERHEAD_ALERT messageType_ = DotaUsermessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaUsermessages.DOTA_OVERHEAD_ALERT getMessageType() {
        return messageType_;
      }
      public Builder setMessageType(DotaUsermessages.DOTA_OVERHEAD_ALERT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = DotaUsermessages.DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD;
        onChanged();
        return this;
      }
      
      // optional int32 value = 2;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 target_player_entindex = 3;
      private int targetPlayerEntindex_ ;
      public boolean hasTargetPlayerEntindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTargetPlayerEntindex() {
        return targetPlayerEntindex_;
      }
      public Builder setTargetPlayerEntindex(int value) {
        bitField0_ |= 0x00000004;
        targetPlayerEntindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetPlayerEntindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetPlayerEntindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 target_entindex = 4;
      private int targetEntindex_ ;
      public boolean hasTargetEntindex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTargetEntindex() {
        return targetEntindex_;
      }
      public Builder setTargetEntindex(int value) {
        bitField0_ |= 0x00000008;
        targetEntindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetEntindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetEntindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 source_player_entindex = 5;
      private int sourcePlayerEntindex_ ;
      public boolean hasSourcePlayerEntindex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSourcePlayerEntindex() {
        return sourcePlayerEntindex_;
      }
      public Builder setSourcePlayerEntindex(int value) {
        bitField0_ |= 0x00000010;
        sourcePlayerEntindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearSourcePlayerEntindex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sourcePlayerEntindex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_OverheadEvent)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_OverheadEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OverheadEvent)
  }
  
  public interface CDOTAUserMsg_TutorialTipInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional int32 progress = 2;
    boolean hasProgress();
    int getProgress();
  }
  public static final class CDOTAUserMsg_TutorialTipInfo extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TutorialTipInfoOrBuilder {
    // Use CDOTAUserMsg_TutorialTipInfo.newBuilder() to construct.
    private CDOTAUserMsg_TutorialTipInfo(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TutorialTipInfo(boolean noInit) {}
    
    private static final CDOTAUserMsg_TutorialTipInfo defaultInstance;
    public static CDOTAUserMsg_TutorialTipInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TutorialTipInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 progress = 2;
    public static final int PROGRESS_FIELD_NUMBER = 2;
    private int progress_;
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getProgress() {
      return progress_;
    }
    
    private void initFields() {
      name_ = "";
      progress_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, progress_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, progress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialTipInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TutorialTipInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TutorialTipInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        progress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialTipInfo getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialTipInfo build() {
        DotaUsermessages.CDOTAUserMsg_TutorialTipInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TutorialTipInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TutorialTipInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialTipInfo buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TutorialTipInfo result = new DotaUsermessages.CDOTAUserMsg_TutorialTipInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.progress_ = progress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TutorialTipInfo) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TutorialTipInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TutorialTipInfo other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasProgress()) {
          setProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              progress_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional int32 progress = 2;
      private int progress_ ;
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getProgress() {
        return progress_;
      }
      public Builder setProgress(int value) {
        bitField0_ |= 0x00000002;
        progress_ = value;
        onChanged();
        return this;
      }
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        progress_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialTipInfo)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TutorialTipInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialTipInfo)
  }
  
  public interface CDOTAUserMsg_TutorialFinishOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string heading = 1;
    boolean hasHeading();
    String getHeading();
    
    // optional string emblem = 2;
    boolean hasEmblem();
    String getEmblem();
    
    // optional string body = 3;
    boolean hasBody();
    String getBody();
    
    // optional bool success = 4;
    boolean hasSuccess();
    boolean getSuccess();
  }
  public static final class CDOTAUserMsg_TutorialFinish extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TutorialFinishOrBuilder {
    // Use CDOTAUserMsg_TutorialFinish.newBuilder() to construct.
    private CDOTAUserMsg_TutorialFinish(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TutorialFinish(boolean noInit) {}
    
    private static final CDOTAUserMsg_TutorialFinish defaultInstance;
    public static CDOTAUserMsg_TutorialFinish getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TutorialFinish getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string heading = 1;
    public static final int HEADING_FIELD_NUMBER = 1;
    private java.lang.Object heading_;
    public boolean hasHeading() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHeading() {
      java.lang.Object ref = heading_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          heading_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHeadingBytes() {
      java.lang.Object ref = heading_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        heading_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string emblem = 2;
    public static final int EMBLEM_FIELD_NUMBER = 2;
    private java.lang.Object emblem_;
    public boolean hasEmblem() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getEmblem() {
      java.lang.Object ref = emblem_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          emblem_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEmblemBytes() {
      java.lang.Object ref = emblem_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        emblem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string body = 3;
    public static final int BODY_FIELD_NUMBER = 3;
    private java.lang.Object body_;
    public boolean hasBody() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getBody() {
      java.lang.Object ref = body_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          body_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getBodyBytes() {
      java.lang.Object ref = body_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        body_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool success = 4;
    public static final int SUCCESS_FIELD_NUMBER = 4;
    private boolean success_;
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getSuccess() {
      return success_;
    }
    
    private void initFields() {
      heading_ = "";
      emblem_ = "";
      body_ = "";
      success_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHeadingBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEmblemBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getBodyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, success_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHeadingBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEmblemBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getBodyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, success_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFinish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TutorialFinish prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TutorialFinishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TutorialFinish.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        heading_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        emblem_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        body_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialFinish.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFinish getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialFinish.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFinish build() {
        DotaUsermessages.CDOTAUserMsg_TutorialFinish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TutorialFinish buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TutorialFinish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFinish buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TutorialFinish result = new DotaUsermessages.CDOTAUserMsg_TutorialFinish(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.heading_ = heading_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.emblem_ = emblem_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.body_ = body_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.success_ = success_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TutorialFinish) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TutorialFinish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TutorialFinish other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TutorialFinish.getDefaultInstance()) return this;
        if (other.hasHeading()) {
          setHeading(other.getHeading());
        }
        if (other.hasEmblem()) {
          setEmblem(other.getEmblem());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              heading_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              emblem_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              body_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              success_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string heading = 1;
      private java.lang.Object heading_ = "";
      public boolean hasHeading() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHeading() {
        java.lang.Object ref = heading_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          heading_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHeading(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        heading_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeading() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heading_ = getDefaultInstance().getHeading();
        onChanged();
        return this;
      }
      void setHeading(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        heading_ = value;
        onChanged();
      }
      
      // optional string emblem = 2;
      private java.lang.Object emblem_ = "";
      public boolean hasEmblem() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getEmblem() {
        java.lang.Object ref = emblem_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          emblem_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEmblem(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        emblem_ = value;
        onChanged();
        return this;
      }
      public Builder clearEmblem() {
        bitField0_ = (bitField0_ & ~0x00000002);
        emblem_ = getDefaultInstance().getEmblem();
        onChanged();
        return this;
      }
      void setEmblem(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        emblem_ = value;
        onChanged();
      }
      
      // optional string body = 3;
      private java.lang.Object body_ = "";
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getBody() {
        java.lang.Object ref = body_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          body_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setBody(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        body_ = value;
        onChanged();
        return this;
      }
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000004);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }
      void setBody(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        body_ = value;
        onChanged();
      }
      
      // optional bool success = 4;
      private boolean success_ ;
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getSuccess() {
        return success_;
      }
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000008;
        success_ = value;
        onChanged();
        return this;
      }
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000008);
        success_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialFinish)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TutorialFinish(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFinish)
  }
  
  public interface CDOTAUserMsg_SendGenericToolTipOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string title = 1;
    boolean hasTitle();
    String getTitle();
    
    // optional string text = 2;
    boolean hasText();
    String getText();
    
    // optional int32 entindex = 3;
    boolean hasEntindex();
    int getEntindex();
    
    // optional bool close = 4;
    boolean hasClose();
    boolean getClose();
  }
  public static final class CDOTAUserMsg_SendGenericToolTip extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SendGenericToolTipOrBuilder {
    // Use CDOTAUserMsg_SendGenericToolTip.newBuilder() to construct.
    private CDOTAUserMsg_SendGenericToolTip(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SendGenericToolTip(boolean noInit) {}
    
    private static final CDOTAUserMsg_SendGenericToolTip defaultInstance;
    public static CDOTAUserMsg_SendGenericToolTip getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SendGenericToolTip getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string title = 1;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          title_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string text = 2;
    public static final int TEXT_FIELD_NUMBER = 2;
    private java.lang.Object text_;
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          text_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 entindex = 3;
    public static final int ENTINDEX_FIELD_NUMBER = 3;
    private int entindex_;
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getEntindex() {
      return entindex_;
    }
    
    // optional bool close = 4;
    public static final int CLOSE_FIELD_NUMBER = 4;
    private boolean close_;
    public boolean hasClose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getClose() {
      return close_;
    }
    
    private void initFields() {
      title_ = "";
      text_ = "";
      entindex_ = 0;
      close_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, entindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, close_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, entindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, close_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendGenericToolTip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SendGenericToolTip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SendGenericToolTipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        close_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendGenericToolTip getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendGenericToolTip build() {
        DotaUsermessages.CDOTAUserMsg_SendGenericToolTip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SendGenericToolTip buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SendGenericToolTip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendGenericToolTip buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SendGenericToolTip result = new DotaUsermessages.CDOTAUserMsg_SendGenericToolTip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.close_ = close_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SendGenericToolTip) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SendGenericToolTip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SendGenericToolTip other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              title_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              text_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              entindex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              close_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string title = 1;
      private java.lang.Object title_ = "";
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTitle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      void setTitle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
      }
      
      // optional string text = 2;
      private java.lang.Object text_ = "";
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setText(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      void setText(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
      }
      
      // optional int32 entindex = 3;
      private int entindex_ ;
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getEntindex() {
        return entindex_;
      }
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000004;
        entindex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        entindex_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool close = 4;
      private boolean close_ ;
      public boolean hasClose() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getClose() {
        return close_;
      }
      public Builder setClose(boolean value) {
        bitField0_ |= 0x00000008;
        close_ = value;
        onChanged();
        return this;
      }
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000008);
        close_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendGenericToolTip)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SendGenericToolTip(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendGenericToolTip)
  }
  
  public interface CDOTAUserMsg_WorldLineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_WorldLine worldline = 2;
    boolean hasWorldline();
    DotaCommonmessages.CDOTAMsg_WorldLine getWorldline();
    DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder();
  }
  public static final class CDOTAUserMsg_WorldLine extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_WorldLineOrBuilder {
    // Use CDOTAUserMsg_WorldLine.newBuilder() to construct.
    private CDOTAUserMsg_WorldLine(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_WorldLine(boolean noInit) {}
    
    private static final CDOTAUserMsg_WorldLine defaultInstance;
    public static CDOTAUserMsg_WorldLine getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_WorldLine getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_WorldLine_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_WorldLine worldline = 2;
    public static final int WORLDLINE_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_WorldLine worldline_;
    public boolean hasWorldline() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_WorldLine getWorldline() {
      return worldline_;
    }
    public DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder() {
      return worldline_;
    }
    
    private void initFields() {
      playerId_ = 0;
      worldline_ = DotaCommonmessages.CDOTAMsg_WorldLine.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, worldline_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, worldline_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_WorldLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_WorldLine prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_WorldLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_WorldLine_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_WorldLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorldlineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (worldlineBuilder_ == null) {
          worldline_ = DotaCommonmessages.CDOTAMsg_WorldLine.getDefaultInstance();
        } else {
          worldlineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_WorldLine.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_WorldLine getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_WorldLine.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_WorldLine build() {
        DotaUsermessages.CDOTAUserMsg_WorldLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_WorldLine buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_WorldLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_WorldLine buildPartial() {
        DotaUsermessages.CDOTAUserMsg_WorldLine result = new DotaUsermessages.CDOTAUserMsg_WorldLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (worldlineBuilder_ == null) {
          result.worldline_ = worldline_;
        } else {
          result.worldline_ = worldlineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_WorldLine) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_WorldLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_WorldLine other) {
        if (other == DotaUsermessages.CDOTAUserMsg_WorldLine.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasWorldline()) {
          mergeWorldline(other.getWorldline());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_WorldLine.Builder subBuilder = DotaCommonmessages.CDOTAMsg_WorldLine.newBuilder();
              if (hasWorldline()) {
                subBuilder.mergeFrom(getWorldline());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWorldline(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_WorldLine worldline = 2;
      private DotaCommonmessages.CDOTAMsg_WorldLine worldline_ = DotaCommonmessages.CDOTAMsg_WorldLine.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_WorldLine, DotaCommonmessages.CDOTAMsg_WorldLine.Builder, DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder> worldlineBuilder_;
      public boolean hasWorldline() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_WorldLine getWorldline() {
        if (worldlineBuilder_ == null) {
          return worldline_;
        } else {
          return worldlineBuilder_.getMessage();
        }
      }
      public Builder setWorldline(DotaCommonmessages.CDOTAMsg_WorldLine value) {
        if (worldlineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldline_ = value;
          onChanged();
        } else {
          worldlineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setWorldline(
          DotaCommonmessages.CDOTAMsg_WorldLine.Builder builderForValue) {
        if (worldlineBuilder_ == null) {
          worldline_ = builderForValue.build();
          onChanged();
        } else {
          worldlineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeWorldline(DotaCommonmessages.CDOTAMsg_WorldLine value) {
        if (worldlineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              worldline_ != DotaCommonmessages.CDOTAMsg_WorldLine.getDefaultInstance()) {
            worldline_ =
              DotaCommonmessages.CDOTAMsg_WorldLine.newBuilder(worldline_).mergeFrom(value).buildPartial();
          } else {
            worldline_ = value;
          }
          onChanged();
        } else {
          worldlineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearWorldline() {
        if (worldlineBuilder_ == null) {
          worldline_ = DotaCommonmessages.CDOTAMsg_WorldLine.getDefaultInstance();
          onChanged();
        } else {
          worldlineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_WorldLine.Builder getWorldlineBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWorldlineFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder getWorldlineOrBuilder() {
        if (worldlineBuilder_ != null) {
          return worldlineBuilder_.getMessageOrBuilder();
        } else {
          return worldline_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_WorldLine, DotaCommonmessages.CDOTAMsg_WorldLine.Builder, DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder> 
          getWorldlineFieldBuilder() {
        if (worldlineBuilder_ == null) {
          worldlineBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_WorldLine, DotaCommonmessages.CDOTAMsg_WorldLine.Builder, DotaCommonmessages.CDOTAMsg_WorldLineOrBuilder>(
                  worldline_,
                  getParentForChildren(),
                  isClean());
          worldline_ = null;
        }
        return worldlineBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_WorldLine)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_WorldLine(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WorldLine)
  }
  
  public interface CDOTAUserMsg_TournamentDropOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string winner_name = 1;
    boolean hasWinnerName();
    String getWinnerName();
    
    // optional int32 event_type = 2;
    boolean hasEventType();
    int getEventType();
  }
  public static final class CDOTAUserMsg_TournamentDrop extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TournamentDropOrBuilder {
    // Use CDOTAUserMsg_TournamentDrop.newBuilder() to construct.
    private CDOTAUserMsg_TournamentDrop(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TournamentDrop(boolean noInit) {}
    
    private static final CDOTAUserMsg_TournamentDrop defaultInstance;
    public static CDOTAUserMsg_TournamentDrop getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TournamentDrop getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TournamentDrop_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TournamentDrop_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string winner_name = 1;
    public static final int WINNER_NAME_FIELD_NUMBER = 1;
    private java.lang.Object winnerName_;
    public boolean hasWinnerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getWinnerName() {
      java.lang.Object ref = winnerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          winnerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWinnerNameBytes() {
      java.lang.Object ref = winnerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        winnerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 event_type = 2;
    public static final int EVENT_TYPE_FIELD_NUMBER = 2;
    private int eventType_;
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getEventType() {
      return eventType_;
    }
    
    private void initFields() {
      winnerName_ = "";
      eventType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWinnerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, eventType_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWinnerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eventType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TournamentDrop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TournamentDrop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TournamentDropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TournamentDrop_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TournamentDrop_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TournamentDrop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        winnerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        eventType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TournamentDrop.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TournamentDrop getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TournamentDrop.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TournamentDrop build() {
        DotaUsermessages.CDOTAUserMsg_TournamentDrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TournamentDrop buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TournamentDrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TournamentDrop buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TournamentDrop result = new DotaUsermessages.CDOTAUserMsg_TournamentDrop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.winnerName_ = winnerName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventType_ = eventType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TournamentDrop) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TournamentDrop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TournamentDrop other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TournamentDrop.getDefaultInstance()) return this;
        if (other.hasWinnerName()) {
          setWinnerName(other.getWinnerName());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              winnerName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eventType_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string winner_name = 1;
      private java.lang.Object winnerName_ = "";
      public boolean hasWinnerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getWinnerName() {
        java.lang.Object ref = winnerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          winnerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWinnerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        winnerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearWinnerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        winnerName_ = getDefaultInstance().getWinnerName();
        onChanged();
        return this;
      }
      void setWinnerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        winnerName_ = value;
        onChanged();
      }
      
      // optional int32 event_type = 2;
      private int eventType_ ;
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEventType() {
        return eventType_;
      }
      public Builder setEventType(int value) {
        bitField0_ |= 0x00000002;
        eventType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventType_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TournamentDrop)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TournamentDrop(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TournamentDrop)
  }
  
  public interface CDOTAUserMsg_ChatWheelOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];
    boolean hasChatMessage();
    DotaCommonmessages.EDOTAChatWheelMessage getChatMessage();
    
    // optional uint32 player_id = 2;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional uint32 account_id = 3;
    boolean hasAccountId();
    int getAccountId();
    
    // optional uint32 param_hero_id = 4;
    boolean hasParamHeroId();
    int getParamHeroId();
  }
  public static final class CDOTAUserMsg_ChatWheel extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ChatWheelOrBuilder {
    // Use CDOTAUserMsg_ChatWheel.newBuilder() to construct.
    private CDOTAUserMsg_ChatWheel(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ChatWheel(boolean noInit) {}
    
    private static final CDOTAUserMsg_ChatWheel defaultInstance;
    public static CDOTAUserMsg_ChatWheel getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ChatWheel getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ChatWheel_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];
    public static final int CHAT_MESSAGE_FIELD_NUMBER = 1;
    private DotaCommonmessages.EDOTAChatWheelMessage chatMessage_;
    public boolean hasChatMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public DotaCommonmessages.EDOTAChatWheelMessage getChatMessage() {
      return chatMessage_;
    }
    
    // optional uint32 player_id = 2;
    public static final int PLAYER_ID_FIELD_NUMBER = 2;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional uint32 account_id = 3;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 3;
    private int accountId_;
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAccountId() {
      return accountId_;
    }
    
    // optional uint32 param_hero_id = 4;
    public static final int PARAM_HERO_ID_FIELD_NUMBER = 4;
    private int paramHeroId_;
    public boolean hasParamHeroId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getParamHeroId() {
      return paramHeroId_;
    }
    
    private void initFields() {
      chatMessage_ = DotaCommonmessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
      playerId_ = 0;
      accountId_ = 0;
      paramHeroId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, chatMessage_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, paramHeroId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, chatMessage_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, paramHeroId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ChatWheel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ChatWheel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ChatWheelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ChatWheel_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ChatWheel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        chatMessage_ = DotaCommonmessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        paramHeroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ChatWheel.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatWheel getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ChatWheel.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatWheel build() {
        DotaUsermessages.CDOTAUserMsg_ChatWheel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ChatWheel buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ChatWheel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ChatWheel buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ChatWheel result = new DotaUsermessages.CDOTAUserMsg_ChatWheel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chatMessage_ = chatMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.paramHeroId_ = paramHeroId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ChatWheel) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ChatWheel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ChatWheel other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ChatWheel.getDefaultInstance()) return this;
        if (other.hasChatMessage()) {
          setChatMessage(other.getChatMessage());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasParamHeroId()) {
          setParamHeroId(other.getParamHeroId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DotaCommonmessages.EDOTAChatWheelMessage value = DotaCommonmessages.EDOTAChatWheelMessage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                chatMessage_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              paramHeroId_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .EDOTAChatWheelMessage chat_message = 1 [default = k_EDOTA_CW_Ok];
      private DotaCommonmessages.EDOTAChatWheelMessage chatMessage_ = DotaCommonmessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
      public boolean hasChatMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public DotaCommonmessages.EDOTAChatWheelMessage getChatMessage() {
        return chatMessage_;
      }
      public Builder setChatMessage(DotaCommonmessages.EDOTAChatWheelMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        chatMessage_ = value;
        onChanged();
        return this;
      }
      public Builder clearChatMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chatMessage_ = DotaCommonmessages.EDOTAChatWheelMessage.k_EDOTA_CW_Ok;
        onChanged();
        return this;
      }
      
      // optional uint32 player_id = 2;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 account_id = 3;
      private int accountId_ ;
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAccountId() {
        return accountId_;
      }
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 param_hero_id = 4;
      private int paramHeroId_ ;
      public boolean hasParamHeroId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getParamHeroId() {
        return paramHeroId_;
      }
      public Builder setParamHeroId(int value) {
        bitField0_ |= 0x00000008;
        paramHeroId_ = value;
        onChanged();
        return this;
      }
      public Builder clearParamHeroId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        paramHeroId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ChatWheel)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ChatWheel(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatWheel)
  }
  
  public interface CDOTAUserMsg_ReceivedXmasGiftOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional string item_name = 2;
    boolean hasItemName();
    String getItemName();
    
    // optional int32 inventory_slot = 3;
    boolean hasInventorySlot();
    int getInventorySlot();
  }
  public static final class CDOTAUserMsg_ReceivedXmasGift extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ReceivedXmasGiftOrBuilder {
    // Use CDOTAUserMsg_ReceivedXmasGift.newBuilder() to construct.
    private CDOTAUserMsg_ReceivedXmasGift(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ReceivedXmasGift(boolean noInit) {}
    
    private static final CDOTAUserMsg_ReceivedXmasGift defaultInstance;
    public static CDOTAUserMsg_ReceivedXmasGift getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ReceivedXmasGift getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional string item_name = 2;
    public static final int ITEM_NAME_FIELD_NUMBER = 2;
    private java.lang.Object itemName_;
    public boolean hasItemName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getItemName() {
      java.lang.Object ref = itemName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          itemName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getItemNameBytes() {
      java.lang.Object ref = itemName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        itemName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 inventory_slot = 3;
    public static final int INVENTORY_SLOT_FIELD_NUMBER = 3;
    private int inventorySlot_;
    public boolean hasInventorySlot() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getInventorySlot() {
      return inventorySlot_;
    }
    
    private void initFields() {
      playerId_ = 0;
      itemName_ = "";
      inventorySlot_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getItemNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, inventorySlot_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getItemNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, inventorySlot_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ReceivedXmasGiftOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        inventorySlot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift build() {
        DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift result = new DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemName_ = itemName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inventorySlot_ = inventorySlot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasItemName()) {
          setItemName(other.getItemName());
        }
        if (other.hasInventorySlot()) {
          setInventorySlot(other.getInventorySlot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              itemName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              inventorySlot_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string item_name = 2;
      private java.lang.Object itemName_ = "";
      public boolean hasItemName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getItemName() {
        java.lang.Object ref = itemName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          itemName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setItemName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        itemName_ = value;
        onChanged();
        return this;
      }
      public Builder clearItemName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemName_ = getDefaultInstance().getItemName();
        onChanged();
        return this;
      }
      void setItemName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        itemName_ = value;
        onChanged();
      }
      
      // optional int32 inventory_slot = 3;
      private int inventorySlot_ ;
      public boolean hasInventorySlot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getInventorySlot() {
        return inventorySlot_;
      }
      public Builder setInventorySlot(int value) {
        bitField0_ |= 0x00000004;
        inventorySlot_ = value;
        onChanged();
        return this;
      }
      public Builder clearInventorySlot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inventorySlot_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ReceivedXmasGift)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ReceivedXmasGift(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ReceivedXmasGift)
  }
  
  public interface CDOTAUserMsg_ShowSurveyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 survey_id = 1;
    boolean hasSurveyId();
    int getSurveyId();
    
    // optional uint32 match_id = 2;
    boolean hasMatchId();
    int getMatchId();
    
    // optional string response_style = 3;
    boolean hasResponseStyle();
    String getResponseStyle();
  }
  public static final class CDOTAUserMsg_ShowSurvey extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ShowSurveyOrBuilder {
    // Use CDOTAUserMsg_ShowSurvey.newBuilder() to construct.
    private CDOTAUserMsg_ShowSurvey(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ShowSurvey(boolean noInit) {}
    
    private static final CDOTAUserMsg_ShowSurvey defaultInstance;
    public static CDOTAUserMsg_ShowSurvey getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ShowSurvey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 survey_id = 1;
    public static final int SURVEY_ID_FIELD_NUMBER = 1;
    private int surveyId_;
    public boolean hasSurveyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSurveyId() {
      return surveyId_;
    }
    
    // optional uint32 match_id = 2;
    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private int matchId_;
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMatchId() {
      return matchId_;
    }
    
    // optional string response_style = 3;
    public static final int RESPONSE_STYLE_FIELD_NUMBER = 3;
    private java.lang.Object responseStyle_;
    public boolean hasResponseStyle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getResponseStyle() {
      java.lang.Object ref = responseStyle_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          responseStyle_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getResponseStyleBytes() {
      java.lang.Object ref = responseStyle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        responseStyle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      surveyId_ = 0;
      matchId_ = 0;
      responseStyle_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, surveyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getResponseStyleBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, surveyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getResponseStyleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ShowSurvey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ShowSurvey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ShowSurveyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ShowSurvey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        surveyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        responseStyle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ShowSurvey.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ShowSurvey getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ShowSurvey.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ShowSurvey build() {
        DotaUsermessages.CDOTAUserMsg_ShowSurvey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ShowSurvey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ShowSurvey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ShowSurvey buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ShowSurvey result = new DotaUsermessages.CDOTAUserMsg_ShowSurvey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.surveyId_ = surveyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.responseStyle_ = responseStyle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ShowSurvey) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ShowSurvey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ShowSurvey other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ShowSurvey.getDefaultInstance()) return this;
        if (other.hasSurveyId()) {
          setSurveyId(other.getSurveyId());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasResponseStyle()) {
          setResponseStyle(other.getResponseStyle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              surveyId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              responseStyle_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 survey_id = 1;
      private int surveyId_ ;
      public boolean hasSurveyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSurveyId() {
        return surveyId_;
      }
      public Builder setSurveyId(int value) {
        bitField0_ |= 0x00000001;
        surveyId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSurveyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        surveyId_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 match_id = 2;
      private int matchId_ ;
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMatchId() {
        return matchId_;
      }
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string response_style = 3;
      private java.lang.Object responseStyle_ = "";
      public boolean hasResponseStyle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getResponseStyle() {
        java.lang.Object ref = responseStyle_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          responseStyle_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setResponseStyle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        responseStyle_ = value;
        onChanged();
        return this;
      }
      public Builder clearResponseStyle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        responseStyle_ = getDefaultInstance().getResponseStyle();
        onChanged();
        return this;
      }
      void setResponseStyle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        responseStyle_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ShowSurvey)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ShowSurvey(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShowSurvey)
  }
  
  public interface CDOTAUserMsg_UpdateSharedContentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 slot_type = 1;
    boolean hasSlotType();
    int getSlotType();
  }
  public static final class CDOTAUserMsg_UpdateSharedContent extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_UpdateSharedContentOrBuilder {
    // Use CDOTAUserMsg_UpdateSharedContent.newBuilder() to construct.
    private CDOTAUserMsg_UpdateSharedContent(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_UpdateSharedContent(boolean noInit) {}
    
    private static final CDOTAUserMsg_UpdateSharedContent defaultInstance;
    public static CDOTAUserMsg_UpdateSharedContent getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_UpdateSharedContent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 slot_type = 1;
    public static final int SLOT_TYPE_FIELD_NUMBER = 1;
    private int slotType_;
    public boolean hasSlotType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSlotType() {
      return slotType_;
    }
    
    private void initFields() {
      slotType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, slotType_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, slotType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_UpdateSharedContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_UpdateSharedContent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_UpdateSharedContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        slotType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_UpdateSharedContent getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_UpdateSharedContent build() {
        DotaUsermessages.CDOTAUserMsg_UpdateSharedContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_UpdateSharedContent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_UpdateSharedContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_UpdateSharedContent buildPartial() {
        DotaUsermessages.CDOTAUserMsg_UpdateSharedContent result = new DotaUsermessages.CDOTAUserMsg_UpdateSharedContent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.slotType_ = slotType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_UpdateSharedContent) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_UpdateSharedContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_UpdateSharedContent other) {
        if (other == DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.getDefaultInstance()) return this;
        if (other.hasSlotType()) {
          setSlotType(other.getSlotType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              slotType_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 slot_type = 1;
      private int slotType_ ;
      public boolean hasSlotType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSlotType() {
        return slotType_;
      }
      public Builder setSlotType(int value) {
        bitField0_ |= 0x00000001;
        slotType_ = value;
        onChanged();
        return this;
      }
      public Builder clearSlotType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slotType_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_UpdateSharedContent)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_UpdateSharedContent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UpdateSharedContent)
  }
  
  public interface CDOTAUserMsg_TutorialRequestExpOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class CDOTAUserMsg_TutorialRequestExp extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TutorialRequestExpOrBuilder {
    // Use CDOTAUserMsg_TutorialRequestExp.newBuilder() to construct.
    private CDOTAUserMsg_TutorialRequestExp(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TutorialRequestExp(boolean noInit) {}
    
    private static final CDOTAUserMsg_TutorialRequestExp defaultInstance;
    public static CDOTAUserMsg_TutorialRequestExp getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TutorialRequestExp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialRequestExp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TutorialRequestExp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TutorialRequestExpOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialRequestExp getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialRequestExp build() {
        DotaUsermessages.CDOTAUserMsg_TutorialRequestExp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TutorialRequestExp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TutorialRequestExp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialRequestExp buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TutorialRequestExp result = new DotaUsermessages.CDOTAUserMsg_TutorialRequestExp(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TutorialRequestExp) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TutorialRequestExp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TutorialRequestExp other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialRequestExp)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TutorialRequestExp(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialRequestExp)
  }
  
  public interface CDOTAUserMsg_TutorialFadeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 tgt_alpha = 1;
    boolean hasTgtAlpha();
    int getTgtAlpha();
  }
  public static final class CDOTAUserMsg_TutorialFade extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TutorialFadeOrBuilder {
    // Use CDOTAUserMsg_TutorialFade.newBuilder() to construct.
    private CDOTAUserMsg_TutorialFade(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TutorialFade(boolean noInit) {}
    
    private static final CDOTAUserMsg_TutorialFade defaultInstance;
    public static CDOTAUserMsg_TutorialFade getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TutorialFade getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFade_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 tgt_alpha = 1;
    public static final int TGT_ALPHA_FIELD_NUMBER = 1;
    private int tgtAlpha_;
    public boolean hasTgtAlpha() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getTgtAlpha() {
      return tgtAlpha_;
    }
    
    private void initFields() {
      tgtAlpha_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tgtAlpha_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tgtAlpha_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialFade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TutorialFade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TutorialFadeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFade_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TutorialFade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        tgtAlpha_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialFade.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFade getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialFade.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFade build() {
        DotaUsermessages.CDOTAUserMsg_TutorialFade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TutorialFade buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TutorialFade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialFade buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TutorialFade result = new DotaUsermessages.CDOTAUserMsg_TutorialFade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tgtAlpha_ = tgtAlpha_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TutorialFade) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TutorialFade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TutorialFade other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TutorialFade.getDefaultInstance()) return this;
        if (other.hasTgtAlpha()) {
          setTgtAlpha(other.getTgtAlpha());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tgtAlpha_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 tgt_alpha = 1;
      private int tgtAlpha_ ;
      public boolean hasTgtAlpha() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getTgtAlpha() {
        return tgtAlpha_;
      }
      public Builder setTgtAlpha(int value) {
        bitField0_ |= 0x00000001;
        tgtAlpha_ = value;
        onChanged();
        return this;
      }
      public Builder clearTgtAlpha() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tgtAlpha_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialFade)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TutorialFade(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFade)
  }
  
  public interface CDOTAUserMsg_TutorialPingMinimapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional float pos_x = 2;
    boolean hasPosX();
    float getPosX();
    
    // optional float pos_y = 3;
    boolean hasPosY();
    float getPosY();
    
    // optional float pos_z = 4;
    boolean hasPosZ();
    float getPosZ();
    
    // optional int32 entity_index = 5;
    boolean hasEntityIndex();
    int getEntityIndex();
  }
  public static final class CDOTAUserMsg_TutorialPingMinimap extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_TutorialPingMinimapOrBuilder {
    // Use CDOTAUserMsg_TutorialPingMinimap.newBuilder() to construct.
    private CDOTAUserMsg_TutorialPingMinimap(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_TutorialPingMinimap(boolean noInit) {}
    
    private static final CDOTAUserMsg_TutorialPingMinimap defaultInstance;
    public static CDOTAUserMsg_TutorialPingMinimap getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_TutorialPingMinimap getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional float pos_x = 2;
    public static final int POS_X_FIELD_NUMBER = 2;
    private float posX_;
    public boolean hasPosX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getPosX() {
      return posX_;
    }
    
    // optional float pos_y = 3;
    public static final int POS_Y_FIELD_NUMBER = 3;
    private float posY_;
    public boolean hasPosY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getPosY() {
      return posY_;
    }
    
    // optional float pos_z = 4;
    public static final int POS_Z_FIELD_NUMBER = 4;
    private float posZ_;
    public boolean hasPosZ() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getPosZ() {
      return posZ_;
    }
    
    // optional int32 entity_index = 5;
    public static final int ENTITY_INDEX_FIELD_NUMBER = 5;
    private int entityIndex_;
    public boolean hasEntityIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getEntityIndex() {
      return entityIndex_;
    }
    
    private void initFields() {
      playerId_ = 0;
      posX_ = 0F;
      posY_ = 0F;
      posZ_ = 0F;
      entityIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, posX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, posY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, posZ_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, entityIndex_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, posX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, posY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, posZ_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, entityIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_TutorialPingMinimapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        posX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        posY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        posZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        entityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap build() {
        DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap buildPartial() {
        DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap result = new DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.posX_ = posX_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.posY_ = posY_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.posZ_ = posZ_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.entityIndex_ = entityIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap other) {
        if (other == DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasPosX()) {
          setPosX(other.getPosX());
        }
        if (other.hasPosY()) {
          setPosY(other.getPosY());
        }
        if (other.hasPosZ()) {
          setPosZ(other.getPosZ());
        }
        if (other.hasEntityIndex()) {
          setEntityIndex(other.getEntityIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              posX_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              posY_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              posZ_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              entityIndex_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional float pos_x = 2;
      private float posX_ ;
      public boolean hasPosX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getPosX() {
        return posX_;
      }
      public Builder setPosX(float value) {
        bitField0_ |= 0x00000002;
        posX_ = value;
        onChanged();
        return this;
      }
      public Builder clearPosX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        posX_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float pos_y = 3;
      private float posY_ ;
      public boolean hasPosY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getPosY() {
        return posY_;
      }
      public Builder setPosY(float value) {
        bitField0_ |= 0x00000004;
        posY_ = value;
        onChanged();
        return this;
      }
      public Builder clearPosY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        posY_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float pos_z = 4;
      private float posZ_ ;
      public boolean hasPosZ() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getPosZ() {
        return posZ_;
      }
      public Builder setPosZ(float value) {
        bitField0_ |= 0x00000008;
        posZ_ = value;
        onChanged();
        return this;
      }
      public Builder clearPosZ() {
        bitField0_ = (bitField0_ & ~0x00000008);
        posZ_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 entity_index = 5;
      private int entityIndex_ ;
      public boolean hasEntityIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getEntityIndex() {
        return entityIndex_;
      }
      public Builder setEntityIndex(int value) {
        bitField0_ |= 0x00000010;
        entityIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntityIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        entityIndex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_TutorialPingMinimap)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_TutorialPingMinimap(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialPingMinimap)
  }
  
  public interface CDOTA_UM_GamerulesStateChangedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 state = 1;
    boolean hasState();
    int getState();
  }
  public static final class CDOTA_UM_GamerulesStateChanged extends
      com.google.protobuf.GeneratedMessage
      implements CDOTA_UM_GamerulesStateChangedOrBuilder {
    // Use CDOTA_UM_GamerulesStateChanged.newBuilder() to construct.
    private CDOTA_UM_GamerulesStateChanged(Builder builder) {
      super(builder);
    }
    private CDOTA_UM_GamerulesStateChanged(boolean noInit) {}
    
    private static final CDOTA_UM_GamerulesStateChanged defaultInstance;
    public static CDOTA_UM_GamerulesStateChanged getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTA_UM_GamerulesStateChanged getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTA_UM_GamerulesStateChanged_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTA_UM_GamerulesStateChanged_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getState() {
      return state_;
    }
    
    private void initFields() {
      state_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, state_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTA_UM_GamerulesStateChanged parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTA_UM_GamerulesStateChanged prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTA_UM_GamerulesStateChangedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTA_UM_GamerulesStateChanged_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTA_UM_GamerulesStateChanged_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTA_UM_GamerulesStateChanged.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTA_UM_GamerulesStateChanged.getDescriptor();
      }
      
      public DotaUsermessages.CDOTA_UM_GamerulesStateChanged getDefaultInstanceForType() {
        return DotaUsermessages.CDOTA_UM_GamerulesStateChanged.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTA_UM_GamerulesStateChanged build() {
        DotaUsermessages.CDOTA_UM_GamerulesStateChanged result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTA_UM_GamerulesStateChanged buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTA_UM_GamerulesStateChanged result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTA_UM_GamerulesStateChanged buildPartial() {
        DotaUsermessages.CDOTA_UM_GamerulesStateChanged result = new DotaUsermessages.CDOTA_UM_GamerulesStateChanged(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTA_UM_GamerulesStateChanged) {
          return mergeFrom((DotaUsermessages.CDOTA_UM_GamerulesStateChanged)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTA_UM_GamerulesStateChanged other) {
        if (other == DotaUsermessages.CDOTA_UM_GamerulesStateChanged.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              state_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 state = 1;
      private int state_ ;
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getState() {
        return state_;
      }
      public Builder setState(int value) {
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTA_UM_GamerulesStateChanged)
    }
    
    static {
      defaultInstance = new CDOTA_UM_GamerulesStateChanged(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTA_UM_GamerulesStateChanged)
  }
  
  public interface CDOTAUserMsg_AddQuestLogEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string npc_name = 1;
    boolean hasNpcName();
    String getNpcName();
    
    // optional string npc_dialog = 2;
    boolean hasNpcDialog();
    String getNpcDialog();
  }
  public static final class CDOTAUserMsg_AddQuestLogEntry extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_AddQuestLogEntryOrBuilder {
    // Use CDOTAUserMsg_AddQuestLogEntry.newBuilder() to construct.
    private CDOTAUserMsg_AddQuestLogEntry(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_AddQuestLogEntry(boolean noInit) {}
    
    private static final CDOTAUserMsg_AddQuestLogEntry defaultInstance;
    public static CDOTAUserMsg_AddQuestLogEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_AddQuestLogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string npc_name = 1;
    public static final int NPC_NAME_FIELD_NUMBER = 1;
    private java.lang.Object npcName_;
    public boolean hasNpcName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getNpcName() {
      java.lang.Object ref = npcName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          npcName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNpcNameBytes() {
      java.lang.Object ref = npcName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        npcName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string npc_dialog = 2;
    public static final int NPC_DIALOG_FIELD_NUMBER = 2;
    private java.lang.Object npcDialog_;
    public boolean hasNpcDialog() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNpcDialog() {
      java.lang.Object ref = npcDialog_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          npcDialog_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNpcDialogBytes() {
      java.lang.Object ref = npcDialog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        npcDialog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      npcName_ = "";
      npcDialog_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNpcNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNpcDialogBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNpcNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNpcDialogBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_AddQuestLogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        npcName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        npcDialog_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry build() {
        DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry buildPartial() {
        DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry result = new DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.npcName_ = npcName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.npcDialog_ = npcDialog_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry other) {
        if (other == DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.getDefaultInstance()) return this;
        if (other.hasNpcName()) {
          setNpcName(other.getNpcName());
        }
        if (other.hasNpcDialog()) {
          setNpcDialog(other.getNpcDialog());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              npcName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              npcDialog_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string npc_name = 1;
      private java.lang.Object npcName_ = "";
      public boolean hasNpcName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getNpcName() {
        java.lang.Object ref = npcName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          npcName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNpcName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        npcName_ = value;
        onChanged();
        return this;
      }
      public Builder clearNpcName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        npcName_ = getDefaultInstance().getNpcName();
        onChanged();
        return this;
      }
      void setNpcName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        npcName_ = value;
        onChanged();
      }
      
      // optional string npc_dialog = 2;
      private java.lang.Object npcDialog_ = "";
      public boolean hasNpcDialog() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNpcDialog() {
        java.lang.Object ref = npcDialog_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          npcDialog_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNpcDialog(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        npcDialog_ = value;
        onChanged();
        return this;
      }
      public Builder clearNpcDialog() {
        bitField0_ = (bitField0_ & ~0x00000002);
        npcDialog_ = getDefaultInstance().getNpcDialog();
        onChanged();
        return this;
      }
      void setNpcDialog(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        npcDialog_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_AddQuestLogEntry)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_AddQuestLogEntry(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AddQuestLogEntry)
  }
  
  public interface CDOTAUserMsg_SendStatPopupOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_SendStatPopup statpopup = 2;
    boolean hasStatpopup();
    DotaCommonmessages.CDOTAMsg_SendStatPopup getStatpopup();
    DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder();
  }
  public static final class CDOTAUserMsg_SendStatPopup extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SendStatPopupOrBuilder {
    // Use CDOTAUserMsg_SendStatPopup.newBuilder() to construct.
    private CDOTAUserMsg_SendStatPopup(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SendStatPopup(boolean noInit) {}
    
    private static final CDOTAUserMsg_SendStatPopup defaultInstance;
    public static CDOTAUserMsg_SendStatPopup getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SendStatPopup getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_SendStatPopup statpopup = 2;
    public static final int STATPOPUP_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_SendStatPopup statpopup_;
    public boolean hasStatpopup() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_SendStatPopup getStatpopup() {
      return statpopup_;
    }
    public DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder() {
      return statpopup_;
    }
    
    private void initFields() {
      playerId_ = 0;
      statpopup_ = DotaCommonmessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, statpopup_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, statpopup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendStatPopup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SendStatPopup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SendStatPopupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SendStatPopup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatpopupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statpopupBuilder_ == null) {
          statpopup_ = DotaCommonmessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
        } else {
          statpopupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SendStatPopup.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendStatPopup getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SendStatPopup.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendStatPopup build() {
        DotaUsermessages.CDOTAUserMsg_SendStatPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SendStatPopup buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SendStatPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendStatPopup buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SendStatPopup result = new DotaUsermessages.CDOTAUserMsg_SendStatPopup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (statpopupBuilder_ == null) {
          result.statpopup_ = statpopup_;
        } else {
          result.statpopup_ = statpopupBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SendStatPopup) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SendStatPopup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SendStatPopup other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SendStatPopup.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasStatpopup()) {
          mergeStatpopup(other.getStatpopup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder subBuilder = DotaCommonmessages.CDOTAMsg_SendStatPopup.newBuilder();
              if (hasStatpopup()) {
                subBuilder.mergeFrom(getStatpopup());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStatpopup(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_SendStatPopup statpopup = 2;
      private DotaCommonmessages.CDOTAMsg_SendStatPopup statpopup_ = DotaCommonmessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_SendStatPopup, DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder, DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder> statpopupBuilder_;
      public boolean hasStatpopup() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_SendStatPopup getStatpopup() {
        if (statpopupBuilder_ == null) {
          return statpopup_;
        } else {
          return statpopupBuilder_.getMessage();
        }
      }
      public Builder setStatpopup(DotaCommonmessages.CDOTAMsg_SendStatPopup value) {
        if (statpopupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statpopup_ = value;
          onChanged();
        } else {
          statpopupBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setStatpopup(
          DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder builderForValue) {
        if (statpopupBuilder_ == null) {
          statpopup_ = builderForValue.build();
          onChanged();
        } else {
          statpopupBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeStatpopup(DotaCommonmessages.CDOTAMsg_SendStatPopup value) {
        if (statpopupBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              statpopup_ != DotaCommonmessages.CDOTAMsg_SendStatPopup.getDefaultInstance()) {
            statpopup_ =
              DotaCommonmessages.CDOTAMsg_SendStatPopup.newBuilder(statpopup_).mergeFrom(value).buildPartial();
          } else {
            statpopup_ = value;
          }
          onChanged();
        } else {
          statpopupBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearStatpopup() {
        if (statpopupBuilder_ == null) {
          statpopup_ = DotaCommonmessages.CDOTAMsg_SendStatPopup.getDefaultInstance();
          onChanged();
        } else {
          statpopupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder getStatpopupBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStatpopupFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder getStatpopupOrBuilder() {
        if (statpopupBuilder_ != null) {
          return statpopupBuilder_.getMessageOrBuilder();
        } else {
          return statpopup_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_SendStatPopup, DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder, DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder> 
          getStatpopupFieldBuilder() {
        if (statpopupBuilder_ == null) {
          statpopupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_SendStatPopup, DotaCommonmessages.CDOTAMsg_SendStatPopup.Builder, DotaCommonmessages.CDOTAMsg_SendStatPopupOrBuilder>(
                  statpopup_,
                  getParentForChildren(),
                  isClean());
          statpopup_ = null;
        }
        return statpopupBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendStatPopup)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SendStatPopup(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendStatPopup)
  }
  
  public interface CDOTAUserMsg_SendRoshanPopupOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool reclaimed = 1;
    boolean hasReclaimed();
    boolean getReclaimed();
    
    // optional int32 gametime = 2;
    boolean hasGametime();
    int getGametime();
  }
  public static final class CDOTAUserMsg_SendRoshanPopup extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SendRoshanPopupOrBuilder {
    // Use CDOTAUserMsg_SendRoshanPopup.newBuilder() to construct.
    private CDOTAUserMsg_SendRoshanPopup(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SendRoshanPopup(boolean noInit) {}
    
    private static final CDOTAUserMsg_SendRoshanPopup defaultInstance;
    public static CDOTAUserMsg_SendRoshanPopup getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SendRoshanPopup getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool reclaimed = 1;
    public static final int RECLAIMED_FIELD_NUMBER = 1;
    private boolean reclaimed_;
    public boolean hasReclaimed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getReclaimed() {
      return reclaimed_;
    }
    
    // optional int32 gametime = 2;
    public static final int GAMETIME_FIELD_NUMBER = 2;
    private int gametime_;
    public boolean hasGametime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getGametime() {
      return gametime_;
    }
    
    private void initFields() {
      reclaimed_ = false;
      gametime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, reclaimed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gametime_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, reclaimed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gametime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendRoshanPopup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SendRoshanPopup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SendRoshanPopupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        reclaimed_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        gametime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendRoshanPopup getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendRoshanPopup build() {
        DotaUsermessages.CDOTAUserMsg_SendRoshanPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SendRoshanPopup buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SendRoshanPopup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendRoshanPopup buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SendRoshanPopup result = new DotaUsermessages.CDOTAUserMsg_SendRoshanPopup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reclaimed_ = reclaimed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gametime_ = gametime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SendRoshanPopup) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SendRoshanPopup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SendRoshanPopup other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.getDefaultInstance()) return this;
        if (other.hasReclaimed()) {
          setReclaimed(other.getReclaimed());
        }
        if (other.hasGametime()) {
          setGametime(other.getGametime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              reclaimed_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gametime_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool reclaimed = 1;
      private boolean reclaimed_ ;
      public boolean hasReclaimed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getReclaimed() {
        return reclaimed_;
      }
      public Builder setReclaimed(boolean value) {
        bitField0_ |= 0x00000001;
        reclaimed_ = value;
        onChanged();
        return this;
      }
      public Builder clearReclaimed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reclaimed_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 gametime = 2;
      private int gametime_ ;
      public boolean hasGametime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getGametime() {
        return gametime_;
      }
      public Builder setGametime(int value) {
        bitField0_ |= 0x00000002;
        gametime_ = value;
        onChanged();
        return this;
      }
      public Builder clearGametime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gametime_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendRoshanPopup)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SendRoshanPopup(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendRoshanPopup)
  }
  
  public interface CDOTAUserMsg_SendFinalGoldOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated uint32 reliable_gold = 1;
    java.util.List<java.lang.Integer> getReliableGoldList();
    int getReliableGoldCount();
    int getReliableGold(int index);
    
    // repeated uint32 unreliable_gold = 2;
    java.util.List<java.lang.Integer> getUnreliableGoldList();
    int getUnreliableGoldCount();
    int getUnreliableGold(int index);
  }
  public static final class CDOTAUserMsg_SendFinalGold extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_SendFinalGoldOrBuilder {
    // Use CDOTAUserMsg_SendFinalGold.newBuilder() to construct.
    private CDOTAUserMsg_SendFinalGold(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_SendFinalGold(boolean noInit) {}
    
    private static final CDOTAUserMsg_SendFinalGold defaultInstance;
    public static CDOTAUserMsg_SendFinalGold getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_SendFinalGold getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable;
    }
    
    // repeated uint32 reliable_gold = 1;
    public static final int RELIABLE_GOLD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> reliableGold_;
    public java.util.List<java.lang.Integer>
        getReliableGoldList() {
      return reliableGold_;
    }
    public int getReliableGoldCount() {
      return reliableGold_.size();
    }
    public int getReliableGold(int index) {
      return reliableGold_.get(index);
    }
    
    // repeated uint32 unreliable_gold = 2;
    public static final int UNRELIABLE_GOLD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> unreliableGold_;
    public java.util.List<java.lang.Integer>
        getUnreliableGoldList() {
      return unreliableGold_;
    }
    public int getUnreliableGoldCount() {
      return unreliableGold_.size();
    }
    public int getUnreliableGold(int index) {
      return unreliableGold_.get(index);
    }
    
    private void initFields() {
      reliableGold_ = java.util.Collections.emptyList();;
      unreliableGold_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < reliableGold_.size(); i++) {
        output.writeUInt32(1, reliableGold_.get(i));
      }
      for (int i = 0; i < unreliableGold_.size(); i++) {
        output.writeUInt32(2, unreliableGold_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < reliableGold_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(reliableGold_.get(i));
        }
        size += dataSize;
        size += 1 * getReliableGoldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unreliableGold_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unreliableGold_.get(i));
        }
        size += dataSize;
        size += 1 * getUnreliableGoldList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_SendFinalGold parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_SendFinalGold prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_SendFinalGoldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_SendFinalGold.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        reliableGold_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        unreliableGold_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_SendFinalGold.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendFinalGold getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_SendFinalGold.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendFinalGold build() {
        DotaUsermessages.CDOTAUserMsg_SendFinalGold result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_SendFinalGold buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_SendFinalGold result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_SendFinalGold buildPartial() {
        DotaUsermessages.CDOTAUserMsg_SendFinalGold result = new DotaUsermessages.CDOTAUserMsg_SendFinalGold(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          reliableGold_ = java.util.Collections.unmodifiableList(reliableGold_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reliableGold_ = reliableGold_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          unreliableGold_ = java.util.Collections.unmodifiableList(unreliableGold_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.unreliableGold_ = unreliableGold_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_SendFinalGold) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_SendFinalGold)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_SendFinalGold other) {
        if (other == DotaUsermessages.CDOTAUserMsg_SendFinalGold.getDefaultInstance()) return this;
        if (!other.reliableGold_.isEmpty()) {
          if (reliableGold_.isEmpty()) {
            reliableGold_ = other.reliableGold_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReliableGoldIsMutable();
            reliableGold_.addAll(other.reliableGold_);
          }
          onChanged();
        }
        if (!other.unreliableGold_.isEmpty()) {
          if (unreliableGold_.isEmpty()) {
            unreliableGold_ = other.unreliableGold_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUnreliableGoldIsMutable();
            unreliableGold_.addAll(other.unreliableGold_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureReliableGoldIsMutable();
              reliableGold_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addReliableGold(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              ensureUnreliableGoldIsMutable();
              unreliableGold_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUnreliableGold(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated uint32 reliable_gold = 1;
      private java.util.List<java.lang.Integer> reliableGold_ = java.util.Collections.emptyList();;
      private void ensureReliableGoldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          reliableGold_ = new java.util.ArrayList<java.lang.Integer>(reliableGold_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getReliableGoldList() {
        return java.util.Collections.unmodifiableList(reliableGold_);
      }
      public int getReliableGoldCount() {
        return reliableGold_.size();
      }
      public int getReliableGold(int index) {
        return reliableGold_.get(index);
      }
      public Builder setReliableGold(
          int index, int value) {
        ensureReliableGoldIsMutable();
        reliableGold_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addReliableGold(int value) {
        ensureReliableGoldIsMutable();
        reliableGold_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllReliableGold(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReliableGoldIsMutable();
        super.addAll(values, reliableGold_);
        onChanged();
        return this;
      }
      public Builder clearReliableGold() {
        reliableGold_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated uint32 unreliable_gold = 2;
      private java.util.List<java.lang.Integer> unreliableGold_ = java.util.Collections.emptyList();;
      private void ensureUnreliableGoldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          unreliableGold_ = new java.util.ArrayList<java.lang.Integer>(unreliableGold_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getUnreliableGoldList() {
        return java.util.Collections.unmodifiableList(unreliableGold_);
      }
      public int getUnreliableGoldCount() {
        return unreliableGold_.size();
      }
      public int getUnreliableGold(int index) {
        return unreliableGold_.get(index);
      }
      public Builder setUnreliableGold(
          int index, int value) {
        ensureUnreliableGoldIsMutable();
        unreliableGold_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUnreliableGold(int value) {
        ensureUnreliableGoldIsMutable();
        unreliableGold_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUnreliableGold(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnreliableGoldIsMutable();
        super.addAll(values, unreliableGold_);
        onChanged();
        return this;
      }
      public Builder clearUnreliableGold() {
        unreliableGold_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_SendFinalGold)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_SendFinalGold(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendFinalGold)
  }
  
  public interface CDOTAUserMsg_CustomMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string message = 1;
    boolean hasMessage();
    String getMessage();
    
    // optional int32 player_id = 2;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional int32 value = 3;
    boolean hasValue();
    int getValue();
  }
  public static final class CDOTAUserMsg_CustomMsg extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CustomMsgOrBuilder {
    // Use CDOTAUserMsg_CustomMsg.newBuilder() to construct.
    private CDOTAUserMsg_CustomMsg(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CustomMsg(boolean noInit) {}
    
    private static final CDOTAUserMsg_CustomMsg defaultInstance;
    public static CDOTAUserMsg_CustomMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CustomMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CustomMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 player_id = 2;
    public static final int PLAYER_ID_FIELD_NUMBER = 2;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional int32 value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getValue() {
      return value_;
    }
    
    private void initFields() {
      message_ = "";
      playerId_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, value_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CustomMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CustomMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CustomMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CustomMsg_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CustomMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CustomMsg.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CustomMsg getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CustomMsg.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CustomMsg build() {
        DotaUsermessages.CDOTAUserMsg_CustomMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CustomMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CustomMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CustomMsg buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CustomMsg result = new DotaUsermessages.CDOTAUserMsg_CustomMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CustomMsg) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CustomMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CustomMsg other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CustomMsg.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              value_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // optional int32 player_id = 2;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 value = 3;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CustomMsg)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CustomMsg(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomMsg)
  }
  
  public interface CDOTAUserMsg_CoachHUDPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 player_id = 1;
    boolean hasPlayerId();
    int getPlayerId();
    
    // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
    boolean hasHudPing();
    DotaCommonmessages.CDOTAMsg_CoachHUDPing getHudPing();
    DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder();
  }
  public static final class CDOTAUserMsg_CoachHUDPing extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_CoachHUDPingOrBuilder {
    // Use CDOTAUserMsg_CoachHUDPing.newBuilder() to construct.
    private CDOTAUserMsg_CoachHUDPing(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_CoachHUDPing(boolean noInit) {}
    
    private static final CDOTAUserMsg_CoachHUDPing defaultInstance;
    public static CDOTAUserMsg_CoachHUDPing getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_CoachHUDPing getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPlayerId() {
      return playerId_;
    }
    
    // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
    public static final int HUD_PING_FIELD_NUMBER = 2;
    private DotaCommonmessages.CDOTAMsg_CoachHUDPing hudPing_;
    public boolean hasHudPing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public DotaCommonmessages.CDOTAMsg_CoachHUDPing getHudPing() {
      return hudPing_;
    }
    public DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder() {
      return hudPing_;
    }
    
    private void initFields() {
      playerId_ = 0;
      hudPing_ = DotaCommonmessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, hudPing_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hudPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_CoachHUDPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_CoachHUDPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_CoachHUDPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_CoachHUDPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHudPingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hudPingBuilder_ == null) {
          hudPing_ = DotaCommonmessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
        } else {
          hudPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_CoachHUDPing.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CoachHUDPing getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_CoachHUDPing.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_CoachHUDPing build() {
        DotaUsermessages.CDOTAUserMsg_CoachHUDPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_CoachHUDPing buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_CoachHUDPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_CoachHUDPing buildPartial() {
        DotaUsermessages.CDOTAUserMsg_CoachHUDPing result = new DotaUsermessages.CDOTAUserMsg_CoachHUDPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hudPingBuilder_ == null) {
          result.hudPing_ = hudPing_;
        } else {
          result.hudPing_ = hudPingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_CoachHUDPing) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_CoachHUDPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_CoachHUDPing other) {
        if (other == DotaUsermessages.CDOTAUserMsg_CoachHUDPing.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasHudPing()) {
          mergeHudPing(other.getHudPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readUInt32();
              break;
            }
            case 18: {
              DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder subBuilder = DotaCommonmessages.CDOTAMsg_CoachHUDPing.newBuilder();
              if (hasHudPing()) {
                subBuilder.mergeFrom(getHudPing());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHudPing(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 player_id = 1;
      private int playerId_ ;
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPlayerId() {
        return playerId_;
      }
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
      private DotaCommonmessages.CDOTAMsg_CoachHUDPing hudPing_ = DotaCommonmessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_CoachHUDPing, DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder, DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder> hudPingBuilder_;
      public boolean hasHudPing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public DotaCommonmessages.CDOTAMsg_CoachHUDPing getHudPing() {
        if (hudPingBuilder_ == null) {
          return hudPing_;
        } else {
          return hudPingBuilder_.getMessage();
        }
      }
      public Builder setHudPing(DotaCommonmessages.CDOTAMsg_CoachHUDPing value) {
        if (hudPingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hudPing_ = value;
          onChanged();
        } else {
          hudPingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setHudPing(
          DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder builderForValue) {
        if (hudPingBuilder_ == null) {
          hudPing_ = builderForValue.build();
          onChanged();
        } else {
          hudPingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeHudPing(DotaCommonmessages.CDOTAMsg_CoachHUDPing value) {
        if (hudPingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              hudPing_ != DotaCommonmessages.CDOTAMsg_CoachHUDPing.getDefaultInstance()) {
            hudPing_ =
              DotaCommonmessages.CDOTAMsg_CoachHUDPing.newBuilder(hudPing_).mergeFrom(value).buildPartial();
          } else {
            hudPing_ = value;
          }
          onChanged();
        } else {
          hudPingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearHudPing() {
        if (hudPingBuilder_ == null) {
          hudPing_ = DotaCommonmessages.CDOTAMsg_CoachHUDPing.getDefaultInstance();
          onChanged();
        } else {
          hudPingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder getHudPingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHudPingFieldBuilder().getBuilder();
      }
      public DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder getHudPingOrBuilder() {
        if (hudPingBuilder_ != null) {
          return hudPingBuilder_.getMessageOrBuilder();
        } else {
          return hudPing_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          DotaCommonmessages.CDOTAMsg_CoachHUDPing, DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder, DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder> 
          getHudPingFieldBuilder() {
        if (hudPingBuilder_ == null) {
          hudPingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DotaCommonmessages.CDOTAMsg_CoachHUDPing, DotaCommonmessages.CDOTAMsg_CoachHUDPing.Builder, DotaCommonmessages.CDOTAMsg_CoachHUDPingOrBuilder>(
                  hudPing_,
                  getParentForChildren(),
                  isClean());
          hudPing_ = null;
        }
        return hudPingBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_CoachHUDPing)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_CoachHUDPing(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CoachHUDPing)
  }
  
  public interface CDOTAUserMsg_ClientLoadGridNavOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class CDOTAUserMsg_ClientLoadGridNav extends
      com.google.protobuf.GeneratedMessage
      implements CDOTAUserMsg_ClientLoadGridNavOrBuilder {
    // Use CDOTAUserMsg_ClientLoadGridNav.newBuilder() to construct.
    private CDOTAUserMsg_ClientLoadGridNav(Builder builder) {
      super(builder);
    }
    private CDOTAUserMsg_ClientLoadGridNav(boolean noInit) {}
    
    private static final CDOTAUserMsg_ClientLoadGridNav defaultInstance;
    public static CDOTAUserMsg_ClientLoadGridNav getDefaultInstance() {
      return defaultInstance;
    }
    
    public CDOTAUserMsg_ClientLoadGridNav getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DotaUsermessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DotaUsermessages.CDOTAUserMsg_ClientLoadGridNavOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DotaUsermessages.internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable;
      }
      
      // Construct using DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.getDescriptor();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav getDefaultInstanceForType() {
        return DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.getDefaultInstance();
      }
      
      public DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav build() {
        DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav buildPartial() {
        DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav result = new DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav) {
          return mergeFrom((DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav other) {
        if (other == DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:CDOTAUserMsg_ClientLoadGridNav)
    }
    
    static {
      defaultInstance = new CDOTAUserMsg_ClientLoadGridNav(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ClientLoadGridNav)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AIDebugLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_Ping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_Ping_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SwapVerify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ChatEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CombatLogData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CombatLogData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_BotChat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GlobalLightColor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_LocationPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemAlert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MinimapEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MapLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_InvalidCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_HudError_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_HudError_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SharedCooldown_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_HalloweenDrops_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAResponseQuerySerialized_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAResponseQuerySerialized_Fact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASpeechMatchOnClient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemPurchased_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ItemFound_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_OverheadEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialFinish_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_WorldLine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TournamentDrop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TournamentDrop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ChatWheel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ShowSurvey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialFade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTA_UM_GamerulesStateChanged_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTA_UM_GamerulesStateChanged_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendStatPopup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_SendFinalGold_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CustomMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_CoachHUDPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027dota_usermessages.proto\032 google/protob" +
      "uf/descriptor.proto\032\026networkbasetypes.pr" +
      "oto\032\021ai_activity.proto\032\031dota_commonmessa" +
      "ges.proto\"+\n\030CDOTAUserMsg_AIDebugLine\022\017\n" +
      "\007message\030\001 \001(\t\"$\n\021CDOTAUserMsg_Ping\022\017\n\007m" +
      "essage\030\001 \001(\t\",\n\027CDOTAUserMsg_SwapVerify\022" +
      "\021\n\tplayer_id\030\001 \001(\r\"\357\001\n\026CDOTAUserMsg_Chat" +
      "Event\0226\n\004type\030\001 \002(\0162\022.DOTA_CHAT_MESSAGE:" +
      "\024CHAT_MESSAGE_INVALID\022\r\n\005value\030\002 \001(\r\022\026\n\n" +
      "playerid_1\030\003 \001(\021:\002-1\022\026\n\nplayerid_2\030\004 \001(\021",
      ":\002-1\022\026\n\nplayerid_3\030\005 \001(\021:\002-1\022\026\n\nplayerid" +
      "_4\030\006 \001(\021:\002-1\022\026\n\nplayerid_5\030\007 \001(\021:\002-1\022\026\n\n" +
      "playerid_6\030\010 \001(\021:\002-1\"\375\001\n\032CDOTAUserMsg_Co" +
      "mbatLogData\022:\n\004type\030\001 \001(\0162\025.DOTA_COMBATL" +
      "OG_TYPES:\025DOTA_COMBATLOG_DAMAGE\022\023\n\013targe" +
      "t_name\030\002 \001(\r\022\025\n\rattacker_name\030\003 \001(\r\022\031\n\021a" +
      "ttacker_illusion\030\004 \001(\010\022\027\n\017target_illusio" +
      "n\030\005 \001(\010\022\026\n\016inflictor_name\030\006 \001(\r\022\r\n\005value" +
      "\030\007 \001(\005\022\016\n\006health\030\010 \001(\005\022\014\n\004time\030\t \001(\002\"!\n\037" +
      "CDOTAUserMsg_CombatLogShowDeath\"Z\n\024CDOTA",
      "UserMsg_BotChat\022\021\n\tplayer_id\030\001 \001(\r\022\016\n\006fo" +
      "rmat\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\022\016\n\006target\030\004 " +
      "\001(\t\"q\n CDOTAUserMsg_CombatHeroPositions\022" +
      "\r\n\005index\030\001 \001(\r\022\014\n\004time\030\002 \001(\005\022 \n\tworld_po" +
      "s\030\003 \001(\0132\r.CMsgVector2D\022\016\n\006health\030\004 \001(\005\"\375" +
      "\001\n\034CDOTAUserMsg_MiniKillCamInfo\0229\n\tattac" +
      "kers\030\001 \003(\0132&.CDOTAUserMsg_MiniKillCamInf" +
      "o.Attacker\032\241\001\n\010Attacker\022\020\n\010attacker\030\001 \001(" +
      "\r\022\024\n\014total_damage\030\002 \001(\005\022A\n\tabilities\030\003 \003" +
      "(\0132..CDOTAUserMsg_MiniKillCamInfo.Attack",
      "er.Ability\032*\n\007Ability\022\017\n\007ability\030\001 \001(\r\022\016" +
      "\n\006damage\030\002 \001(\005\"@\n\035CDOTAUserMsg_GlobalLig" +
      "htColor\022\r\n\005color\030\001 \001(\r\022\020\n\010duration\030\002 \001(\002" +
      "\"U\n!CDOTAUserMsg_GlobalLightDirection\022\036\n" +
      "\tdirection\030\001 \001(\0132\013.CMsgVector\022\020\n\010duratio" +
      "n\030\002 \001(\002\"]\n\031CDOTAUserMsg_LocationPing\022\021\n\t" +
      "player_id\030\001 \001(\r\022-\n\rlocation_ping\030\002 \001(\0132\026" +
      ".CDOTAMsg_LocationPing\"T\n\026CDOTAUserMsg_I" +
      "temAlert\022\021\n\tplayer_id\030\001 \001(\r\022\'\n\nitem_aler" +
      "t\030\002 \001(\0132\023.CDOTAMsg_ItemAlert\"n\n\031CDOTAUse",
      "rMsg_MinimapEvent\022\022\n\nevent_type\030\001 \001(\005\022\025\n" +
      "\rentity_handle\030\002 \001(\005\022\t\n\001x\030\003 \001(\005\022\t\n\001y\030\004 \001" +
      "(\005\022\020\n\010duration\030\005 \001(\005\"M\n\024CDOTAUserMsg_Map" +
      "Line\022\021\n\tplayer_id\030\001 \001(\005\022\"\n\007mapline\030\002 \001(\013" +
      "2\021.CDOTAMsg_MapLine\"n\n\036CDOTAUserMsg_Mini" +
      "mapDebugPoint\022\035\n\010location\030\001 \001(\0132\013.CMsgVe" +
      "ctor\022\r\n\005color\030\002 \001(\r\022\014\n\004size\030\003 \001(\005\022\020\n\010dur" +
      "ation\030\004 \001(\002\"\256\001\n#CDOTAUserMsg_CreateLinea" +
      "rProjectile\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector" +
      "\022\037\n\010velocity\030\002 \001(\0132\r.CMsgVector2D\022\017\n\007lat",
      "ency\030\003 \001(\005\022\020\n\010entindex\030\004 \001(\005\022\026\n\016particle" +
      "_index\030\005 \001(\005\022\016\n\006handle\030\006 \001(\005\"6\n$CDOTAUse" +
      "rMsg_DestroyLinearProjectile\022\016\n\006handle\030\001" +
      " \001(\005\"9\n%CDOTAUserMsg_DodgeTrackingProjec" +
      "tiles\022\020\n\010entindex\030\001 \002(\005\"_\n!CDOTAUserMsg_" +
      "SpectatorPlayerClick\022\020\n\010entindex\030\001 \002(\005\022\022" +
      "\n\norder_type\030\002 \001(\005\022\024\n\014target_index\030\003 \001(\005" +
      "\"b\n\035CDOTAUserMsg_NevermoreRequiem\022\025\n\rent" +
      "ity_handle\030\001 \001(\005\022\r\n\005lines\030\002 \001(\005\022\033\n\006origi" +
      "n\030\003 \001(\0132\013.CMsgVector\".\n\033CDOTAUserMsg_Inv",
      "alidCommand\022\017\n\007message\030\001 \001(\t\")\n\025CDOTAUse" +
      "rMsg_HudError\022\020\n\010order_id\030\001 \001(\005\"c\n\033CDOTA" +
      "UserMsg_SharedCooldown\022\020\n\010entindex\030\001 \001(\005" +
      "\022\014\n\004name\030\002 \001(\t\022\020\n\010cooldown\030\003 \001(\002\022\022\n\nname" +
      "_index\030\004 \001(\005\"/\n\037CDOTAUserMsg_SetNextAuto" +
      "buyItem\022\014\n\004name\030\001 \001(\t\"X\n\033CDOTAUserMsg_Ha" +
      "lloweenDrops\022\021\n\titem_defs\030\001 \003(\r\022\022\n\nplaye" +
      "r_ids\030\002 \003(\r\022\022\n\nprize_list\030\003 \001(\r\"\376\001\n\034CDOT" +
      "AResponseQuerySerialized\0221\n\005facts\030\001 \003(\0132" +
      "\".CDOTAResponseQuerySerialized.Fact\032\252\001\n\004",
      "Fact\022\013\n\003key\030\001 \002(\005\022F\n\007valtype\030\002 \002(\0162,.CDO" +
      "TAResponseQuerySerialized.Fact.ValueType" +
      ":\007NUMERIC\022\023\n\013val_numeric\030\003 \001(\002\022\022\n\nval_st" +
      "ring\030\004 \001(\t\"$\n\tValueType\022\013\n\007NUMERIC\020\001\022\n\n\006" +
      "STRING\020\002\"\220\001\n\030CDOTASpeechMatchOnClient\022\017\n" +
      "\007concept\030\001 \001(\005\022\026\n\016recipient_type\030\002 \001(\005\0224" +
      "\n\rresponsequery\030\003 \001(\0132\035.CDOTAResponseQue" +
      "rySerialized\022\025\n\nrandomseed\030\004 \001(\017:\0010\"\260\007\n\026" +
      "CDOTAUserMsg_UnitEvent\0228\n\010msg_type\030\001 \002(\016" +
      "2\024.EDotaEntityMessages:\020DOTA_UNIT_SPEECH",
      "\022\024\n\014entity_index\030\002 \002(\005\022.\n\006speech\030\003 \001(\0132\036" +
      ".CDOTAUserMsg_UnitEvent.Speech\0227\n\013speech" +
      "_mute\030\004 \001(\0132\".CDOTAUserMsg_UnitEvent.Spe" +
      "echMute\0227\n\013add_gesture\030\005 \001(\0132\".CDOTAUser" +
      "Msg_UnitEvent.AddGesture\022=\n\016remove_gestu" +
      "re\030\006 \001(\0132%.CDOTAUserMsg_UnitEvent.Remove" +
      "Gesture\0229\n\014blood_impact\030\007 \001(\0132#.CDOTAUse" +
      "rMsg_UnitEvent.BloodImpact\0229\n\014fade_gestu" +
      "re\030\010 \001(\0132#.CDOTAUserMsg_UnitEvent.FadeGe" +
      "sture\0229\n\026speech_match_on_client\030\t \001(\0132\031.",
      "CDOTASpeechMatchOnClient\032k\n\006Speech\022\017\n\007co" +
      "ncept\030\001 \001(\005\022\020\n\010response\030\002 \001(\t\022\026\n\016recipie" +
      "nt_type\030\003 \001(\005\022\r\n\005level\030\004 \001(\005\022\027\n\010muteable" +
      "\030\005 \001(\010:\005false\032 \n\nSpeechMute\022\022\n\005delay\030\001 \001" +
      "(\002:\0030.5\032o\n\nAddGesture\022(\n\010activity\030\001 \001(\0162" +
      "\t.Activity:\013ACT_INVALID\022\014\n\004slot\030\002 \001(\005\022\022\n" +
      "\007fade_in\030\003 \001(\002:\0010\022\025\n\010fade_out\030\004 \001(\002:\0030.1" +
      "\0329\n\rRemoveGesture\022(\n\010activity\030\001 \001(\0162\t.Ac" +
      "tivity:\013ACT_INVALID\032@\n\013BloodImpact\022\r\n\005sc" +
      "ale\030\001 \001(\005\022\020\n\010x_normal\030\002 \001(\005\022\020\n\010y_normal\030",
      "\003 \001(\005\0327\n\013FadeGesture\022(\n\010activity\030\001 \001(\0162\t" +
      ".Activity:\013ACT_INVALID\"0\n\032CDOTAUserMsg_I" +
      "temPurchased\022\022\n\nitem_index\030\001 \001(\005\"j\n\026CDOT" +
      "AUserMsg_ItemFound\022\016\n\006player\030\001 \001(\005\022\017\n\007qu" +
      "ality\030\002 \001(\005\022\016\n\006rarity\030\003 \001(\005\022\016\n\006method\030\004 " +
      "\001(\005\022\017\n\007itemdef\030\005 \001(\005\"\215\020\n\034CDOTAUserMsg_Pa" +
      "rticleManager\022H\n\004type\030\001 \002(\0162\026.DOTA_PARTI" +
      "CLE_MESSAGE:\"DOTA_PARTICLE_MANAGER_EVENT" +
      "_CREATE\022\r\n\005index\030\002 \002(\r\022R\n\026release_partic" +
      "le_index\030\003 \001(\01322.CDOTAUserMsg_ParticleMa",
      "nager.ReleaseParticleIndex\022E\n\017create_par" +
      "ticle\030\004 \001(\0132,.CDOTAUserMsg_ParticleManag" +
      "er.CreateParticle\022G\n\020destroy_particle\030\005 " +
      "\001(\0132-.CDOTAUserMsg_ParticleManager.Destr" +
      "oyParticle\022Z\n\032destroy_particle_involving" +
      "\030\006 \001(\01326.CDOTAUserMsg_ParticleManager.De" +
      "stroyParticleInvolving\022E\n\017update_particl" +
      "e\030\007 \001(\0132,.CDOTAUserMsg_ParticleManager.U" +
      "pdateParticle\022L\n\023update_particle_fwd\030\010 \001" +
      "(\0132/.CDOTAUserMsg_ParticleManager.Update",
      "ParticleFwd\022R\n\026update_particle_orient\030\t " +
      "\001(\01322.CDOTAUserMsg_ParticleManager.Updat" +
      "eParticleOrient\022V\n\030update_particle_fallb" +
      "ack\030\n \001(\01324.CDOTAUserMsg_ParticleManager" +
      ".UpdateParticleFallback\022R\n\026update_partic" +
      "le_offset\030\013 \001(\01322.CDOTAUserMsg_ParticleM" +
      "anager.UpdateParticleOffset\022L\n\023update_pa" +
      "rticle_ent\030\014 \001(\0132/.CDOTAUserMsg_Particle" +
      "Manager.UpdateParticleEnt\022[\n\033update_part" +
      "icle_should_draw\030\016 \001(\01326.CDOTAUserMsg_Pa",
      "rticleManager.UpdateParticleShouldDraw\022Y" +
      "\n\032update_particle_set_frozen\030\017 \001(\01325.CDO" +
      "TAUserMsg_ParticleManager.UpdateParticle" +
      "SetFrozen\032\026\n\024ReleaseParticleIndex\032Y\n\016Cre" +
      "ateParticle\022\033\n\023particle_name_index\030\001 \001(\005" +
      "\022\023\n\013attach_type\030\002 \001(\005\022\025\n\rentity_handle\030\003" +
      " \001(\005\032.\n\017DestroyParticle\022\033\n\023destroy_immed" +
      "iately\030\001 \001(\010\032N\n\030DestroyParticleInvolving" +
      "\022\033\n\023destroy_immediately\030\001 \001(\010\022\025\n\rentity_" +
      "handle\030\003 \001(\005\032F\n\016UpdateParticle\022\025\n\rcontro",
      "l_point\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVe" +
      "ctor\032H\n\021UpdateParticleFwd\022\025\n\rcontrol_poi" +
      "nt\030\001 \001(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\032\200" +
      "\001\n\024UpdateParticleOrient\022\025\n\rcontrol_point" +
      "\030\001 \001(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\022\032\n\005" +
      "right\030\003 \001(\0132\013.CMsgVector\022\027\n\002up\030\004 \001(\0132\013.C" +
      "MsgVector\032N\n\026UpdateParticleFallback\022\025\n\rc" +
      "ontrol_point\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.C" +
      "MsgVector\032Q\n\024UpdateParticleOffset\022\025\n\rcon" +
      "trol_point\030\001 \001(\005\022\"\n\rorigin_offset\030\002 \001(\0132",
      "\013.CMsgVector\032\255\001\n\021UpdateParticleEnt\022\025\n\rco" +
      "ntrol_point\030\001 \001(\005\022\025\n\rentity_handle\030\002 \001(\005" +
      "\022\023\n\013attach_type\030\003 \001(\005\022\022\n\nattachment\030\004 \001(" +
      "\005\022&\n\021fallback_position\030\005 \001(\0132\013.CMsgVecto" +
      "r\022\031\n\021include_wearables\030\006 \001(\010\032-\n\027UpdatePa" +
      "rticleSetFrozen\022\022\n\nset_frozen\030\001 \001(\010\032/\n\030U" +
      "pdateParticleShouldDraw\022\023\n\013should_draw\030\001" +
      " \001(\010\"\305\001\n\032CDOTAUserMsg_OverheadEvent\022?\n\014m" +
      "essage_type\030\001 \002(\0162\024.DOTA_OVERHEAD_ALERT:" +
      "\023OVERHEAD_ALERT_GOLD\022\r\n\005value\030\002 \001(\005\022\036\n\026t",
      "arget_player_entindex\030\003 \001(\005\022\027\n\017target_en" +
      "tindex\030\004 \001(\005\022\036\n\026source_player_entindex\030\005" +
      " \001(\005\">\n\034CDOTAUserMsg_TutorialTipInfo\022\014\n\004" +
      "name\030\001 \001(\t\022\020\n\010progress\030\002 \001(\005\"]\n\033CDOTAUse" +
      "rMsg_TutorialFinish\022\017\n\007heading\030\001 \001(\t\022\016\n\006" +
      "emblem\030\002 \001(\t\022\014\n\004body\030\003 \001(\t\022\017\n\007success\030\004 " +
      "\001(\010\"_\n\037CDOTAUserMsg_SendGenericToolTip\022\r" +
      "\n\005title\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\020\n\010entindex\030" +
      "\003 \001(\005\022\r\n\005close\030\004 \001(\010\"S\n\026CDOTAUserMsg_Wor" +
      "ldLine\022\021\n\tplayer_id\030\001 \001(\005\022&\n\tworldline\030\002",
      " \001(\0132\023.CDOTAMsg_WorldLine\"F\n\033CDOTAUserMs" +
      "g_TournamentDrop\022\023\n\013winner_name\030\001 \001(\t\022\022\n" +
      "\nevent_type\030\002 \001(\005\"\223\001\n\026CDOTAUserMsg_ChatW" +
      "heel\022;\n\014chat_message\030\001 \001(\0162\026.EDOTAChatWh" +
      "eelMessage:\rk_EDOTA_CW_Ok\022\021\n\tplayer_id\030\002" +
      " \001(\r\022\022\n\naccount_id\030\003 \001(\r\022\025\n\rparam_hero_i" +
      "d\030\004 \001(\r\"]\n\035CDOTAUserMsg_ReceivedXmasGift" +
      "\022\021\n\tplayer_id\030\001 \001(\005\022\021\n\titem_name\030\002 \001(\t\022\026" +
      "\n\016inventory_slot\030\003 \001(\005\"V\n\027CDOTAUserMsg_S" +
      "howSurvey\022\021\n\tsurvey_id\030\001 \001(\005\022\020\n\010match_id",
      "\030\002 \001(\r\022\026\n\016response_style\030\003 \001(\t\"5\n CDOTAU" +
      "serMsg_UpdateSharedContent\022\021\n\tslot_type\030" +
      "\001 \001(\005\"!\n\037CDOTAUserMsg_TutorialRequestExp" +
      "\".\n\031CDOTAUserMsg_TutorialFade\022\021\n\ttgt_alp" +
      "ha\030\001 \001(\005\"x\n CDOTAUserMsg_TutorialPingMin" +
      "imap\022\021\n\tplayer_id\030\001 \001(\r\022\r\n\005pos_x\030\002 \001(\002\022\r" +
      "\n\005pos_y\030\003 \001(\002\022\r\n\005pos_z\030\004 \001(\002\022\024\n\014entity_i" +
      "ndex\030\005 \001(\005\"/\n\036CDOTA_UM_GamerulesStateCha" +
      "nged\022\r\n\005state\030\001 \001(\r\"E\n\035CDOTAUserMsg_AddQ" +
      "uestLogEntry\022\020\n\010npc_name\030\001 \001(\t\022\022\n\nnpc_di",
      "alog\030\002 \001(\t\"[\n\032CDOTAUserMsg_SendStatPopup" +
      "\022\021\n\tplayer_id\030\001 \001(\005\022*\n\tstatpopup\030\002 \001(\0132\027" +
      ".CDOTAMsg_SendStatPopup\"C\n\034CDOTAUserMsg_" +
      "SendRoshanPopup\022\021\n\treclaimed\030\001 \001(\010\022\020\n\010ga" +
      "metime\030\002 \001(\005\"L\n\032CDOTAUserMsg_SendFinalGo" +
      "ld\022\025\n\rreliable_gold\030\001 \003(\r\022\027\n\017unreliable_" +
      "gold\030\002 \003(\r\"K\n\026CDOTAUserMsg_CustomMsg\022\017\n\007" +
      "message\030\001 \001(\t\022\021\n\tplayer_id\030\002 \001(\005\022\r\n\005valu" +
      "e\030\003 \001(\005\"X\n\031CDOTAUserMsg_CoachHUDPing\022\021\n\t" +
      "player_id\030\001 \001(\r\022(\n\010hud_ping\030\002 \001(\0132\026.CDOT",
      "AMsg_CoachHUDPing\" \n\036CDOTAUserMsg_Client" +
      "LoadGridNav*\360\013\n\021EDotaUserMessages\022\036\n\032DOT" +
      "A_UM_AddUnitToSelection\020@\022\027\n\023DOTA_UM_AID" +
      "ebugLine\020A\022\025\n\021DOTA_UM_ChatEvent\020B\022\037\n\033DOT" +
      "A_UM_CombatHeroPositions\020C\022\031\n\025DOTA_UM_Co" +
      "mbatLogData\020D\022\036\n\032DOTA_UM_CombatLogShowDe" +
      "ath\020F\022\"\n\036DOTA_UM_CreateLinearProjectile\020" +
      "G\022#\n\037DOTA_UM_DestroyLinearProjectile\020H\022$" +
      "\n DOTA_UM_DodgeTrackingProjectiles\020I\022\034\n\030" +
      "DOTA_UM_GlobalLightColor\020J\022 \n\034DOTA_UM_Gl",
      "obalLightDirection\020K\022\032\n\026DOTA_UM_InvalidC" +
      "ommand\020L\022\030\n\024DOTA_UM_LocationPing\020M\022\023\n\017DO" +
      "TA_UM_MapLine\020N\022\033\n\027DOTA_UM_MiniKillCamIn" +
      "fo\020O\022\035\n\031DOTA_UM_MinimapDebugPoint\020P\022\030\n\024D" +
      "OTA_UM_MinimapEvent\020Q\022\034\n\030DOTA_UM_Nevermo" +
      "reRequiem\020R\022\031\n\025DOTA_UM_OverheadEvent\020S\022\036" +
      "\n\032DOTA_UM_SetNextAutobuyItem\020T\022\032\n\026DOTA_U" +
      "M_SharedCooldown\020U\022 \n\034DOTA_UM_SpectatorP" +
      "layerClick\020V\022\033\n\027DOTA_UM_TutorialTipInfo\020" +
      "W\022\025\n\021DOTA_UM_UnitEvent\020X\022\033\n\027DOTA_UM_Part",
      "icleManager\020Y\022\023\n\017DOTA_UM_BotChat\020Z\022\024\n\020DO" +
      "TA_UM_HudError\020[\022\031\n\025DOTA_UM_ItemPurchase" +
      "d\020\\\022\020\n\014DOTA_UM_Ping\020]\022\025\n\021DOTA_UM_ItemFou" +
      "nd\020^\022!\n\035DOTA_UM_CharacterSpeakConcept\020_\022" +
      "\026\n\022DOTA_UM_SwapVerify\020`\022\025\n\021DOTA_UM_World" +
      "Line\020a\022\032\n\026DOTA_UM_TournamentDrop\020b\022\025\n\021DO" +
      "TA_UM_ItemAlert\020c\022\032\n\026DOTA_UM_HalloweenDr" +
      "ops\020d\022\025\n\021DOTA_UM_ChatWheel\020e\022\034\n\030DOTA_UM_" +
      "ReceivedXmasGift\020f\022\037\n\033DOTA_UM_UpdateShar" +
      "edContent\020g\022\036\n\032DOTA_UM_TutorialRequestEx",
      "p\020h\022\037\n\033DOTA_UM_TutorialPingMinimap\020i\022!\n\035" +
      "DOTA_UM_GamerulesStateChanged\020j\022\026\n\022DOTA_" +
      "UM_ShowSurvey\020k\022\030\n\024DOTA_UM_TutorialFade\020" +
      "l\022\034\n\030DOTA_UM_AddQuestLogEntry\020m\022\031\n\025DOTA_" +
      "UM_SendStatPopup\020n\022\032\n\026DOTA_UM_TutorialFi" +
      "nish\020o\022\033\n\027DOTA_UM_SendRoshanPopup\020p\022\036\n\032D" +
      "OTA_UM_SendGenericToolTip\020q\022\031\n\025DOTA_UM_S" +
      "endFinalGold\020r\022\025\n\021DOTA_UM_CustomMsg\020s\022\030\n" +
      "\024DOTA_UM_CoachHUDPing\020t\022\035\n\031DOTA_UM_Clien" +
      "tLoadGridNav\020u*\304\021\n\021DOTA_CHAT_MESSAGE\022!\n\024",
      "CHAT_MESSAGE_INVALID\020\377\377\377\377\377\377\377\377\377\001\022\032\n\026CHAT_" +
      "MESSAGE_HERO_KILL\020\000\022\032\n\026CHAT_MESSAGE_HERO" +
      "_DENY\020\001\022\036\n\032CHAT_MESSAGE_BARRACKS_KILL\020\002\022" +
      "\033\n\027CHAT_MESSAGE_TOWER_KILL\020\003\022\033\n\027CHAT_MES" +
      "SAGE_TOWER_DENY\020\004\022\033\n\027CHAT_MESSAGE_FIRSTB" +
      "LOOD\020\005\022\034\n\030CHAT_MESSAGE_STREAK_KILL\020\006\022\030\n\024" +
      "CHAT_MESSAGE_BUYBACK\020\007\022\026\n\022CHAT_MESSAGE_A" +
      "EGIS\020\010\022\034\n\030CHAT_MESSAGE_ROSHAN_KILL\020\t\022\035\n\031" +
      "CHAT_MESSAGE_COURIER_LOST\020\n\022\"\n\036CHAT_MESS" +
      "AGE_COURIER_RESPAWNED\020\013\022\033\n\027CHAT_MESSAGE_",
      "GLYPH_USED\020\014\022\036\n\032CHAT_MESSAGE_ITEM_PURCHA" +
      "SE\020\r\022\030\n\024CHAT_MESSAGE_CONNECT\020\016\022\033\n\027CHAT_M" +
      "ESSAGE_DISCONNECT\020\017\022.\n*CHAT_MESSAGE_DISC" +
      "ONNECT_WAIT_FOR_RECONNECT\020\020\022*\n&CHAT_MESS" +
      "AGE_DISCONNECT_TIME_REMAINING\020\021\0221\n-CHAT_" +
      "MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL" +
      "\020\022\022\032\n\026CHAT_MESSAGE_RECONNECT\020\023\022\030\n\024CHAT_M" +
      "ESSAGE_ABANDON\020\024\022\036\n\032CHAT_MESSAGE_SAFE_TO" +
      "_LEAVE\020\025\022\034\n\030CHAT_MESSAGE_RUNE_PICKUP\020\026\022\034" +
      "\n\030CHAT_MESSAGE_RUNE_BOTTLE\020\027\022\031\n\025CHAT_MES",
      "SAGE_INTHEBAG\020\030\022\033\n\027CHAT_MESSAGE_SECRETSH" +
      "OP\020\031\022#\n\037CHAT_MESSAGE_ITEM_AUTOPURCHASED\020" +
      "\032\022\037\n\033CHAT_MESSAGE_ITEMS_COMBINED\020\033\022\035\n\031CH" +
      "AT_MESSAGE_SUPER_CREEPS\020\034\022%\n!CHAT_MESSAG" +
      "E_CANT_USE_ACTION_ITEM\020\035\022\"\n\036CHAT_MESSAGE" +
      "_CHARGES_EXHAUSTED\020\036\022\032\n\026CHAT_MESSAGE_CAN" +
      "TPAUSE\020\037\022\035\n\031CHAT_MESSAGE_NOPAUSESLEFT\020 \022" +
      "\035\n\031CHAT_MESSAGE_CANTPAUSEYET\020!\022\027\n\023CHAT_M" +
      "ESSAGE_PAUSED\020\"\022\"\n\036CHAT_MESSAGE_UNPAUSE_" +
      "COUNTDOWN\020#\022\031\n\025CHAT_MESSAGE_UNPAUSED\020$\022\036",
      "\n\032CHAT_MESSAGE_AUTO_UNPAUSED\020%\022\032\n\026CHAT_M" +
      "ESSAGE_YOUPAUSED\020&\022 \n\034CHAT_MESSAGE_CANTU" +
      "NPAUSETEAM\020\'\022(\n$CHAT_MESSAGE_SAFE_TO_LEA" +
      "VE_ABANDONER\020(\022\"\n\036CHAT_MESSAGE_VOICE_TEX" +
      "T_BANNED\020)\022.\n*CHAT_MESSAGE_SPECTATORS_WA" +
      "TCHING_THIS_GAME\020*\022 \n\034CHAT_MESSAGE_REPOR" +
      "T_REMINDER\020+\022\032\n\026CHAT_MESSAGE_ECON_ITEM\020," +
      "\022\026\n\022CHAT_MESSAGE_TAUNT\020-\022\027\n\023CHAT_MESSAGE" +
      "_RANDOM\020.\022\030\n\024CHAT_MESSAGE_RD_TURN\020/\022.\n*C" +
      "HAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_EARL",
      "Y\0200\022 \n\034CHAT_MESSAGE_DROP_RATE_BONUS\0201\022!\n" +
      "\035CHAT_MESSAGE_NO_BATTLE_POINTS\0202\022\035\n\031CHAT" +
      "_MESSAGE_DENIED_AEGIS\0203\022\036\n\032CHAT_MESSAGE_" +
      "INFORMATIONAL\0204\022\035\n\031CHAT_MESSAGE_AEGIS_ST" +
      "OLEN\0205\022\035\n\031CHAT_MESSAGE_ROSHAN_CANDY\0206\022\034\n" +
      "\030CHAT_MESSAGE_ITEM_GIFTED\0207\022\'\n#CHAT_MESS" +
      "AGE_HERO_KILL_WITH_GREEVIL\0208\022(\n$CHAT_MES" +
      "SAGE_HOLDOUT_TOWER_DESTROYED\0209\022\'\n#CHAT_M" +
      "ESSAGE_HOLDOUT_WALL_DESTROYED\020:\022&\n\"CHAT_" +
      "MESSAGE_HOLDOUT_WALL_FINISHED\020;\022,\n(CHAT_",
      "MESSAGE_SAFE_TO_LEAVE_ABANDONER_AFK\020<\0222\n" +
      ".CHAT_MESSAGE_SAFE_TO_LEAVE_ABANDONER_AF" +
      "K_EARLY\020=\022%\n!CHAT_MESSAGE_ABANDON_LIMITE" +
      "D_HERO\020>\0221\n-CHAT_MESSAGE_ABANDON_LIMITED" +
      "_HERO_EXPLANATION\020?\022(\n$CHAT_MESSAGE_DISC" +
      "ONNECT_LIMITED_HERO\020@*\262\001\n\035DOTA_NO_BATTLE" +
      "_POINTS_REASONS\022%\n!NO_BATTLE_POINTS_WRON" +
      "G_LOBBY_TYPE\020\001\022\"\n\036NO_BATTLE_POINTS_PRACT" +
      "ICE_BOTS\020\002\022#\n\037NO_BATTLE_POINTS_CHEATS_EN" +
      "ABLED\020\003\022!\n\035NO_BATTLE_POINTS_LOW_PRIORITY",
      "\020\004*7\n\027DOTA_CHAT_INFORMATIONAL\022\034\n\030COOP_BA" +
      "TTLE_POINTS_RULES\020\001*\251\001\n\024DOTA_COMBATLOG_T" +
      "YPES\022\031\n\025DOTA_COMBATLOG_DAMAGE\020\000\022\027\n\023DOTA_" +
      "COMBATLOG_HEAL\020\001\022\037\n\033DOTA_COMBATLOG_MODIF" +
      "IER_ADD\020\002\022\"\n\036DOTA_COMBATLOG_MODIFIER_REM" +
      "OVE\020\003\022\030\n\024DOTA_COMBATLOG_DEATH\020\004*\345\001\n\023EDot" +
      "aEntityMessages\022\024\n\020DOTA_UNIT_SPEECH\020\000\022\031\n" +
      "\025DOTA_UNIT_SPEECH_MUTE\020\001\022\031\n\025DOTA_UNIT_AD" +
      "D_GESTURE\020\002\022\034\n\030DOTA_UNIT_REMOVE_GESTURE\020" +
      "\003\022!\n\035DOTA_UNIT_REMOVE_ALL_GESTURES\020\004\022\032\n\026",
      "DOTA_UNIT_FADE_GESTURE\020\006\022%\n!DOTA_UNIT_SP" +
      "EECH_CLIENTSIDE_RULES\020\007*\332\004\n\025DOTA_PARTICL" +
      "E_MESSAGE\022&\n\"DOTA_PARTICLE_MANAGER_EVENT" +
      "_CREATE\020\000\022&\n\"DOTA_PARTICLE_MANAGER_EVENT" +
      "_UPDATE\020\001\022.\n*DOTA_PARTICLE_MANAGER_EVENT" +
      "_UPDATE_FORWARD\020\002\0222\n.DOTA_PARTICLE_MANAG" +
      "ER_EVENT_UPDATE_ORIENTATION\020\003\022/\n+DOTA_PA" +
      "RTICLE_MANAGER_EVENT_UPDATE_FALLBACK\020\004\022*" +
      "\n&DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT" +
      "\020\005\022-\n)DOTA_PARTICLE_MANAGER_EVENT_UPDATE",
      "_OFFSET\020\006\022\'\n#DOTA_PARTICLE_MANAGER_EVENT" +
      "_DESTROY\020\007\0221\n-DOTA_PARTICLE_MANAGER_EVEN" +
      "T_DESTROY_INVOLVING\020\010\022\'\n#DOTA_PARTICLE_M" +
      "ANAGER_EVENT_RELEASE\020\t\022\'\n#DOTA_PARTICLE_" +
      "MANAGER_EVENT_LATENCY\020\n\022+\n\'DOTA_PARTICLE" +
      "_MANAGER_EVENT_SHOULD_DRAW\020\013\022&\n\"DOTA_PAR" +
      "TICLE_MANAGER_EVENT_FROZEN\020\014*\356\003\n\023DOTA_OV" +
      "ERHEAD_ALERT\022\027\n\023OVERHEAD_ALERT_GOLD\020\000\022\027\n" +
      "\023OVERHEAD_ALERT_DENY\020\001\022\033\n\027OVERHEAD_ALERT" +
      "_CRITICAL\020\002\022\025\n\021OVERHEAD_ALERT_XP\020\003\022%\n!OV",
      "ERHEAD_ALERT_BONUS_SPELL_DAMAGE\020\004\022\027\n\023OVE" +
      "RHEAD_ALERT_MISS\020\005\022\031\n\025OVERHEAD_ALERT_DAM" +
      "AGE\020\006\022\030\n\024OVERHEAD_ALERT_EVADE\020\007\022\030\n\024OVERH" +
      "EAD_ALERT_BLOCK\020\010\022&\n\"OVERHEAD_ALERT_BONU" +
      "S_POISON_DAMAGE\020\t\022\027\n\023OVERHEAD_ALERT_HEAL" +
      "\020\n\022\033\n\027OVERHEAD_ALERT_MANA_ADD\020\013\022\034\n\030OVERH" +
      "EAD_ALERT_MANA_LOSS\020\014\022!\n\035OVERHEAD_ALERT_" +
      "LAST_HIT_EARLY\020\r\022!\n\035OVERHEAD_ALERT_LAST_" +
      "HIT_CLOSE\020\016\022 \n\034OVERHEAD_ALERT_LAST_HIT_M" +
      "ISS\020\017"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CDOTAUserMsg_AIDebugLine_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CDOTAUserMsg_AIDebugLine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_AIDebugLine_descriptor,
              new java.lang.String[] { "Message", },
              DotaUsermessages.CDOTAUserMsg_AIDebugLine.class,
              DotaUsermessages.CDOTAUserMsg_AIDebugLine.Builder.class);
          internal_static_CDOTAUserMsg_Ping_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_CDOTAUserMsg_Ping_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_Ping_descriptor,
              new java.lang.String[] { "Message", },
              DotaUsermessages.CDOTAUserMsg_Ping.class,
              DotaUsermessages.CDOTAUserMsg_Ping.Builder.class);
          internal_static_CDOTAUserMsg_SwapVerify_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CDOTAUserMsg_SwapVerify_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SwapVerify_descriptor,
              new java.lang.String[] { "PlayerId", },
              DotaUsermessages.CDOTAUserMsg_SwapVerify.class,
              DotaUsermessages.CDOTAUserMsg_SwapVerify.Builder.class);
          internal_static_CDOTAUserMsg_ChatEvent_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_CDOTAUserMsg_ChatEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ChatEvent_descriptor,
              new java.lang.String[] { "Type", "Value", "Playerid1", "Playerid2", "Playerid3", "Playerid4", "Playerid5", "Playerid6", },
              DotaUsermessages.CDOTAUserMsg_ChatEvent.class,
              DotaUsermessages.CDOTAUserMsg_ChatEvent.Builder.class);
          internal_static_CDOTAUserMsg_CombatLogData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_CDOTAUserMsg_CombatLogData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CombatLogData_descriptor,
              new java.lang.String[] { "Type", "TargetName", "AttackerName", "AttackerIllusion", "TargetIllusion", "InflictorName", "Value", "Health", "Time", },
              DotaUsermessages.CDOTAUserMsg_CombatLogData.class,
              DotaUsermessages.CDOTAUserMsg_CombatLogData.Builder.class);
          internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_CDOTAUserMsg_CombatLogShowDeath_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CombatLogShowDeath_descriptor,
              new java.lang.String[] { },
              DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.class,
              DotaUsermessages.CDOTAUserMsg_CombatLogShowDeath.Builder.class);
          internal_static_CDOTAUserMsg_BotChat_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_CDOTAUserMsg_BotChat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_BotChat_descriptor,
              new java.lang.String[] { "PlayerId", "Format", "Message", "Target", },
              DotaUsermessages.CDOTAUserMsg_BotChat.class,
              DotaUsermessages.CDOTAUserMsg_BotChat.Builder.class);
          internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_CDOTAUserMsg_CombatHeroPositions_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CombatHeroPositions_descriptor,
              new java.lang.String[] { "Index", "Time", "WorldPos", "Health", },
              DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.class,
              DotaUsermessages.CDOTAUserMsg_CombatHeroPositions.Builder.class);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor,
              new java.lang.String[] { "Attackers", },
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.class,
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Builder.class);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor =
            internal_static_CDOTAUserMsg_MiniKillCamInfo_descriptor.getNestedTypes().get(0);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor,
              new java.lang.String[] { "Attacker", "TotalDamage", "Abilities", },
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.class,
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Builder.class);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor =
            internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_descriptor.getNestedTypes().get(0);
          internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_descriptor,
              new java.lang.String[] { "Ability", "Damage", },
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.class,
              DotaUsermessages.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.Builder.class);
          internal_static_CDOTAUserMsg_GlobalLightColor_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_CDOTAUserMsg_GlobalLightColor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_GlobalLightColor_descriptor,
              new java.lang.String[] { "Color", "Duration", },
              DotaUsermessages.CDOTAUserMsg_GlobalLightColor.class,
              DotaUsermessages.CDOTAUserMsg_GlobalLightColor.Builder.class);
          internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_CDOTAUserMsg_GlobalLightDirection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_GlobalLightDirection_descriptor,
              new java.lang.String[] { "Direction", "Duration", },
              DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.class,
              DotaUsermessages.CDOTAUserMsg_GlobalLightDirection.Builder.class);
          internal_static_CDOTAUserMsg_LocationPing_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_CDOTAUserMsg_LocationPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_LocationPing_descriptor,
              new java.lang.String[] { "PlayerId", "LocationPing", },
              DotaUsermessages.CDOTAUserMsg_LocationPing.class,
              DotaUsermessages.CDOTAUserMsg_LocationPing.Builder.class);
          internal_static_CDOTAUserMsg_ItemAlert_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_CDOTAUserMsg_ItemAlert_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ItemAlert_descriptor,
              new java.lang.String[] { "PlayerId", "ItemAlert", },
              DotaUsermessages.CDOTAUserMsg_ItemAlert.class,
              DotaUsermessages.CDOTAUserMsg_ItemAlert.Builder.class);
          internal_static_CDOTAUserMsg_MinimapEvent_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_CDOTAUserMsg_MinimapEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MinimapEvent_descriptor,
              new java.lang.String[] { "EventType", "EntityHandle", "X", "Y", "Duration", },
              DotaUsermessages.CDOTAUserMsg_MinimapEvent.class,
              DotaUsermessages.CDOTAUserMsg_MinimapEvent.Builder.class);
          internal_static_CDOTAUserMsg_MapLine_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_CDOTAUserMsg_MapLine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MapLine_descriptor,
              new java.lang.String[] { "PlayerId", "Mapline", },
              DotaUsermessages.CDOTAUserMsg_MapLine.class,
              DotaUsermessages.CDOTAUserMsg_MapLine.Builder.class);
          internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_CDOTAUserMsg_MinimapDebugPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_MinimapDebugPoint_descriptor,
              new java.lang.String[] { "Location", "Color", "Size", "Duration", },
              DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.class,
              DotaUsermessages.CDOTAUserMsg_MinimapDebugPoint.Builder.class);
          internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_CDOTAUserMsg_CreateLinearProjectile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CreateLinearProjectile_descriptor,
              new java.lang.String[] { "Origin", "Velocity", "Latency", "Entindex", "ParticleIndex", "Handle", },
              DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.class,
              DotaUsermessages.CDOTAUserMsg_CreateLinearProjectile.Builder.class);
          internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_CDOTAUserMsg_DestroyLinearProjectile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_DestroyLinearProjectile_descriptor,
              new java.lang.String[] { "Handle", },
              DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.class,
              DotaUsermessages.CDOTAUserMsg_DestroyLinearProjectile.Builder.class);
          internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_DodgeTrackingProjectiles_descriptor,
              new java.lang.String[] { "Entindex", },
              DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.class,
              DotaUsermessages.CDOTAUserMsg_DodgeTrackingProjectiles.Builder.class);
          internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_CDOTAUserMsg_SpectatorPlayerClick_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SpectatorPlayerClick_descriptor,
              new java.lang.String[] { "Entindex", "OrderType", "TargetIndex", },
              DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.class,
              DotaUsermessages.CDOTAUserMsg_SpectatorPlayerClick.Builder.class);
          internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_CDOTAUserMsg_NevermoreRequiem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_NevermoreRequiem_descriptor,
              new java.lang.String[] { "EntityHandle", "Lines", "Origin", },
              DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.class,
              DotaUsermessages.CDOTAUserMsg_NevermoreRequiem.Builder.class);
          internal_static_CDOTAUserMsg_InvalidCommand_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_CDOTAUserMsg_InvalidCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_InvalidCommand_descriptor,
              new java.lang.String[] { "Message", },
              DotaUsermessages.CDOTAUserMsg_InvalidCommand.class,
              DotaUsermessages.CDOTAUserMsg_InvalidCommand.Builder.class);
          internal_static_CDOTAUserMsg_HudError_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_CDOTAUserMsg_HudError_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_HudError_descriptor,
              new java.lang.String[] { "OrderId", },
              DotaUsermessages.CDOTAUserMsg_HudError.class,
              DotaUsermessages.CDOTAUserMsg_HudError.Builder.class);
          internal_static_CDOTAUserMsg_SharedCooldown_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_CDOTAUserMsg_SharedCooldown_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SharedCooldown_descriptor,
              new java.lang.String[] { "Entindex", "Name", "Cooldown", "NameIndex", },
              DotaUsermessages.CDOTAUserMsg_SharedCooldown.class,
              DotaUsermessages.CDOTAUserMsg_SharedCooldown.Builder.class);
          internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_CDOTAUserMsg_SetNextAutobuyItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SetNextAutobuyItem_descriptor,
              new java.lang.String[] { "Name", },
              DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.class,
              DotaUsermessages.CDOTAUserMsg_SetNextAutobuyItem.Builder.class);
          internal_static_CDOTAUserMsg_HalloweenDrops_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_CDOTAUserMsg_HalloweenDrops_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_HalloweenDrops_descriptor,
              new java.lang.String[] { "ItemDefs", "PlayerIds", "PrizeList", },
              DotaUsermessages.CDOTAUserMsg_HalloweenDrops.class,
              DotaUsermessages.CDOTAUserMsg_HalloweenDrops.Builder.class);
          internal_static_CDOTAResponseQuerySerialized_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_CDOTAResponseQuerySerialized_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAResponseQuerySerialized_descriptor,
              new java.lang.String[] { "Facts", },
              DotaUsermessages.CDOTAResponseQuerySerialized.class,
              DotaUsermessages.CDOTAResponseQuerySerialized.Builder.class);
          internal_static_CDOTAResponseQuerySerialized_Fact_descriptor =
            internal_static_CDOTAResponseQuerySerialized_descriptor.getNestedTypes().get(0);
          internal_static_CDOTAResponseQuerySerialized_Fact_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAResponseQuerySerialized_Fact_descriptor,
              new java.lang.String[] { "Key", "Valtype", "ValNumeric", "ValString", },
              DotaUsermessages.CDOTAResponseQuerySerialized.Fact.class,
              DotaUsermessages.CDOTAResponseQuerySerialized.Fact.Builder.class);
          internal_static_CDOTASpeechMatchOnClient_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_CDOTASpeechMatchOnClient_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTASpeechMatchOnClient_descriptor,
              new java.lang.String[] { "Concept", "RecipientType", "Responsequery", "Randomseed", },
              DotaUsermessages.CDOTASpeechMatchOnClient.class,
              DotaUsermessages.CDOTASpeechMatchOnClient.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_CDOTAUserMsg_UnitEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_descriptor,
              new java.lang.String[] { "MsgType", "EntityIndex", "Speech", "SpeechMute", "AddGesture", "RemoveGesture", "BloodImpact", "FadeGesture", "SpeechMatchOnClient", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(0);
          internal_static_CDOTAUserMsg_UnitEvent_Speech_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_Speech_descriptor,
              new java.lang.String[] { "Concept", "Response", "RecipientType", "Level", "Muteable", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.Speech.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(1);
          internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_SpeechMute_descriptor,
              new java.lang.String[] { "Delay", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.SpeechMute.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(2);
          internal_static_CDOTAUserMsg_UnitEvent_AddGesture_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_AddGesture_descriptor,
              new java.lang.String[] { "Activity", "Slot", "FadeIn", "FadeOut", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.AddGesture.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(3);
          internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_RemoveGesture_descriptor,
              new java.lang.String[] { "Activity", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.RemoveGesture.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(4);
          internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_BloodImpact_descriptor,
              new java.lang.String[] { "Scale", "XNormal", "YNormal", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.BloodImpact.Builder.class);
          internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor =
            internal_static_CDOTAUserMsg_UnitEvent_descriptor.getNestedTypes().get(5);
          internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UnitEvent_FadeGesture_descriptor,
              new java.lang.String[] { "Activity", },
              DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.class,
              DotaUsermessages.CDOTAUserMsg_UnitEvent.FadeGesture.Builder.class);
          internal_static_CDOTAUserMsg_ItemPurchased_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_CDOTAUserMsg_ItemPurchased_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ItemPurchased_descriptor,
              new java.lang.String[] { "ItemIndex", },
              DotaUsermessages.CDOTAUserMsg_ItemPurchased.class,
              DotaUsermessages.CDOTAUserMsg_ItemPurchased.Builder.class);
          internal_static_CDOTAUserMsg_ItemFound_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_CDOTAUserMsg_ItemFound_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ItemFound_descriptor,
              new java.lang.String[] { "Player", "Quality", "Rarity", "Method", "Itemdef", },
              DotaUsermessages.CDOTAUserMsg_ItemFound.class,
              DotaUsermessages.CDOTAUserMsg_ItemFound.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_CDOTAUserMsg_ParticleManager_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_descriptor,
              new java.lang.String[] { "Type", "Index", "ReleaseParticleIndex", "CreateParticle", "DestroyParticle", "DestroyParticleInvolving", "UpdateParticle", "UpdateParticleFwd", "UpdateParticleOrient", "UpdateParticleFallback", "UpdateParticleOffset", "UpdateParticleEnt", "UpdateParticleShouldDraw", "UpdateParticleSetFrozen", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(0);
          internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_descriptor,
              new java.lang.String[] { },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(1);
          internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_CreateParticle_descriptor,
              new java.lang.String[] { "ParticleNameIndex", "AttachType", "EntityHandle", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.CreateParticle.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(2);
          internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_DestroyParticle_descriptor,
              new java.lang.String[] { "DestroyImmediately", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticle.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(3);
          internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_descriptor,
              new java.lang.String[] { "DestroyImmediately", "EntityHandle", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(4);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticle_descriptor,
              new java.lang.String[] { "ControlPoint", "Position", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticle.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(5);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_descriptor,
              new java.lang.String[] { "ControlPoint", "Forward", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(6);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_descriptor,
              new java.lang.String[] { "ControlPoint", "Forward", "Right", "Up", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(7);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_descriptor,
              new java.lang.String[] { "ControlPoint", "Position", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(8);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_descriptor,
              new java.lang.String[] { "ControlPoint", "OriginOffset", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(9);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_descriptor,
              new java.lang.String[] { "ControlPoint", "EntityHandle", "AttachType", "Attachment", "FallbackPosition", "IncludeWearables", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(10);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_descriptor,
              new java.lang.String[] { "SetFrozen", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.Builder.class);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor =
            internal_static_CDOTAUserMsg_ParticleManager_descriptor.getNestedTypes().get(11);
          internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_descriptor,
              new java.lang.String[] { "ShouldDraw", },
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.class,
              DotaUsermessages.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.Builder.class);
          internal_static_CDOTAUserMsg_OverheadEvent_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_CDOTAUserMsg_OverheadEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_OverheadEvent_descriptor,
              new java.lang.String[] { "MessageType", "Value", "TargetPlayerEntindex", "TargetEntindex", "SourcePlayerEntindex", },
              DotaUsermessages.CDOTAUserMsg_OverheadEvent.class,
              DotaUsermessages.CDOTAUserMsg_OverheadEvent.Builder.class);
          internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_CDOTAUserMsg_TutorialTipInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TutorialTipInfo_descriptor,
              new java.lang.String[] { "Name", "Progress", },
              DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.class,
              DotaUsermessages.CDOTAUserMsg_TutorialTipInfo.Builder.class);
          internal_static_CDOTAUserMsg_TutorialFinish_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_CDOTAUserMsg_TutorialFinish_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TutorialFinish_descriptor,
              new java.lang.String[] { "Heading", "Emblem", "Body", "Success", },
              DotaUsermessages.CDOTAUserMsg_TutorialFinish.class,
              DotaUsermessages.CDOTAUserMsg_TutorialFinish.Builder.class);
          internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_CDOTAUserMsg_SendGenericToolTip_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SendGenericToolTip_descriptor,
              new java.lang.String[] { "Title", "Text", "Entindex", "Close", },
              DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.class,
              DotaUsermessages.CDOTAUserMsg_SendGenericToolTip.Builder.class);
          internal_static_CDOTAUserMsg_WorldLine_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_CDOTAUserMsg_WorldLine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_WorldLine_descriptor,
              new java.lang.String[] { "PlayerId", "Worldline", },
              DotaUsermessages.CDOTAUserMsg_WorldLine.class,
              DotaUsermessages.CDOTAUserMsg_WorldLine.Builder.class);
          internal_static_CDOTAUserMsg_TournamentDrop_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_CDOTAUserMsg_TournamentDrop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TournamentDrop_descriptor,
              new java.lang.String[] { "WinnerName", "EventType", },
              DotaUsermessages.CDOTAUserMsg_TournamentDrop.class,
              DotaUsermessages.CDOTAUserMsg_TournamentDrop.Builder.class);
          internal_static_CDOTAUserMsg_ChatWheel_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_CDOTAUserMsg_ChatWheel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ChatWheel_descriptor,
              new java.lang.String[] { "ChatMessage", "PlayerId", "AccountId", "ParamHeroId", },
              DotaUsermessages.CDOTAUserMsg_ChatWheel.class,
              DotaUsermessages.CDOTAUserMsg_ChatWheel.Builder.class);
          internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_CDOTAUserMsg_ReceivedXmasGift_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ReceivedXmasGift_descriptor,
              new java.lang.String[] { "PlayerId", "ItemName", "InventorySlot", },
              DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.class,
              DotaUsermessages.CDOTAUserMsg_ReceivedXmasGift.Builder.class);
          internal_static_CDOTAUserMsg_ShowSurvey_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_CDOTAUserMsg_ShowSurvey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ShowSurvey_descriptor,
              new java.lang.String[] { "SurveyId", "MatchId", "ResponseStyle", },
              DotaUsermessages.CDOTAUserMsg_ShowSurvey.class,
              DotaUsermessages.CDOTAUserMsg_ShowSurvey.Builder.class);
          internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_CDOTAUserMsg_UpdateSharedContent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_UpdateSharedContent_descriptor,
              new java.lang.String[] { "SlotType", },
              DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.class,
              DotaUsermessages.CDOTAUserMsg_UpdateSharedContent.Builder.class);
          internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_CDOTAUserMsg_TutorialRequestExp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TutorialRequestExp_descriptor,
              new java.lang.String[] { },
              DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.class,
              DotaUsermessages.CDOTAUserMsg_TutorialRequestExp.Builder.class);
          internal_static_CDOTAUserMsg_TutorialFade_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_CDOTAUserMsg_TutorialFade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TutorialFade_descriptor,
              new java.lang.String[] { "TgtAlpha", },
              DotaUsermessages.CDOTAUserMsg_TutorialFade.class,
              DotaUsermessages.CDOTAUserMsg_TutorialFade.Builder.class);
          internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_CDOTAUserMsg_TutorialPingMinimap_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_TutorialPingMinimap_descriptor,
              new java.lang.String[] { "PlayerId", "PosX", "PosY", "PosZ", "EntityIndex", },
              DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.class,
              DotaUsermessages.CDOTAUserMsg_TutorialPingMinimap.Builder.class);
          internal_static_CDOTA_UM_GamerulesStateChanged_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_CDOTA_UM_GamerulesStateChanged_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTA_UM_GamerulesStateChanged_descriptor,
              new java.lang.String[] { "State", },
              DotaUsermessages.CDOTA_UM_GamerulesStateChanged.class,
              DotaUsermessages.CDOTA_UM_GamerulesStateChanged.Builder.class);
          internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_CDOTAUserMsg_AddQuestLogEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_AddQuestLogEntry_descriptor,
              new java.lang.String[] { "NpcName", "NpcDialog", },
              DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.class,
              DotaUsermessages.CDOTAUserMsg_AddQuestLogEntry.Builder.class);
          internal_static_CDOTAUserMsg_SendStatPopup_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_CDOTAUserMsg_SendStatPopup_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SendStatPopup_descriptor,
              new java.lang.String[] { "PlayerId", "Statpopup", },
              DotaUsermessages.CDOTAUserMsg_SendStatPopup.class,
              DotaUsermessages.CDOTAUserMsg_SendStatPopup.Builder.class);
          internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_CDOTAUserMsg_SendRoshanPopup_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SendRoshanPopup_descriptor,
              new java.lang.String[] { "Reclaimed", "Gametime", },
              DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.class,
              DotaUsermessages.CDOTAUserMsg_SendRoshanPopup.Builder.class);
          internal_static_CDOTAUserMsg_SendFinalGold_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_CDOTAUserMsg_SendFinalGold_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_SendFinalGold_descriptor,
              new java.lang.String[] { "ReliableGold", "UnreliableGold", },
              DotaUsermessages.CDOTAUserMsg_SendFinalGold.class,
              DotaUsermessages.CDOTAUserMsg_SendFinalGold.Builder.class);
          internal_static_CDOTAUserMsg_CustomMsg_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_CDOTAUserMsg_CustomMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CustomMsg_descriptor,
              new java.lang.String[] { "Message", "PlayerId", "Value", },
              DotaUsermessages.CDOTAUserMsg_CustomMsg.class,
              DotaUsermessages.CDOTAUserMsg_CustomMsg.Builder.class);
          internal_static_CDOTAUserMsg_CoachHUDPing_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_CDOTAUserMsg_CoachHUDPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_CoachHUDPing_descriptor,
              new java.lang.String[] { "PlayerId", "HudPing", },
              DotaUsermessages.CDOTAUserMsg_CoachHUDPing.class,
              DotaUsermessages.CDOTAUserMsg_CoachHUDPing.Builder.class);
          internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_CDOTAUserMsg_ClientLoadGridNav_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTAUserMsg_ClientLoadGridNav_descriptor,
              new java.lang.String[] { },
              DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.class,
              DotaUsermessages.CDOTAUserMsg_ClientLoadGridNav.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
          Networkbasetypes.getDescriptor(),
          AiActivity.getDescriptor(),
          DotaCommonmessages.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
